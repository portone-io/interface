// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1/payment/payment.proto

#include "v1/payment/payment.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace payment {
constexpr Payment::Payment(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : cancel_history_()
  , cancel_receipt_urls_()
  , apply_num_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , bank_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_addr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_postcode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_tel_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , cancel_reason_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_number_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , channel_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , currency_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , custom_data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_uid_usage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , fail_reason_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , imp_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , merchant_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pay_method_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pg_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pg_provider_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pg_tid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , receipt_url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_agent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , vbank_code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , vbank_holder_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , vbank_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , vbank_num_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , emb_pg_provider_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , promotion_(nullptr)
  , amount_(0)
  , bank_code_(0)
  , cancel_amount_(0)
  , cancelled_at_(0)
  , card_quota_(0)
  , card_type_(0)
  , cash_receipt_issued_(false)
  , escrow_(false)
  , failed_at_(0)
  , paid_at_(0)
  , started_at_(0)
  , vbank_date_(0)
  , vbank_issued_at_(0){}
struct PaymentDefaultTypeInternal {
  constexpr PaymentDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentDefaultTypeInternal() {}
  union {
    Payment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentDefaultTypeInternal _Payment_default_instance_;
constexpr CancelHistory::CancelHistory(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pg_tid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , reason_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , receipt_url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(0)
  , cancelled_at_(0){}
struct CancelHistoryDefaultTypeInternal {
  constexpr CancelHistoryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CancelHistoryDefaultTypeInternal() {}
  union {
    CancelHistory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CancelHistoryDefaultTypeInternal _CancelHistory_default_instance_;
constexpr PaymentPage::PaymentPage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : list_()
  , total_(0)
  , previous_(0)
  , next_(0){}
struct PaymentPageDefaultTypeInternal {
  constexpr PaymentPageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentPageDefaultTypeInternal() {}
  union {
    PaymentPage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentPageDefaultTypeInternal _PaymentPage_default_instance_;
constexpr PaymentBalanceDetail::PaymentBalanceDetail(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tax_free_(0)
  , supply_(0)
  , vat_(0)
  , service_(0){}
struct PaymentBalanceDetailDefaultTypeInternal {
  constexpr PaymentBalanceDetailDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentBalanceDetailDefaultTypeInternal() {}
  union {
    PaymentBalanceDetail _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentBalanceDetailDefaultTypeInternal _PaymentBalanceDetail_default_instance_;
constexpr PaymentBalance::PaymentBalance(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : histories_()
  , cash_receipt_(nullptr)
  , primary_(nullptr)
  , secondary_(nullptr)
  , discount_(nullptr)
  , amount_(0){}
struct PaymentBalanceDefaultTypeInternal {
  constexpr PaymentBalanceDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentBalanceDefaultTypeInternal() {}
  union {
    PaymentBalance _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentBalanceDefaultTypeInternal _PaymentBalance_default_instance_;
constexpr PaymentBalanceHistory::PaymentBalanceHistory(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : cash_receipt_(nullptr)
  , primary_(nullptr)
  , secondary_(nullptr)
  , discount_(nullptr)
  , created_(0){}
struct PaymentBalanceHistoryDefaultTypeInternal {
  constexpr PaymentBalanceHistoryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentBalanceHistoryDefaultTypeInternal() {}
  union {
    PaymentBalanceHistory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentBalanceHistoryDefaultTypeInternal _PaymentBalanceHistory_default_instance_;
constexpr PaymentRequest::PaymentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : imp_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct PaymentRequestDefaultTypeInternal {
  constexpr PaymentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentRequestDefaultTypeInternal() {}
  union {
    PaymentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentRequestDefaultTypeInternal _PaymentRequest_default_instance_;
constexpr PaymentResponse::PaymentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , response_(nullptr)
  , code_(0){}
struct PaymentResponseDefaultTypeInternal {
  constexpr PaymentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentResponseDefaultTypeInternal() {}
  union {
    PaymentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentResponseDefaultTypeInternal _PaymentResponse_default_instance_;
constexpr PaymentsRequest::PaymentsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : imp_uid_(){}
struct PaymentsRequestDefaultTypeInternal {
  constexpr PaymentsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentsRequestDefaultTypeInternal() {}
  union {
    PaymentsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentsRequestDefaultTypeInternal _PaymentsRequest_default_instance_;
constexpr PaymentsResponse::PaymentsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : response_()
  , message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , code_(0){}
struct PaymentsResponseDefaultTypeInternal {
  constexpr PaymentsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentsResponseDefaultTypeInternal() {}
  union {
    PaymentsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentsResponseDefaultTypeInternal _PaymentsResponse_default_instance_;
constexpr PaymentsMerchantUidRequest::PaymentsMerchantUidRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : merchant_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sorting_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_(0){}
struct PaymentsMerchantUidRequestDefaultTypeInternal {
  constexpr PaymentsMerchantUidRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentsMerchantUidRequestDefaultTypeInternal() {}
  union {
    PaymentsMerchantUidRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentsMerchantUidRequestDefaultTypeInternal _PaymentsMerchantUidRequest_default_instance_;
constexpr PaymentsMerchantUidResponse::PaymentsMerchantUidResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , response_(nullptr)
  , code_(0){}
struct PaymentsMerchantUidResponseDefaultTypeInternal {
  constexpr PaymentsMerchantUidResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentsMerchantUidResponseDefaultTypeInternal() {}
  union {
    PaymentsMerchantUidResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentsMerchantUidResponseDefaultTypeInternal _PaymentsMerchantUidResponse_default_instance_;
constexpr PaymentStatusRequest::PaymentStatusRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sorting_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_(0)
  , limit_(0)
  , from_(0)
  , to_(0){}
struct PaymentStatusRequestDefaultTypeInternal {
  constexpr PaymentStatusRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentStatusRequestDefaultTypeInternal() {}
  union {
    PaymentStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentStatusRequestDefaultTypeInternal _PaymentStatusRequest_default_instance_;
constexpr PaymentStatusResponse::PaymentStatusResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , response_(nullptr)
  , code_(0){}
struct PaymentStatusResponseDefaultTypeInternal {
  constexpr PaymentStatusResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentStatusResponseDefaultTypeInternal() {}
  union {
    PaymentStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentStatusResponseDefaultTypeInternal _PaymentStatusResponse_default_instance_;
constexpr PaymentMerchantUidRequest::PaymentMerchantUidRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : merchant_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sorting_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct PaymentMerchantUidRequestDefaultTypeInternal {
  constexpr PaymentMerchantUidRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentMerchantUidRequestDefaultTypeInternal() {}
  union {
    PaymentMerchantUidRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentMerchantUidRequestDefaultTypeInternal _PaymentMerchantUidRequest_default_instance_;
constexpr PaymentMerchantUidResponse::PaymentMerchantUidResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , response_(nullptr)
  , code_(0){}
struct PaymentMerchantUidResponseDefaultTypeInternal {
  constexpr PaymentMerchantUidResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentMerchantUidResponseDefaultTypeInternal() {}
  union {
    PaymentMerchantUidResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentMerchantUidResponseDefaultTypeInternal _PaymentMerchantUidResponse_default_instance_;
constexpr PaymentCancelRequest::PaymentCancelRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : imp_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , merchant_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , reason_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , refund_holder_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , refund_bank_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , refund_account_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(0)
  , tax_free_(0)
  , checksum_(0){}
struct PaymentCancelRequestDefaultTypeInternal {
  constexpr PaymentCancelRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentCancelRequestDefaultTypeInternal() {}
  union {
    PaymentCancelRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentCancelRequestDefaultTypeInternal _PaymentCancelRequest_default_instance_;
constexpr PaymentCancelResponse::PaymentCancelResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , response_(nullptr)
  , code_(0){}
struct PaymentCancelResponseDefaultTypeInternal {
  constexpr PaymentCancelResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentCancelResponseDefaultTypeInternal() {}
  union {
    PaymentCancelResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentCancelResponseDefaultTypeInternal _PaymentCancelResponse_default_instance_;
constexpr PaymentBalanceRequest::PaymentBalanceRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : imp_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct PaymentBalanceRequestDefaultTypeInternal {
  constexpr PaymentBalanceRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentBalanceRequestDefaultTypeInternal() {}
  union {
    PaymentBalanceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentBalanceRequestDefaultTypeInternal _PaymentBalanceRequest_default_instance_;
constexpr PaymentBalanceResponse::PaymentBalanceResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , response_(nullptr)
  , code_(0){}
struct PaymentBalanceResponseDefaultTypeInternal {
  constexpr PaymentBalanceResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentBalanceResponseDefaultTypeInternal() {}
  union {
    PaymentBalanceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentBalanceResponseDefaultTypeInternal _PaymentBalanceResponse_default_instance_;
constexpr Prepare::Prepare(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : merchant_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(0){}
struct PrepareDefaultTypeInternal {
  constexpr PrepareDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PrepareDefaultTypeInternal() {}
  union {
    Prepare _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PrepareDefaultTypeInternal _Prepare_default_instance_;
constexpr PaymentPrepareRequest::PaymentPrepareRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : merchant_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(0){}
struct PaymentPrepareRequestDefaultTypeInternal {
  constexpr PaymentPrepareRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentPrepareRequestDefaultTypeInternal() {}
  union {
    PaymentPrepareRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentPrepareRequestDefaultTypeInternal _PaymentPrepareRequest_default_instance_;
constexpr PaymentPrepareResponse::PaymentPrepareResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , response_(nullptr)
  , code_(0){}
struct PaymentPrepareResponseDefaultTypeInternal {
  constexpr PaymentPrepareResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentPrepareResponseDefaultTypeInternal() {}
  union {
    PaymentPrepareResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentPrepareResponseDefaultTypeInternal _PaymentPrepareResponse_default_instance_;
constexpr PaymentGetPrepareRequest::PaymentGetPrepareRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : merchant_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct PaymentGetPrepareRequestDefaultTypeInternal {
  constexpr PaymentGetPrepareRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentGetPrepareRequestDefaultTypeInternal() {}
  union {
    PaymentGetPrepareRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentGetPrepareRequestDefaultTypeInternal _PaymentGetPrepareRequest_default_instance_;
constexpr Promotion::Promotion(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , discount_(0){}
struct PromotionDefaultTypeInternal {
  constexpr PromotionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PromotionDefaultTypeInternal() {}
  union {
    Promotion _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PromotionDefaultTypeInternal _Promotion_default_instance_;
}  // namespace payment
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_v1_2fpayment_2fpayment_2eproto[25];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_v1_2fpayment_2fpayment_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_v1_2fpayment_2fpayment_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_v1_2fpayment_2fpayment_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::Payment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::Payment, amount_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, apply_num_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, bank_code_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, bank_name_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, buyer_addr_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, buyer_email_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, buyer_name_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, buyer_postcode_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, buyer_tel_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, cancel_amount_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, cancel_history_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, cancel_reason_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, cancel_receipt_urls_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, cancelled_at_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, card_code_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, card_name_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, card_number_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, card_quota_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, card_type_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, cash_receipt_issued_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, channel_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, currency_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, custom_data_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, customer_uid_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, customer_uid_usage_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, escrow_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, fail_reason_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, failed_at_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, imp_uid_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, merchant_uid_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, name_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, paid_at_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, pay_method_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, pg_id_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, pg_provider_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, pg_tid_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, receipt_url_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, started_at_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, status_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, user_agent_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, vbank_code_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, vbank_date_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, vbank_holder_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, vbank_issued_at_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, vbank_name_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, vbank_num_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, promotion_),
  PROTOBUF_FIELD_OFFSET(::payment::Payment, emb_pg_provider_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::CancelHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::CancelHistory, pg_tid_),
  PROTOBUF_FIELD_OFFSET(::payment::CancelHistory, amount_),
  PROTOBUF_FIELD_OFFSET(::payment::CancelHistory, cancelled_at_),
  PROTOBUF_FIELD_OFFSET(::payment::CancelHistory, reason_),
  PROTOBUF_FIELD_OFFSET(::payment::CancelHistory, receipt_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentPage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentPage, total_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentPage, previous_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentPage, next_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentPage, list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalanceDetail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalanceDetail, tax_free_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalanceDetail, supply_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalanceDetail, vat_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalanceDetail, service_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalance, amount_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalance, cash_receipt_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalance, primary_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalance, secondary_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalance, discount_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalance, histories_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalanceHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalanceHistory, cash_receipt_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalanceHistory, primary_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalanceHistory, secondary_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalanceHistory, discount_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalanceHistory, created_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentRequest, imp_uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentResponse, code_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentResponse, message_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentsRequest, imp_uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentsResponse, code_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentsResponse, message_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentsResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentsMerchantUidRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentsMerchantUidRequest, merchant_uid_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentsMerchantUidRequest, status_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentsMerchantUidRequest, page_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentsMerchantUidRequest, sorting_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentsMerchantUidResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentsMerchantUidResponse, code_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentsMerchantUidResponse, message_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentsMerchantUidResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentStatusRequest, status_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentStatusRequest, page_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentStatusRequest, limit_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentStatusRequest, from_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentStatusRequest, to_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentStatusRequest, sorting_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentStatusResponse, code_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentStatusResponse, message_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentStatusResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentMerchantUidRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentMerchantUidRequest, merchant_uid_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentMerchantUidRequest, status_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentMerchantUidRequest, sorting_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentMerchantUidResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentMerchantUidResponse, code_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentMerchantUidResponse, message_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentMerchantUidResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentCancelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentCancelRequest, imp_uid_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentCancelRequest, merchant_uid_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentCancelRequest, amount_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentCancelRequest, tax_free_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentCancelRequest, checksum_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentCancelRequest, reason_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentCancelRequest, refund_holder_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentCancelRequest, refund_bank_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentCancelRequest, refund_account_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentCancelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentCancelResponse, code_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentCancelResponse, message_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentCancelResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalanceRequest, imp_uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalanceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalanceResponse, code_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalanceResponse, message_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentBalanceResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::Prepare, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::Prepare, merchant_uid_),
  PROTOBUF_FIELD_OFFSET(::payment::Prepare, amount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentPrepareRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentPrepareRequest, merchant_uid_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentPrepareRequest, amount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentPrepareResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentPrepareResponse, code_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentPrepareResponse, message_),
  PROTOBUF_FIELD_OFFSET(::payment::PaymentPrepareResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentGetPrepareRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::PaymentGetPrepareRequest, merchant_uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::Promotion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::Promotion, id_),
  PROTOBUF_FIELD_OFFSET(::payment::Promotion, discount_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::payment::Payment)},
  { 53, -1, sizeof(::payment::CancelHistory)},
  { 63, -1, sizeof(::payment::PaymentPage)},
  { 72, -1, sizeof(::payment::PaymentBalanceDetail)},
  { 81, -1, sizeof(::payment::PaymentBalance)},
  { 92, -1, sizeof(::payment::PaymentBalanceHistory)},
  { 102, -1, sizeof(::payment::PaymentRequest)},
  { 108, -1, sizeof(::payment::PaymentResponse)},
  { 116, -1, sizeof(::payment::PaymentsRequest)},
  { 122, -1, sizeof(::payment::PaymentsResponse)},
  { 130, -1, sizeof(::payment::PaymentsMerchantUidRequest)},
  { 139, -1, sizeof(::payment::PaymentsMerchantUidResponse)},
  { 147, -1, sizeof(::payment::PaymentStatusRequest)},
  { 158, -1, sizeof(::payment::PaymentStatusResponse)},
  { 166, -1, sizeof(::payment::PaymentMerchantUidRequest)},
  { 174, -1, sizeof(::payment::PaymentMerchantUidResponse)},
  { 182, -1, sizeof(::payment::PaymentCancelRequest)},
  { 196, -1, sizeof(::payment::PaymentCancelResponse)},
  { 204, -1, sizeof(::payment::PaymentBalanceRequest)},
  { 210, -1, sizeof(::payment::PaymentBalanceResponse)},
  { 218, -1, sizeof(::payment::Prepare)},
  { 225, -1, sizeof(::payment::PaymentPrepareRequest)},
  { 232, -1, sizeof(::payment::PaymentPrepareResponse)},
  { 240, -1, sizeof(::payment::PaymentGetPrepareRequest)},
  { 246, -1, sizeof(::payment::Promotion)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_Payment_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_CancelHistory_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentPage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentBalanceDetail_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentBalance_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentBalanceHistory_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentsMerchantUidRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentsMerchantUidResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentStatusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentStatusResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentMerchantUidRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentMerchantUidResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentCancelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentCancelResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentBalanceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentBalanceResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_Prepare_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentPrepareRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentPrepareResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_PaymentGetPrepareRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::_Promotion_default_instance_),
};

const char descriptor_table_protodef_v1_2fpayment_2fpayment_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030v1/payment/payment.proto\022\007payment\032\034goo"
  "gle/api/annotations.proto\"\205\010\n\007Payment\022\016\n"
  "\006amount\030\001 \001(\005\022\021\n\tapply_num\030\002 \001(\t\022\021\n\tbank"
  "_code\030\003 \001(\005\022\021\n\tbank_name\030\004 \001(\t\022\022\n\nbuyer_"
  "addr\030\005 \001(\t\022\023\n\013buyer_email\030\006 \001(\t\022\022\n\nbuyer"
  "_name\030\007 \001(\t\022\026\n\016buyer_postcode\030\010 \001(\t\022\021\n\tb"
  "uyer_tel\030\t \001(\t\022\025\n\rcancel_amount\030\n \001(\005\022.\n"
  "\016cancel_history\030\013 \003(\0132\026.payment.CancelHi"
  "story\022\025\n\rcancel_reason\030\014 \001(\t\022\033\n\023cancel_r"
  "eceipt_urls\030\r \003(\t\022\024\n\014cancelled_at\030\016 \001(\005\022"
  "\021\n\tcard_code\030\017 \001(\t\022\021\n\tcard_name\030\020 \001(\t\022\023\n"
  "\013card_number\030\021 \001(\t\022\022\n\ncard_quota\030\022 \001(\005\022\021"
  "\n\tcard_type\030\023 \001(\005\022\033\n\023cash_receipt_issued"
  "\030\024 \001(\010\022\017\n\007channel\030\025 \001(\t\022\020\n\010currency\030\026 \001("
  "\t\022\023\n\013custom_data\030\027 \001(\t\022\024\n\014customer_uid\030\030"
  " \001(\t\022\032\n\022customer_uid_usage\030\031 \001(\t\022\016\n\006escr"
  "ow\030\032 \001(\010\022\023\n\013fail_reason\030\033 \001(\t\022\021\n\tfailed_"
  "at\030\034 \001(\005\022\017\n\007imp_uid\030\035 \001(\t\022\024\n\014merchant_ui"
  "d\030\036 \001(\t\022\014\n\004name\030\037 \001(\t\022\017\n\007paid_at\030  \001(\005\022\022"
  "\n\npay_method\030! \001(\t\022\r\n\005pg_id\030\" \001(\t\022\023\n\013pg_"
  "provider\030# \001(\t\022\016\n\006pg_tid\030$ \001(\t\022\023\n\013receip"
  "t_url\030% \001(\t\022\022\n\nstarted_at\030& \001(\005\022\016\n\006statu"
  "s\030\' \001(\t\022\022\n\nuser_agent\030( \001(\t\022\022\n\nvbank_cod"
  "e\030) \001(\t\022\022\n\nvbank_date\030* \001(\005\022\024\n\014vbank_hol"
  "der\030+ \001(\t\022\027\n\017vbank_issued_at\030, \001(\005\022\022\n\nvb"
  "ank_name\030- \001(\t\022\021\n\tvbank_num\030. \001(\t\022%\n\tpro"
  "motion\030/ \001(\0132\022.payment.Promotion\022\027\n\017emb_"
  "pg_provider\0300 \001(\t\"j\n\rCancelHistory\022\016\n\006pg"
  "_tid\030\001 \001(\t\022\016\n\006amount\030\002 \001(\005\022\024\n\014cancelled_"
  "at\030\003 \001(\005\022\016\n\006reason\030\004 \001(\t\022\023\n\013receipt_url\030"
  "\005 \001(\t\"\\\n\013PaymentPage\022\r\n\005total\030\001 \001(\005\022\020\n\010p"
  "revious\030\002 \001(\005\022\014\n\004next\030\003 \001(\005\022\036\n\004list\030\004 \003("
  "\0132\020.payment.Payment\"V\n\024PaymentBalanceDet"
  "ail\022\020\n\010tax_free\030\001 \001(\005\022\016\n\006supply\030\002 \001(\005\022\013\n"
  "\003vat\030\003 \001(\005\022\017\n\007service\030\004 \001(\005\"\233\002\n\016PaymentB"
  "alance\022\016\n\006amount\030\001 \001(\005\0223\n\014cash_receipt\030\002"
  " \001(\0132\035.payment.PaymentBalanceDetail\022.\n\007p"
  "rimary\030\003 \001(\0132\035.payment.PaymentBalanceDet"
  "ail\0220\n\tsecondary\030\004 \001(\0132\035.payment.Payment"
  "BalanceDetail\022/\n\010discount\030\005 \001(\0132\035.paymen"
  "t.PaymentBalanceDetail\0221\n\thistories\030\006 \003("
  "\0132\036.payment.PaymentBalanceHistory\"\360\001\n\025Pa"
  "ymentBalanceHistory\0223\n\014cash_receipt\030\001 \001("
  "\0132\035.payment.PaymentBalanceDetail\022.\n\007prim"
  "ary\030\002 \001(\0132\035.payment.PaymentBalanceDetail"
  "\0220\n\tsecondary\030\003 \001(\0132\035.payment.PaymentBal"
  "anceDetail\022/\n\010discount\030\004 \001(\0132\035.payment.P"
  "aymentBalanceDetail\022\017\n\007created\030\005 \001(\005\"!\n\016"
  "PaymentRequest\022\017\n\007imp_uid\030\001 \001(\t\"T\n\017Payme"
  "ntResponse\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001("
  "\t\022\"\n\010response\030\003 \001(\0132\020.payment.Payment\"\"\n"
  "\017PaymentsRequest\022\017\n\007imp_uid\030\001 \003(\t\"U\n\020Pay"
  "mentsResponse\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002"
  " \001(\t\022\"\n\010response\030\003 \003(\0132\020.payment.Payment"
  "\"a\n\032PaymentsMerchantUidRequest\022\024\n\014mercha"
  "nt_uid\030\001 \001(\t\022\016\n\006status\030\002 \001(\t\022\014\n\004page\030\003 \001"
  "(\005\022\017\n\007sorting\030\004 \001(\t\"d\n\033PaymentsMerchantU"
  "idResponse\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001("
  "\t\022&\n\010response\030\003 \001(\0132\024.payment.PaymentPag"
  "e\"n\n\024PaymentStatusRequest\022\016\n\006status\030\001 \001("
  "\t\022\014\n\004page\030\002 \001(\005\022\r\n\005limit\030\003 \001(\005\022\014\n\004from\030\004"
  " \001(\005\022\n\n\002to\030\005 \001(\005\022\017\n\007sorting\030\006 \001(\t\"^\n\025Pay"
  "mentStatusResponse\022\014\n\004code\030\001 \001(\005\022\017\n\007mess"
  "age\030\002 \001(\t\022&\n\010response\030\003 \001(\0132\024.payment.Pa"
  "ymentPage\"R\n\031PaymentMerchantUidRequest\022\024"
  "\n\014merchant_uid\030\001 \001(\t\022\016\n\006status\030\002 \001(\t\022\017\n\007"
  "sorting\030\003 \001(\t\"_\n\032PaymentMerchantUidRespo"
  "nse\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\022\"\n\010re"
  "sponse\030\003 \001(\0132\020.payment.Payment\"\305\001\n\024Payme"
  "ntCancelRequest\022\017\n\007imp_uid\030\001 \001(\t\022\024\n\014merc"
  "hant_uid\030\002 \001(\t\022\016\n\006amount\030\003 \001(\001\022\020\n\010tax_fr"
  "ee\030\004 \001(\001\022\020\n\010checksum\030\005 \001(\001\022\016\n\006reason\030\006 \001"
  "(\t\022\025\n\rrefund_holder\030\007 \001(\t\022\023\n\013refund_bank"
  "\030\010 \001(\t\022\026\n\016refund_account\030\t \001(\t\"Z\n\025Paymen"
  "tCancelResponse\022\014\n\004code\030\001 \001(\005\022\017\n\007message"
  "\030\002 \001(\t\022\"\n\010response\030\003 \001(\0132\020.payment.Payme"
  "nt\"(\n\025PaymentBalanceRequest\022\017\n\007imp_uid\030\001"
  " \001(\t\"b\n\026PaymentBalanceResponse\022\014\n\004code\030\001"
  " \001(\005\022\017\n\007message\030\002 \001(\t\022)\n\010response\030\003 \001(\0132"
  "\027.payment.PaymentBalance\"/\n\007Prepare\022\024\n\014m"
  "erchant_uid\030\001 \001(\t\022\016\n\006amount\030\002 \001(\005\"=\n\025Pay"
  "mentPrepareRequest\022\024\n\014merchant_uid\030\001 \001(\t"
  "\022\016\n\006amount\030\002 \001(\001\"[\n\026PaymentPrepareRespon"
  "se\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\022\"\n\010res"
  "ponse\030\003 \001(\0132\020.payment.Prepare\"0\n\030Payment"
  "GetPrepareRequest\022\024\n\014merchant_uid\030\001 \001(\t\""
  ")\n\tPromotion\022\n\n\002id\030\001 \001(\t\022\020\n\010discount\030\002 \001"
  "(\0052\341\t\n\016PaymentService\022\211\001\n\021PaymentBalance"
  "RPC\022\036.payment.PaymentBalanceRequest\032\037.pa"
  "yment.PaymentBalanceResponse\"3\202\323\344\223\002-\022+/a"
  "pi/payments/v1/payments/{imp_uid}/balanc"
  "e\022l\n\nPaymentRPC\022\027.payment.PaymentRequest"
  "\032\030.payment.PaymentResponse\"+\202\323\344\223\002%\022#/api"
  "/payments/v1/payments/{imp_uid}\022e\n\013Payme"
  "ntsRPC\022\030.payment.PaymentsRequest\032\031.payme"
  "nt.PaymentsResponse\"!\202\323\344\223\002\033\022\031/api/paymen"
  "ts/v1/payments\022\240\001\n\025PaymentMerchantUidRPC"
  "\022\".payment.PaymentMerchantUidRequest\032#.p"
  "ayment.PaymentMerchantUidResponse\">\202\323\344\223\002"
  "8\0226/api/payments/v1/payments/find/{merch"
  "ant_uid}/{status}\022\246\001\n\026PaymentsMerchantUi"
  "dRPC\022#.payment.PaymentsMerchantUidReques"
  "t\032$.payment.PaymentsMerchantUidResponse\""
  "A\202\323\344\223\002;\0229/api/payments/v1/payments/findA"
  "ll/{merchant_uid}/{status}\022\205\001\n\021PaymentsS"
  "tatusRPC\022\035.payment.PaymentStatusRequest\032"
  "\036.payment.PaymentStatusResponse\"1\202\323\344\223\002+\022"
  ")/api/payments/v1/payments/status/{statu"
  "s}\022~\n\020PaymentCancelRPC\022\035.payment.Payment"
  "CancelRequest\032\036.payment.PaymentCancelRes"
  "ponse\"+\202\323\344\223\002%\" /api/payments/v1/payments"
  "/cancel:\001*\022\202\001\n\021PaymentPrepareRPC\022\036.payme"
  "nt.PaymentPrepareRequest\032\037.payment.Payme"
  "ntPrepareResponse\",\202\323\344\223\002&\"!/api/payments"
  "/v1/payments/prepare:\001*\022\224\001\n\024PaymentGetPr"
  "epareRPC\022!.payment.PaymentGetPrepareRequ"
  "est\032\037.payment.PaymentPrepareResponse\"8\202\323"
  "\344\223\0022\0220/api/payments/v1/payments/prepare/"
  "{merchant_uid}BAZ2github.com/iamport/int"
  "erface/gen_src/go/v1/payment\252\002\nV1.Paymen"
  "tb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_v1_2fpayment_2fpayment_2eproto_deps[1] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_v1_2fpayment_2fpayment_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_v1_2fpayment_2fpayment_2eproto = {
  false, false, 4809, descriptor_table_protodef_v1_2fpayment_2fpayment_2eproto, "v1/payment/payment.proto", 
  &descriptor_table_v1_2fpayment_2fpayment_2eproto_once, descriptor_table_v1_2fpayment_2fpayment_2eproto_deps, 1, 25,
  schemas, file_default_instances, TableStruct_v1_2fpayment_2fpayment_2eproto::offsets,
  file_level_metadata_v1_2fpayment_2fpayment_2eproto, file_level_enum_descriptors_v1_2fpayment_2fpayment_2eproto, file_level_service_descriptors_v1_2fpayment_2fpayment_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_v1_2fpayment_2fpayment_2eproto_getter() {
  return &descriptor_table_v1_2fpayment_2fpayment_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_v1_2fpayment_2fpayment_2eproto(&descriptor_table_v1_2fpayment_2fpayment_2eproto);
namespace payment {

// ===================================================================

class Payment::_Internal {
 public:
  static const ::payment::Promotion& promotion(const Payment* msg);
};

const ::payment::Promotion&
Payment::_Internal::promotion(const Payment* msg) {
  return *msg->promotion_;
}
Payment::Payment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  cancel_history_(arena),
  cancel_receipt_urls_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.Payment)
}
Payment::Payment(const Payment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      cancel_history_(from.cancel_history_),
      cancel_receipt_urls_(from.cancel_receipt_urls_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  apply_num_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_apply_num().empty()) {
    apply_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_apply_num(), 
      GetArenaForAllocation());
  }
  bank_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bank_name().empty()) {
    bank_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bank_name(), 
      GetArenaForAllocation());
  }
  buyer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_addr().empty()) {
    buyer_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_addr(), 
      GetArenaForAllocation());
  }
  buyer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_email().empty()) {
    buyer_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_email(), 
      GetArenaForAllocation());
  }
  buyer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_name().empty()) {
    buyer_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_name(), 
      GetArenaForAllocation());
  }
  buyer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_postcode().empty()) {
    buyer_postcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_postcode(), 
      GetArenaForAllocation());
  }
  buyer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_tel().empty()) {
    buyer_tel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_tel(), 
      GetArenaForAllocation());
  }
  cancel_reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cancel_reason().empty()) {
    cancel_reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cancel_reason(), 
      GetArenaForAllocation());
  }
  card_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_code().empty()) {
    card_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_code(), 
      GetArenaForAllocation());
  }
  card_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_name().empty()) {
    card_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_name(), 
      GetArenaForAllocation());
  }
  card_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_number().empty()) {
    card_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_number(), 
      GetArenaForAllocation());
  }
  channel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_channel().empty()) {
    channel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_channel(), 
      GetArenaForAllocation());
  }
  currency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_currency().empty()) {
    currency_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_currency(), 
      GetArenaForAllocation());
  }
  custom_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_custom_data().empty()) {
    custom_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_custom_data(), 
      GetArenaForAllocation());
  }
  customer_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_uid().empty()) {
    customer_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_uid(), 
      GetArenaForAllocation());
  }
  customer_uid_usage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_uid_usage().empty()) {
    customer_uid_usage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_uid_usage(), 
      GetArenaForAllocation());
  }
  fail_reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_fail_reason().empty()) {
    fail_reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_fail_reason(), 
      GetArenaForAllocation());
  }
  imp_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imp_uid().empty()) {
    imp_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imp_uid(), 
      GetArenaForAllocation());
  }
  merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_merchant_uid().empty()) {
    merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_merchant_uid(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  pay_method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pay_method().empty()) {
    pay_method_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pay_method(), 
      GetArenaForAllocation());
  }
  pg_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pg_id().empty()) {
    pg_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pg_id(), 
      GetArenaForAllocation());
  }
  pg_provider_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pg_provider().empty()) {
    pg_provider_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pg_provider(), 
      GetArenaForAllocation());
  }
  pg_tid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pg_tid().empty()) {
    pg_tid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pg_tid(), 
      GetArenaForAllocation());
  }
  receipt_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_receipt_url().empty()) {
    receipt_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_receipt_url(), 
      GetArenaForAllocation());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  user_agent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_agent().empty()) {
    user_agent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user_agent(), 
      GetArenaForAllocation());
  }
  vbank_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_vbank_code().empty()) {
    vbank_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_vbank_code(), 
      GetArenaForAllocation());
  }
  vbank_holder_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_vbank_holder().empty()) {
    vbank_holder_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_vbank_holder(), 
      GetArenaForAllocation());
  }
  vbank_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_vbank_name().empty()) {
    vbank_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_vbank_name(), 
      GetArenaForAllocation());
  }
  vbank_num_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_vbank_num().empty()) {
    vbank_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_vbank_num(), 
      GetArenaForAllocation());
  }
  emb_pg_provider_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_emb_pg_provider().empty()) {
    emb_pg_provider_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_emb_pg_provider(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_promotion()) {
    promotion_ = new ::payment::Promotion(*from.promotion_);
  } else {
    promotion_ = nullptr;
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&vbank_issued_at_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(vbank_issued_at_));
  // @@protoc_insertion_point(copy_constructor:payment.Payment)
}

inline void Payment::SharedCtor() {
apply_num_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
bank_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
cancel_reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
channel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
currency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
custom_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_uid_usage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
fail_reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
imp_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pay_method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pg_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pg_provider_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pg_tid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
receipt_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
user_agent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
vbank_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
vbank_holder_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
vbank_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
vbank_num_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
emb_pg_provider_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&promotion_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&vbank_issued_at_) -
    reinterpret_cast<char*>(&promotion_)) + sizeof(vbank_issued_at_));
}

Payment::~Payment() {
  // @@protoc_insertion_point(destructor:payment.Payment)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Payment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  apply_num_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bank_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_postcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_tel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cancel_reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  currency_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  custom_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_uid_usage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fail_reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  imp_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  merchant_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pay_method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pg_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pg_provider_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pg_tid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receipt_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_agent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vbank_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vbank_holder_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vbank_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vbank_num_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  emb_pg_provider_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete promotion_;
}

void Payment::ArenaDtor(void* object) {
  Payment* _this = reinterpret_cast< Payment* >(object);
  (void)_this;
}
void Payment::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Payment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Payment::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.Payment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cancel_history_.Clear();
  cancel_receipt_urls_.Clear();
  apply_num_.ClearToEmpty();
  bank_name_.ClearToEmpty();
  buyer_addr_.ClearToEmpty();
  buyer_email_.ClearToEmpty();
  buyer_name_.ClearToEmpty();
  buyer_postcode_.ClearToEmpty();
  buyer_tel_.ClearToEmpty();
  cancel_reason_.ClearToEmpty();
  card_code_.ClearToEmpty();
  card_name_.ClearToEmpty();
  card_number_.ClearToEmpty();
  channel_.ClearToEmpty();
  currency_.ClearToEmpty();
  custom_data_.ClearToEmpty();
  customer_uid_.ClearToEmpty();
  customer_uid_usage_.ClearToEmpty();
  fail_reason_.ClearToEmpty();
  imp_uid_.ClearToEmpty();
  merchant_uid_.ClearToEmpty();
  name_.ClearToEmpty();
  pay_method_.ClearToEmpty();
  pg_id_.ClearToEmpty();
  pg_provider_.ClearToEmpty();
  pg_tid_.ClearToEmpty();
  receipt_url_.ClearToEmpty();
  status_.ClearToEmpty();
  user_agent_.ClearToEmpty();
  vbank_code_.ClearToEmpty();
  vbank_holder_.ClearToEmpty();
  vbank_name_.ClearToEmpty();
  vbank_num_.ClearToEmpty();
  emb_pg_provider_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && promotion_ != nullptr) {
    delete promotion_;
  }
  promotion_ = nullptr;
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vbank_issued_at_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(vbank_issued_at_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Payment::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 amount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string apply_num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_apply_num();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.apply_num"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 bank_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          bank_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string bank_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_bank_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.bank_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_addr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_buyer_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.buyer_addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_email = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_buyer_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.buyer_email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_name = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_buyer_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.buyer_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_postcode = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_buyer_postcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.buyer_postcode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_tel = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_buyer_tel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.buyer_tel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cancel_amount = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          cancel_amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .payment.CancelHistory cancel_history = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_cancel_history(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      // string cancel_reason = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_cancel_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.cancel_reason"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string cancel_receipt_urls = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_cancel_receipt_urls();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.cancel_receipt_urls"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 cancelled_at = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          cancelled_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_code = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_card_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.card_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_name = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_card_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.card_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_number = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          auto str = _internal_mutable_card_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.card_number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 card_quota = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          card_quota_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 card_type = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          card_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool cash_receipt_issued = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          cash_receipt_issued_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string channel = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          auto str = _internal_mutable_channel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.channel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string currency = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          auto str = _internal_mutable_currency();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.currency"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string custom_data = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          auto str = _internal_mutable_custom_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.custom_data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_uid = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          auto str = _internal_mutable_customer_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.customer_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_uid_usage = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          auto str = _internal_mutable_customer_uid_usage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.customer_uid_usage"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool escrow = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          escrow_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string fail_reason = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          auto str = _internal_mutable_fail_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.fail_reason"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 failed_at = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          failed_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string imp_uid = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          auto str = _internal_mutable_imp_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.imp_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string merchant_uid = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          auto str = _internal_mutable_merchant_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.merchant_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 paid_at = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          paid_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pay_method = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pay_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.pay_method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pg_id = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_pg_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.pg_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pg_provider = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_pg_provider();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.pg_provider"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pg_tid = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_pg_tid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.pg_tid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string receipt_url = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_receipt_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.receipt_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 started_at = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          started_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user_agent = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_user_agent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.user_agent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string vbank_code = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_vbank_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.vbank_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 vbank_date = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          vbank_date_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string vbank_holder = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_vbank_holder();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.vbank_holder"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 vbank_issued_at = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          vbank_issued_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string vbank_name = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_vbank_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.vbank_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string vbank_num = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_vbank_num();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.vbank_num"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.Promotion promotion = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_promotion(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string emb_pg_provider = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_emb_pg_provider();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Payment.emb_pg_provider"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Payment::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.Payment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 amount = 1;
  if (this->_internal_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_amount(), target);
  }

  // string apply_num = 2;
  if (!this->_internal_apply_num().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_apply_num().data(), static_cast<int>(this->_internal_apply_num().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.apply_num");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_apply_num(), target);
  }

  // int32 bank_code = 3;
  if (this->_internal_bank_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_bank_code(), target);
  }

  // string bank_name = 4;
  if (!this->_internal_bank_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bank_name().data(), static_cast<int>(this->_internal_bank_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.bank_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_bank_name(), target);
  }

  // string buyer_addr = 5;
  if (!this->_internal_buyer_addr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_addr().data(), static_cast<int>(this->_internal_buyer_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.buyer_addr");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_buyer_addr(), target);
  }

  // string buyer_email = 6;
  if (!this->_internal_buyer_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_email().data(), static_cast<int>(this->_internal_buyer_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.buyer_email");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_buyer_email(), target);
  }

  // string buyer_name = 7;
  if (!this->_internal_buyer_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_name().data(), static_cast<int>(this->_internal_buyer_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.buyer_name");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_buyer_name(), target);
  }

  // string buyer_postcode = 8;
  if (!this->_internal_buyer_postcode().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_postcode().data(), static_cast<int>(this->_internal_buyer_postcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.buyer_postcode");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_buyer_postcode(), target);
  }

  // string buyer_tel = 9;
  if (!this->_internal_buyer_tel().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_tel().data(), static_cast<int>(this->_internal_buyer_tel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.buyer_tel");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_buyer_tel(), target);
  }

  // int32 cancel_amount = 10;
  if (this->_internal_cancel_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_cancel_amount(), target);
  }

  // repeated .payment.CancelHistory cancel_history = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_cancel_history_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, this->_internal_cancel_history(i), target, stream);
  }

  // string cancel_reason = 12;
  if (!this->_internal_cancel_reason().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cancel_reason().data(), static_cast<int>(this->_internal_cancel_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.cancel_reason");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_cancel_reason(), target);
  }

  // repeated string cancel_receipt_urls = 13;
  for (int i = 0, n = this->_internal_cancel_receipt_urls_size(); i < n; i++) {
    const auto& s = this->_internal_cancel_receipt_urls(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.cancel_receipt_urls");
    target = stream->WriteString(13, s, target);
  }

  // int32 cancelled_at = 14;
  if (this->_internal_cancelled_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(14, this->_internal_cancelled_at(), target);
  }

  // string card_code = 15;
  if (!this->_internal_card_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_code().data(), static_cast<int>(this->_internal_card_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.card_code");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_card_code(), target);
  }

  // string card_name = 16;
  if (!this->_internal_card_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_name().data(), static_cast<int>(this->_internal_card_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.card_name");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_card_name(), target);
  }

  // string card_number = 17;
  if (!this->_internal_card_number().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_number().data(), static_cast<int>(this->_internal_card_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.card_number");
    target = stream->WriteStringMaybeAliased(
        17, this->_internal_card_number(), target);
  }

  // int32 card_quota = 18;
  if (this->_internal_card_quota() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(18, this->_internal_card_quota(), target);
  }

  // int32 card_type = 19;
  if (this->_internal_card_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(19, this->_internal_card_type(), target);
  }

  // bool cash_receipt_issued = 20;
  if (this->_internal_cash_receipt_issued() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(20, this->_internal_cash_receipt_issued(), target);
  }

  // string channel = 21;
  if (!this->_internal_channel().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_channel().data(), static_cast<int>(this->_internal_channel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.channel");
    target = stream->WriteStringMaybeAliased(
        21, this->_internal_channel(), target);
  }

  // string currency = 22;
  if (!this->_internal_currency().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_currency().data(), static_cast<int>(this->_internal_currency().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.currency");
    target = stream->WriteStringMaybeAliased(
        22, this->_internal_currency(), target);
  }

  // string custom_data = 23;
  if (!this->_internal_custom_data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_custom_data().data(), static_cast<int>(this->_internal_custom_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.custom_data");
    target = stream->WriteStringMaybeAliased(
        23, this->_internal_custom_data(), target);
  }

  // string customer_uid = 24;
  if (!this->_internal_customer_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_uid().data(), static_cast<int>(this->_internal_customer_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.customer_uid");
    target = stream->WriteStringMaybeAliased(
        24, this->_internal_customer_uid(), target);
  }

  // string customer_uid_usage = 25;
  if (!this->_internal_customer_uid_usage().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_uid_usage().data(), static_cast<int>(this->_internal_customer_uid_usage().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.customer_uid_usage");
    target = stream->WriteStringMaybeAliased(
        25, this->_internal_customer_uid_usage(), target);
  }

  // bool escrow = 26;
  if (this->_internal_escrow() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(26, this->_internal_escrow(), target);
  }

  // string fail_reason = 27;
  if (!this->_internal_fail_reason().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fail_reason().data(), static_cast<int>(this->_internal_fail_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.fail_reason");
    target = stream->WriteStringMaybeAliased(
        27, this->_internal_fail_reason(), target);
  }

  // int32 failed_at = 28;
  if (this->_internal_failed_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(28, this->_internal_failed_at(), target);
  }

  // string imp_uid = 29;
  if (!this->_internal_imp_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_imp_uid().data(), static_cast<int>(this->_internal_imp_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.imp_uid");
    target = stream->WriteStringMaybeAliased(
        29, this->_internal_imp_uid(), target);
  }

  // string merchant_uid = 30;
  if (!this->_internal_merchant_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_merchant_uid().data(), static_cast<int>(this->_internal_merchant_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.merchant_uid");
    target = stream->WriteStringMaybeAliased(
        30, this->_internal_merchant_uid(), target);
  }

  // string name = 31;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.name");
    target = stream->WriteStringMaybeAliased(
        31, this->_internal_name(), target);
  }

  // int32 paid_at = 32;
  if (this->_internal_paid_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(32, this->_internal_paid_at(), target);
  }

  // string pay_method = 33;
  if (!this->_internal_pay_method().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pay_method().data(), static_cast<int>(this->_internal_pay_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.pay_method");
    target = stream->WriteStringMaybeAliased(
        33, this->_internal_pay_method(), target);
  }

  // string pg_id = 34;
  if (!this->_internal_pg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pg_id().data(), static_cast<int>(this->_internal_pg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.pg_id");
    target = stream->WriteStringMaybeAliased(
        34, this->_internal_pg_id(), target);
  }

  // string pg_provider = 35;
  if (!this->_internal_pg_provider().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pg_provider().data(), static_cast<int>(this->_internal_pg_provider().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.pg_provider");
    target = stream->WriteStringMaybeAliased(
        35, this->_internal_pg_provider(), target);
  }

  // string pg_tid = 36;
  if (!this->_internal_pg_tid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pg_tid().data(), static_cast<int>(this->_internal_pg_tid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.pg_tid");
    target = stream->WriteStringMaybeAliased(
        36, this->_internal_pg_tid(), target);
  }

  // string receipt_url = 37;
  if (!this->_internal_receipt_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_receipt_url().data(), static_cast<int>(this->_internal_receipt_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.receipt_url");
    target = stream->WriteStringMaybeAliased(
        37, this->_internal_receipt_url(), target);
  }

  // int32 started_at = 38;
  if (this->_internal_started_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(38, this->_internal_started_at(), target);
  }

  // string status = 39;
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.status");
    target = stream->WriteStringMaybeAliased(
        39, this->_internal_status(), target);
  }

  // string user_agent = 40;
  if (!this->_internal_user_agent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_agent().data(), static_cast<int>(this->_internal_user_agent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.user_agent");
    target = stream->WriteStringMaybeAliased(
        40, this->_internal_user_agent(), target);
  }

  // string vbank_code = 41;
  if (!this->_internal_vbank_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vbank_code().data(), static_cast<int>(this->_internal_vbank_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.vbank_code");
    target = stream->WriteStringMaybeAliased(
        41, this->_internal_vbank_code(), target);
  }

  // int32 vbank_date = 42;
  if (this->_internal_vbank_date() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(42, this->_internal_vbank_date(), target);
  }

  // string vbank_holder = 43;
  if (!this->_internal_vbank_holder().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vbank_holder().data(), static_cast<int>(this->_internal_vbank_holder().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.vbank_holder");
    target = stream->WriteStringMaybeAliased(
        43, this->_internal_vbank_holder(), target);
  }

  // int32 vbank_issued_at = 44;
  if (this->_internal_vbank_issued_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(44, this->_internal_vbank_issued_at(), target);
  }

  // string vbank_name = 45;
  if (!this->_internal_vbank_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vbank_name().data(), static_cast<int>(this->_internal_vbank_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.vbank_name");
    target = stream->WriteStringMaybeAliased(
        45, this->_internal_vbank_name(), target);
  }

  // string vbank_num = 46;
  if (!this->_internal_vbank_num().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vbank_num().data(), static_cast<int>(this->_internal_vbank_num().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.vbank_num");
    target = stream->WriteStringMaybeAliased(
        46, this->_internal_vbank_num(), target);
  }

  // .payment.Promotion promotion = 47;
  if (this->_internal_has_promotion()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        47, _Internal::promotion(this), target, stream);
  }

  // string emb_pg_provider = 48;
  if (!this->_internal_emb_pg_provider().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_emb_pg_provider().data(), static_cast<int>(this->_internal_emb_pg_provider().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Payment.emb_pg_provider");
    target = stream->WriteStringMaybeAliased(
        48, this->_internal_emb_pg_provider(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.Payment)
  return target;
}

size_t Payment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.Payment)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .payment.CancelHistory cancel_history = 11;
  total_size += 1UL * this->_internal_cancel_history_size();
  for (const auto& msg : this->cancel_history_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string cancel_receipt_urls = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(cancel_receipt_urls_.size());
  for (int i = 0, n = cancel_receipt_urls_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      cancel_receipt_urls_.Get(i));
  }

  // string apply_num = 2;
  if (!this->_internal_apply_num().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_apply_num());
  }

  // string bank_name = 4;
  if (!this->_internal_bank_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bank_name());
  }

  // string buyer_addr = 5;
  if (!this->_internal_buyer_addr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_addr());
  }

  // string buyer_email = 6;
  if (!this->_internal_buyer_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_email());
  }

  // string buyer_name = 7;
  if (!this->_internal_buyer_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_name());
  }

  // string buyer_postcode = 8;
  if (!this->_internal_buyer_postcode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_postcode());
  }

  // string buyer_tel = 9;
  if (!this->_internal_buyer_tel().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_tel());
  }

  // string cancel_reason = 12;
  if (!this->_internal_cancel_reason().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cancel_reason());
  }

  // string card_code = 15;
  if (!this->_internal_card_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_code());
  }

  // string card_name = 16;
  if (!this->_internal_card_name().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_name());
  }

  // string card_number = 17;
  if (!this->_internal_card_number().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_number());
  }

  // string channel = 21;
  if (!this->_internal_channel().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_channel());
  }

  // string currency = 22;
  if (!this->_internal_currency().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_currency());
  }

  // string custom_data = 23;
  if (!this->_internal_custom_data().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_custom_data());
  }

  // string customer_uid = 24;
  if (!this->_internal_customer_uid().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_uid());
  }

  // string customer_uid_usage = 25;
  if (!this->_internal_customer_uid_usage().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_uid_usage());
  }

  // string fail_reason = 27;
  if (!this->_internal_fail_reason().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fail_reason());
  }

  // string imp_uid = 29;
  if (!this->_internal_imp_uid().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_imp_uid());
  }

  // string merchant_uid = 30;
  if (!this->_internal_merchant_uid().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_merchant_uid());
  }

  // string name = 31;
  if (!this->_internal_name().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string pay_method = 33;
  if (!this->_internal_pay_method().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pay_method());
  }

  // string pg_id = 34;
  if (!this->_internal_pg_id().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pg_id());
  }

  // string pg_provider = 35;
  if (!this->_internal_pg_provider().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pg_provider());
  }

  // string pg_tid = 36;
  if (!this->_internal_pg_tid().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pg_tid());
  }

  // string receipt_url = 37;
  if (!this->_internal_receipt_url().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_receipt_url());
  }

  // string status = 39;
  if (!this->_internal_status().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string user_agent = 40;
  if (!this->_internal_user_agent().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_agent());
  }

  // string vbank_code = 41;
  if (!this->_internal_vbank_code().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vbank_code());
  }

  // string vbank_holder = 43;
  if (!this->_internal_vbank_holder().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vbank_holder());
  }

  // string vbank_name = 45;
  if (!this->_internal_vbank_name().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vbank_name());
  }

  // string vbank_num = 46;
  if (!this->_internal_vbank_num().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vbank_num());
  }

  // string emb_pg_provider = 48;
  if (!this->_internal_emb_pg_provider().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_emb_pg_provider());
  }

  // .payment.Promotion promotion = 47;
  if (this->_internal_has_promotion()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *promotion_);
  }

  // int32 amount = 1;
  if (this->_internal_amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_amount());
  }

  // int32 bank_code = 3;
  if (this->_internal_bank_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_bank_code());
  }

  // int32 cancel_amount = 10;
  if (this->_internal_cancel_amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cancel_amount());
  }

  // int32 cancelled_at = 14;
  if (this->_internal_cancelled_at() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cancelled_at());
  }

  // int32 card_quota = 18;
  if (this->_internal_card_quota() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_card_quota());
  }

  // int32 card_type = 19;
  if (this->_internal_card_type() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_card_type());
  }

  // bool cash_receipt_issued = 20;
  if (this->_internal_cash_receipt_issued() != 0) {
    total_size += 2 + 1;
  }

  // bool escrow = 26;
  if (this->_internal_escrow() != 0) {
    total_size += 2 + 1;
  }

  // int32 failed_at = 28;
  if (this->_internal_failed_at() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_failed_at());
  }

  // int32 paid_at = 32;
  if (this->_internal_paid_at() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_paid_at());
  }

  // int32 started_at = 38;
  if (this->_internal_started_at() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_started_at());
  }

  // int32 vbank_date = 42;
  if (this->_internal_vbank_date() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_vbank_date());
  }

  // int32 vbank_issued_at = 44;
  if (this->_internal_vbank_issued_at() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_vbank_issued_at());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Payment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Payment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Payment::GetClassData() const { return &_class_data_; }

void Payment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<Payment *>(to)->MergeFrom(
      static_cast<const Payment &>(from));
}


void Payment::MergeFrom(const Payment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.Payment)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cancel_history_.MergeFrom(from.cancel_history_);
  cancel_receipt_urls_.MergeFrom(from.cancel_receipt_urls_);
  if (!from._internal_apply_num().empty()) {
    _internal_set_apply_num(from._internal_apply_num());
  }
  if (!from._internal_bank_name().empty()) {
    _internal_set_bank_name(from._internal_bank_name());
  }
  if (!from._internal_buyer_addr().empty()) {
    _internal_set_buyer_addr(from._internal_buyer_addr());
  }
  if (!from._internal_buyer_email().empty()) {
    _internal_set_buyer_email(from._internal_buyer_email());
  }
  if (!from._internal_buyer_name().empty()) {
    _internal_set_buyer_name(from._internal_buyer_name());
  }
  if (!from._internal_buyer_postcode().empty()) {
    _internal_set_buyer_postcode(from._internal_buyer_postcode());
  }
  if (!from._internal_buyer_tel().empty()) {
    _internal_set_buyer_tel(from._internal_buyer_tel());
  }
  if (!from._internal_cancel_reason().empty()) {
    _internal_set_cancel_reason(from._internal_cancel_reason());
  }
  if (!from._internal_card_code().empty()) {
    _internal_set_card_code(from._internal_card_code());
  }
  if (!from._internal_card_name().empty()) {
    _internal_set_card_name(from._internal_card_name());
  }
  if (!from._internal_card_number().empty()) {
    _internal_set_card_number(from._internal_card_number());
  }
  if (!from._internal_channel().empty()) {
    _internal_set_channel(from._internal_channel());
  }
  if (!from._internal_currency().empty()) {
    _internal_set_currency(from._internal_currency());
  }
  if (!from._internal_custom_data().empty()) {
    _internal_set_custom_data(from._internal_custom_data());
  }
  if (!from._internal_customer_uid().empty()) {
    _internal_set_customer_uid(from._internal_customer_uid());
  }
  if (!from._internal_customer_uid_usage().empty()) {
    _internal_set_customer_uid_usage(from._internal_customer_uid_usage());
  }
  if (!from._internal_fail_reason().empty()) {
    _internal_set_fail_reason(from._internal_fail_reason());
  }
  if (!from._internal_imp_uid().empty()) {
    _internal_set_imp_uid(from._internal_imp_uid());
  }
  if (!from._internal_merchant_uid().empty()) {
    _internal_set_merchant_uid(from._internal_merchant_uid());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_pay_method().empty()) {
    _internal_set_pay_method(from._internal_pay_method());
  }
  if (!from._internal_pg_id().empty()) {
    _internal_set_pg_id(from._internal_pg_id());
  }
  if (!from._internal_pg_provider().empty()) {
    _internal_set_pg_provider(from._internal_pg_provider());
  }
  if (!from._internal_pg_tid().empty()) {
    _internal_set_pg_tid(from._internal_pg_tid());
  }
  if (!from._internal_receipt_url().empty()) {
    _internal_set_receipt_url(from._internal_receipt_url());
  }
  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (!from._internal_user_agent().empty()) {
    _internal_set_user_agent(from._internal_user_agent());
  }
  if (!from._internal_vbank_code().empty()) {
    _internal_set_vbank_code(from._internal_vbank_code());
  }
  if (!from._internal_vbank_holder().empty()) {
    _internal_set_vbank_holder(from._internal_vbank_holder());
  }
  if (!from._internal_vbank_name().empty()) {
    _internal_set_vbank_name(from._internal_vbank_name());
  }
  if (!from._internal_vbank_num().empty()) {
    _internal_set_vbank_num(from._internal_vbank_num());
  }
  if (!from._internal_emb_pg_provider().empty()) {
    _internal_set_emb_pg_provider(from._internal_emb_pg_provider());
  }
  if (from._internal_has_promotion()) {
    _internal_mutable_promotion()->::payment::Promotion::MergeFrom(from._internal_promotion());
  }
  if (from._internal_amount() != 0) {
    _internal_set_amount(from._internal_amount());
  }
  if (from._internal_bank_code() != 0) {
    _internal_set_bank_code(from._internal_bank_code());
  }
  if (from._internal_cancel_amount() != 0) {
    _internal_set_cancel_amount(from._internal_cancel_amount());
  }
  if (from._internal_cancelled_at() != 0) {
    _internal_set_cancelled_at(from._internal_cancelled_at());
  }
  if (from._internal_card_quota() != 0) {
    _internal_set_card_quota(from._internal_card_quota());
  }
  if (from._internal_card_type() != 0) {
    _internal_set_card_type(from._internal_card_type());
  }
  if (from._internal_cash_receipt_issued() != 0) {
    _internal_set_cash_receipt_issued(from._internal_cash_receipt_issued());
  }
  if (from._internal_escrow() != 0) {
    _internal_set_escrow(from._internal_escrow());
  }
  if (from._internal_failed_at() != 0) {
    _internal_set_failed_at(from._internal_failed_at());
  }
  if (from._internal_paid_at() != 0) {
    _internal_set_paid_at(from._internal_paid_at());
  }
  if (from._internal_started_at() != 0) {
    _internal_set_started_at(from._internal_started_at());
  }
  if (from._internal_vbank_date() != 0) {
    _internal_set_vbank_date(from._internal_vbank_date());
  }
  if (from._internal_vbank_issued_at() != 0) {
    _internal_set_vbank_issued_at(from._internal_vbank_issued_at());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Payment::CopyFrom(const Payment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.Payment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Payment::IsInitialized() const {
  return true;
}

void Payment::InternalSwap(Payment* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  cancel_history_.InternalSwap(&other->cancel_history_);
  cancel_receipt_urls_.InternalSwap(&other->cancel_receipt_urls_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &apply_num_, GetArenaForAllocation(),
      &other->apply_num_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &bank_name_, GetArenaForAllocation(),
      &other->bank_name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &buyer_addr_, GetArenaForAllocation(),
      &other->buyer_addr_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &buyer_email_, GetArenaForAllocation(),
      &other->buyer_email_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &buyer_name_, GetArenaForAllocation(),
      &other->buyer_name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &buyer_postcode_, GetArenaForAllocation(),
      &other->buyer_postcode_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &buyer_tel_, GetArenaForAllocation(),
      &other->buyer_tel_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &cancel_reason_, GetArenaForAllocation(),
      &other->cancel_reason_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &card_code_, GetArenaForAllocation(),
      &other->card_code_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &card_name_, GetArenaForAllocation(),
      &other->card_name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &card_number_, GetArenaForAllocation(),
      &other->card_number_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &channel_, GetArenaForAllocation(),
      &other->channel_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &currency_, GetArenaForAllocation(),
      &other->currency_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &custom_data_, GetArenaForAllocation(),
      &other->custom_data_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &customer_uid_, GetArenaForAllocation(),
      &other->customer_uid_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &customer_uid_usage_, GetArenaForAllocation(),
      &other->customer_uid_usage_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &fail_reason_, GetArenaForAllocation(),
      &other->fail_reason_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &imp_uid_, GetArenaForAllocation(),
      &other->imp_uid_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &merchant_uid_, GetArenaForAllocation(),
      &other->merchant_uid_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pay_method_, GetArenaForAllocation(),
      &other->pay_method_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pg_id_, GetArenaForAllocation(),
      &other->pg_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pg_provider_, GetArenaForAllocation(),
      &other->pg_provider_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pg_tid_, GetArenaForAllocation(),
      &other->pg_tid_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &receipt_url_, GetArenaForAllocation(),
      &other->receipt_url_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &user_agent_, GetArenaForAllocation(),
      &other->user_agent_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &vbank_code_, GetArenaForAllocation(),
      &other->vbank_code_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &vbank_holder_, GetArenaForAllocation(),
      &other->vbank_holder_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &vbank_name_, GetArenaForAllocation(),
      &other->vbank_name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &vbank_num_, GetArenaForAllocation(),
      &other->vbank_num_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &emb_pg_provider_, GetArenaForAllocation(),
      &other->emb_pg_provider_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Payment, vbank_issued_at_)
      + sizeof(Payment::vbank_issued_at_)
      - PROTOBUF_FIELD_OFFSET(Payment, promotion_)>(
          reinterpret_cast<char*>(&promotion_),
          reinterpret_cast<char*>(&other->promotion_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Payment::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[0]);
}

// ===================================================================

class CancelHistory::_Internal {
 public:
};

CancelHistory::CancelHistory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.CancelHistory)
}
CancelHistory::CancelHistory(const CancelHistory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pg_tid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pg_tid().empty()) {
    pg_tid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pg_tid(), 
      GetArenaForAllocation());
  }
  reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reason().empty()) {
    reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reason(), 
      GetArenaForAllocation());
  }
  receipt_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_receipt_url().empty()) {
    receipt_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_receipt_url(), 
      GetArenaForAllocation());
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&cancelled_at_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(cancelled_at_));
  // @@protoc_insertion_point(copy_constructor:payment.CancelHistory)
}

inline void CancelHistory::SharedCtor() {
pg_tid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
receipt_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&amount_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&cancelled_at_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(cancelled_at_));
}

CancelHistory::~CancelHistory() {
  // @@protoc_insertion_point(destructor:payment.CancelHistory)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CancelHistory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  pg_tid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receipt_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CancelHistory::ArenaDtor(void* object) {
  CancelHistory* _this = reinterpret_cast< CancelHistory* >(object);
  (void)_this;
}
void CancelHistory::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CancelHistory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CancelHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.CancelHistory)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pg_tid_.ClearToEmpty();
  reason_.ClearToEmpty();
  receipt_url_.ClearToEmpty();
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cancelled_at_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(cancelled_at_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelHistory::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string pg_tid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pg_tid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.CancelHistory.pg_tid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cancelled_at = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          cancelled_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string reason = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.CancelHistory.reason"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string receipt_url = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_receipt_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.CancelHistory.receipt_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelHistory::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.CancelHistory)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pg_tid = 1;
  if (!this->_internal_pg_tid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pg_tid().data(), static_cast<int>(this->_internal_pg_tid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.CancelHistory.pg_tid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pg_tid(), target);
  }

  // int32 amount = 2;
  if (this->_internal_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_amount(), target);
  }

  // int32 cancelled_at = 3;
  if (this->_internal_cancelled_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_cancelled_at(), target);
  }

  // string reason = 4;
  if (!this->_internal_reason().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.CancelHistory.reason");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_reason(), target);
  }

  // string receipt_url = 5;
  if (!this->_internal_receipt_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_receipt_url().data(), static_cast<int>(this->_internal_receipt_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.CancelHistory.receipt_url");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_receipt_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.CancelHistory)
  return target;
}

size_t CancelHistory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.CancelHistory)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pg_tid = 1;
  if (!this->_internal_pg_tid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pg_tid());
  }

  // string reason = 4;
  if (!this->_internal_reason().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reason());
  }

  // string receipt_url = 5;
  if (!this->_internal_receipt_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_receipt_url());
  }

  // int32 amount = 2;
  if (this->_internal_amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_amount());
  }

  // int32 cancelled_at = 3;
  if (this->_internal_cancelled_at() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cancelled_at());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CancelHistory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CancelHistory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CancelHistory::GetClassData() const { return &_class_data_; }

void CancelHistory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CancelHistory *>(to)->MergeFrom(
      static_cast<const CancelHistory &>(from));
}


void CancelHistory::MergeFrom(const CancelHistory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.CancelHistory)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pg_tid().empty()) {
    _internal_set_pg_tid(from._internal_pg_tid());
  }
  if (!from._internal_reason().empty()) {
    _internal_set_reason(from._internal_reason());
  }
  if (!from._internal_receipt_url().empty()) {
    _internal_set_receipt_url(from._internal_receipt_url());
  }
  if (from._internal_amount() != 0) {
    _internal_set_amount(from._internal_amount());
  }
  if (from._internal_cancelled_at() != 0) {
    _internal_set_cancelled_at(from._internal_cancelled_at());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CancelHistory::CopyFrom(const CancelHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.CancelHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelHistory::IsInitialized() const {
  return true;
}

void CancelHistory::InternalSwap(CancelHistory* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pg_tid_, GetArenaForAllocation(),
      &other->pg_tid_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &reason_, GetArenaForAllocation(),
      &other->reason_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &receipt_url_, GetArenaForAllocation(),
      &other->receipt_url_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CancelHistory, cancelled_at_)
      + sizeof(CancelHistory::cancelled_at_)
      - PROTOBUF_FIELD_OFFSET(CancelHistory, amount_)>(
          reinterpret_cast<char*>(&amount_),
          reinterpret_cast<char*>(&other->amount_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelHistory::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[1]);
}

// ===================================================================

class PaymentPage::_Internal {
 public:
};

PaymentPage::PaymentPage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  list_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentPage)
}
PaymentPage::PaymentPage(const PaymentPage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      list_(from.list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&total_, &from.total_,
    static_cast<size_t>(reinterpret_cast<char*>(&next_) -
    reinterpret_cast<char*>(&total_)) + sizeof(next_));
  // @@protoc_insertion_point(copy_constructor:payment.PaymentPage)
}

inline void PaymentPage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&total_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&next_) -
    reinterpret_cast<char*>(&total_)) + sizeof(next_));
}

PaymentPage::~PaymentPage() {
  // @@protoc_insertion_point(destructor:payment.PaymentPage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentPage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaymentPage::ArenaDtor(void* object) {
  PaymentPage* _this = reinterpret_cast< PaymentPage* >(object);
  (void)_this;
}
void PaymentPage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentPage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentPage::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentPage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  ::memset(&total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&next_) -
      reinterpret_cast<char*>(&total_)) + sizeof(next_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentPage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 total = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          total_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 previous = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          previous_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 next = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          next_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .payment.Payment list = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentPage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentPage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 total = 1;
  if (this->_internal_total() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_total(), target);
  }

  // int32 previous = 2;
  if (this->_internal_previous() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_previous(), target);
  }

  // int32 next = 3;
  if (this->_internal_next() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_next(), target);
  }

  // repeated .payment.Payment list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentPage)
  return target;
}

size_t PaymentPage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentPage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .payment.Payment list = 4;
  total_size += 1UL * this->_internal_list_size();
  for (const auto& msg : this->list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 total = 1;
  if (this->_internal_total() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_total());
  }

  // int32 previous = 2;
  if (this->_internal_previous() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_previous());
  }

  // int32 next = 3;
  if (this->_internal_next() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_next());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentPage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentPage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentPage::GetClassData() const { return &_class_data_; }

void PaymentPage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentPage *>(to)->MergeFrom(
      static_cast<const PaymentPage &>(from));
}


void PaymentPage::MergeFrom(const PaymentPage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentPage)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
  if (from._internal_total() != 0) {
    _internal_set_total(from._internal_total());
  }
  if (from._internal_previous() != 0) {
    _internal_set_previous(from._internal_previous());
  }
  if (from._internal_next() != 0) {
    _internal_set_next(from._internal_next());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentPage::CopyFrom(const PaymentPage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentPage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentPage::IsInitialized() const {
  return true;
}

void PaymentPage::InternalSwap(PaymentPage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  list_.InternalSwap(&other->list_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaymentPage, next_)
      + sizeof(PaymentPage::next_)
      - PROTOBUF_FIELD_OFFSET(PaymentPage, total_)>(
          reinterpret_cast<char*>(&total_),
          reinterpret_cast<char*>(&other->total_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentPage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[2]);
}

// ===================================================================

class PaymentBalanceDetail::_Internal {
 public:
};

PaymentBalanceDetail::PaymentBalanceDetail(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentBalanceDetail)
}
PaymentBalanceDetail::PaymentBalanceDetail(const PaymentBalanceDetail& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&tax_free_, &from.tax_free_,
    static_cast<size_t>(reinterpret_cast<char*>(&service_) -
    reinterpret_cast<char*>(&tax_free_)) + sizeof(service_));
  // @@protoc_insertion_point(copy_constructor:payment.PaymentBalanceDetail)
}

inline void PaymentBalanceDetail::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&tax_free_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&service_) -
    reinterpret_cast<char*>(&tax_free_)) + sizeof(service_));
}

PaymentBalanceDetail::~PaymentBalanceDetail() {
  // @@protoc_insertion_point(destructor:payment.PaymentBalanceDetail)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentBalanceDetail::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaymentBalanceDetail::ArenaDtor(void* object) {
  PaymentBalanceDetail* _this = reinterpret_cast< PaymentBalanceDetail* >(object);
  (void)_this;
}
void PaymentBalanceDetail::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentBalanceDetail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentBalanceDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentBalanceDetail)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&tax_free_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&service_) -
      reinterpret_cast<char*>(&tax_free_)) + sizeof(service_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentBalanceDetail::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 tax_free = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          tax_free_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 supply = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          supply_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 vat = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          vat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 service = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          service_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentBalanceDetail::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentBalanceDetail)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 tax_free = 1;
  if (this->_internal_tax_free() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_tax_free(), target);
  }

  // int32 supply = 2;
  if (this->_internal_supply() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_supply(), target);
  }

  // int32 vat = 3;
  if (this->_internal_vat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_vat(), target);
  }

  // int32 service = 4;
  if (this->_internal_service() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_service(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentBalanceDetail)
  return target;
}

size_t PaymentBalanceDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentBalanceDetail)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 tax_free = 1;
  if (this->_internal_tax_free() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tax_free());
  }

  // int32 supply = 2;
  if (this->_internal_supply() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_supply());
  }

  // int32 vat = 3;
  if (this->_internal_vat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_vat());
  }

  // int32 service = 4;
  if (this->_internal_service() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_service());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentBalanceDetail::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentBalanceDetail::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentBalanceDetail::GetClassData() const { return &_class_data_; }

void PaymentBalanceDetail::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentBalanceDetail *>(to)->MergeFrom(
      static_cast<const PaymentBalanceDetail &>(from));
}


void PaymentBalanceDetail::MergeFrom(const PaymentBalanceDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentBalanceDetail)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_tax_free() != 0) {
    _internal_set_tax_free(from._internal_tax_free());
  }
  if (from._internal_supply() != 0) {
    _internal_set_supply(from._internal_supply());
  }
  if (from._internal_vat() != 0) {
    _internal_set_vat(from._internal_vat());
  }
  if (from._internal_service() != 0) {
    _internal_set_service(from._internal_service());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentBalanceDetail::CopyFrom(const PaymentBalanceDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentBalanceDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentBalanceDetail::IsInitialized() const {
  return true;
}

void PaymentBalanceDetail::InternalSwap(PaymentBalanceDetail* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaymentBalanceDetail, service_)
      + sizeof(PaymentBalanceDetail::service_)
      - PROTOBUF_FIELD_OFFSET(PaymentBalanceDetail, tax_free_)>(
          reinterpret_cast<char*>(&tax_free_),
          reinterpret_cast<char*>(&other->tax_free_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentBalanceDetail::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[3]);
}

// ===================================================================

class PaymentBalance::_Internal {
 public:
  static const ::payment::PaymentBalanceDetail& cash_receipt(const PaymentBalance* msg);
  static const ::payment::PaymentBalanceDetail& primary(const PaymentBalance* msg);
  static const ::payment::PaymentBalanceDetail& secondary(const PaymentBalance* msg);
  static const ::payment::PaymentBalanceDetail& discount(const PaymentBalance* msg);
};

const ::payment::PaymentBalanceDetail&
PaymentBalance::_Internal::cash_receipt(const PaymentBalance* msg) {
  return *msg->cash_receipt_;
}
const ::payment::PaymentBalanceDetail&
PaymentBalance::_Internal::primary(const PaymentBalance* msg) {
  return *msg->primary_;
}
const ::payment::PaymentBalanceDetail&
PaymentBalance::_Internal::secondary(const PaymentBalance* msg) {
  return *msg->secondary_;
}
const ::payment::PaymentBalanceDetail&
PaymentBalance::_Internal::discount(const PaymentBalance* msg) {
  return *msg->discount_;
}
PaymentBalance::PaymentBalance(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  histories_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentBalance)
}
PaymentBalance::PaymentBalance(const PaymentBalance& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      histories_(from.histories_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_cash_receipt()) {
    cash_receipt_ = new ::payment::PaymentBalanceDetail(*from.cash_receipt_);
  } else {
    cash_receipt_ = nullptr;
  }
  if (from._internal_has_primary()) {
    primary_ = new ::payment::PaymentBalanceDetail(*from.primary_);
  } else {
    primary_ = nullptr;
  }
  if (from._internal_has_secondary()) {
    secondary_ = new ::payment::PaymentBalanceDetail(*from.secondary_);
  } else {
    secondary_ = nullptr;
  }
  if (from._internal_has_discount()) {
    discount_ = new ::payment::PaymentBalanceDetail(*from.discount_);
  } else {
    discount_ = nullptr;
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:payment.PaymentBalance)
}

inline void PaymentBalance::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&cash_receipt_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&amount_) -
    reinterpret_cast<char*>(&cash_receipt_)) + sizeof(amount_));
}

PaymentBalance::~PaymentBalance() {
  // @@protoc_insertion_point(destructor:payment.PaymentBalance)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentBalance::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete cash_receipt_;
  if (this != internal_default_instance()) delete primary_;
  if (this != internal_default_instance()) delete secondary_;
  if (this != internal_default_instance()) delete discount_;
}

void PaymentBalance::ArenaDtor(void* object) {
  PaymentBalance* _this = reinterpret_cast< PaymentBalance* >(object);
  (void)_this;
}
void PaymentBalance::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentBalance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentBalance::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentBalance)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  histories_.Clear();
  if (GetArenaForAllocation() == nullptr && cash_receipt_ != nullptr) {
    delete cash_receipt_;
  }
  cash_receipt_ = nullptr;
  if (GetArenaForAllocation() == nullptr && primary_ != nullptr) {
    delete primary_;
  }
  primary_ = nullptr;
  if (GetArenaForAllocation() == nullptr && secondary_ != nullptr) {
    delete secondary_;
  }
  secondary_ = nullptr;
  if (GetArenaForAllocation() == nullptr && discount_ != nullptr) {
    delete discount_;
  }
  discount_ = nullptr;
  amount_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentBalance::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 amount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.PaymentBalanceDetail cash_receipt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_cash_receipt(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.PaymentBalanceDetail primary = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_primary(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.PaymentBalanceDetail secondary = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_secondary(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.PaymentBalanceDetail discount = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_discount(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .payment.PaymentBalanceHistory histories = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_histories(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentBalance::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentBalance)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 amount = 1;
  if (this->_internal_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_amount(), target);
  }

  // .payment.PaymentBalanceDetail cash_receipt = 2;
  if (this->_internal_has_cash_receipt()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::cash_receipt(this), target, stream);
  }

  // .payment.PaymentBalanceDetail primary = 3;
  if (this->_internal_has_primary()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::primary(this), target, stream);
  }

  // .payment.PaymentBalanceDetail secondary = 4;
  if (this->_internal_has_secondary()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::secondary(this), target, stream);
  }

  // .payment.PaymentBalanceDetail discount = 5;
  if (this->_internal_has_discount()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::discount(this), target, stream);
  }

  // repeated .payment.PaymentBalanceHistory histories = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_histories_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_histories(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentBalance)
  return target;
}

size_t PaymentBalance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentBalance)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .payment.PaymentBalanceHistory histories = 6;
  total_size += 1UL * this->_internal_histories_size();
  for (const auto& msg : this->histories_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .payment.PaymentBalanceDetail cash_receipt = 2;
  if (this->_internal_has_cash_receipt()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cash_receipt_);
  }

  // .payment.PaymentBalanceDetail primary = 3;
  if (this->_internal_has_primary()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *primary_);
  }

  // .payment.PaymentBalanceDetail secondary = 4;
  if (this->_internal_has_secondary()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *secondary_);
  }

  // .payment.PaymentBalanceDetail discount = 5;
  if (this->_internal_has_discount()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *discount_);
  }

  // int32 amount = 1;
  if (this->_internal_amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_amount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentBalance::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentBalance::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentBalance::GetClassData() const { return &_class_data_; }

void PaymentBalance::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentBalance *>(to)->MergeFrom(
      static_cast<const PaymentBalance &>(from));
}


void PaymentBalance::MergeFrom(const PaymentBalance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentBalance)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  histories_.MergeFrom(from.histories_);
  if (from._internal_has_cash_receipt()) {
    _internal_mutable_cash_receipt()->::payment::PaymentBalanceDetail::MergeFrom(from._internal_cash_receipt());
  }
  if (from._internal_has_primary()) {
    _internal_mutable_primary()->::payment::PaymentBalanceDetail::MergeFrom(from._internal_primary());
  }
  if (from._internal_has_secondary()) {
    _internal_mutable_secondary()->::payment::PaymentBalanceDetail::MergeFrom(from._internal_secondary());
  }
  if (from._internal_has_discount()) {
    _internal_mutable_discount()->::payment::PaymentBalanceDetail::MergeFrom(from._internal_discount());
  }
  if (from._internal_amount() != 0) {
    _internal_set_amount(from._internal_amount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentBalance::CopyFrom(const PaymentBalance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentBalance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentBalance::IsInitialized() const {
  return true;
}

void PaymentBalance::InternalSwap(PaymentBalance* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  histories_.InternalSwap(&other->histories_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaymentBalance, amount_)
      + sizeof(PaymentBalance::amount_)
      - PROTOBUF_FIELD_OFFSET(PaymentBalance, cash_receipt_)>(
          reinterpret_cast<char*>(&cash_receipt_),
          reinterpret_cast<char*>(&other->cash_receipt_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentBalance::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[4]);
}

// ===================================================================

class PaymentBalanceHistory::_Internal {
 public:
  static const ::payment::PaymentBalanceDetail& cash_receipt(const PaymentBalanceHistory* msg);
  static const ::payment::PaymentBalanceDetail& primary(const PaymentBalanceHistory* msg);
  static const ::payment::PaymentBalanceDetail& secondary(const PaymentBalanceHistory* msg);
  static const ::payment::PaymentBalanceDetail& discount(const PaymentBalanceHistory* msg);
};

const ::payment::PaymentBalanceDetail&
PaymentBalanceHistory::_Internal::cash_receipt(const PaymentBalanceHistory* msg) {
  return *msg->cash_receipt_;
}
const ::payment::PaymentBalanceDetail&
PaymentBalanceHistory::_Internal::primary(const PaymentBalanceHistory* msg) {
  return *msg->primary_;
}
const ::payment::PaymentBalanceDetail&
PaymentBalanceHistory::_Internal::secondary(const PaymentBalanceHistory* msg) {
  return *msg->secondary_;
}
const ::payment::PaymentBalanceDetail&
PaymentBalanceHistory::_Internal::discount(const PaymentBalanceHistory* msg) {
  return *msg->discount_;
}
PaymentBalanceHistory::PaymentBalanceHistory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentBalanceHistory)
}
PaymentBalanceHistory::PaymentBalanceHistory(const PaymentBalanceHistory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_cash_receipt()) {
    cash_receipt_ = new ::payment::PaymentBalanceDetail(*from.cash_receipt_);
  } else {
    cash_receipt_ = nullptr;
  }
  if (from._internal_has_primary()) {
    primary_ = new ::payment::PaymentBalanceDetail(*from.primary_);
  } else {
    primary_ = nullptr;
  }
  if (from._internal_has_secondary()) {
    secondary_ = new ::payment::PaymentBalanceDetail(*from.secondary_);
  } else {
    secondary_ = nullptr;
  }
  if (from._internal_has_discount()) {
    discount_ = new ::payment::PaymentBalanceDetail(*from.discount_);
  } else {
    discount_ = nullptr;
  }
  created_ = from.created_;
  // @@protoc_insertion_point(copy_constructor:payment.PaymentBalanceHistory)
}

inline void PaymentBalanceHistory::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&cash_receipt_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&created_) -
    reinterpret_cast<char*>(&cash_receipt_)) + sizeof(created_));
}

PaymentBalanceHistory::~PaymentBalanceHistory() {
  // @@protoc_insertion_point(destructor:payment.PaymentBalanceHistory)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentBalanceHistory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete cash_receipt_;
  if (this != internal_default_instance()) delete primary_;
  if (this != internal_default_instance()) delete secondary_;
  if (this != internal_default_instance()) delete discount_;
}

void PaymentBalanceHistory::ArenaDtor(void* object) {
  PaymentBalanceHistory* _this = reinterpret_cast< PaymentBalanceHistory* >(object);
  (void)_this;
}
void PaymentBalanceHistory::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentBalanceHistory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentBalanceHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentBalanceHistory)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && cash_receipt_ != nullptr) {
    delete cash_receipt_;
  }
  cash_receipt_ = nullptr;
  if (GetArenaForAllocation() == nullptr && primary_ != nullptr) {
    delete primary_;
  }
  primary_ = nullptr;
  if (GetArenaForAllocation() == nullptr && secondary_ != nullptr) {
    delete secondary_;
  }
  secondary_ = nullptr;
  if (GetArenaForAllocation() == nullptr && discount_ != nullptr) {
    delete discount_;
  }
  discount_ = nullptr;
  created_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentBalanceHistory::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.PaymentBalanceDetail cash_receipt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_cash_receipt(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.PaymentBalanceDetail primary = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_primary(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.PaymentBalanceDetail secondary = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_secondary(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.PaymentBalanceDetail discount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_discount(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 created = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          created_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentBalanceHistory::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentBalanceHistory)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.PaymentBalanceDetail cash_receipt = 1;
  if (this->_internal_has_cash_receipt()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::cash_receipt(this), target, stream);
  }

  // .payment.PaymentBalanceDetail primary = 2;
  if (this->_internal_has_primary()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::primary(this), target, stream);
  }

  // .payment.PaymentBalanceDetail secondary = 3;
  if (this->_internal_has_secondary()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::secondary(this), target, stream);
  }

  // .payment.PaymentBalanceDetail discount = 4;
  if (this->_internal_has_discount()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::discount(this), target, stream);
  }

  // int32 created = 5;
  if (this->_internal_created() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_created(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentBalanceHistory)
  return target;
}

size_t PaymentBalanceHistory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentBalanceHistory)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .payment.PaymentBalanceDetail cash_receipt = 1;
  if (this->_internal_has_cash_receipt()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cash_receipt_);
  }

  // .payment.PaymentBalanceDetail primary = 2;
  if (this->_internal_has_primary()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *primary_);
  }

  // .payment.PaymentBalanceDetail secondary = 3;
  if (this->_internal_has_secondary()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *secondary_);
  }

  // .payment.PaymentBalanceDetail discount = 4;
  if (this->_internal_has_discount()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *discount_);
  }

  // int32 created = 5;
  if (this->_internal_created() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_created());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentBalanceHistory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentBalanceHistory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentBalanceHistory::GetClassData() const { return &_class_data_; }

void PaymentBalanceHistory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentBalanceHistory *>(to)->MergeFrom(
      static_cast<const PaymentBalanceHistory &>(from));
}


void PaymentBalanceHistory::MergeFrom(const PaymentBalanceHistory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentBalanceHistory)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_cash_receipt()) {
    _internal_mutable_cash_receipt()->::payment::PaymentBalanceDetail::MergeFrom(from._internal_cash_receipt());
  }
  if (from._internal_has_primary()) {
    _internal_mutable_primary()->::payment::PaymentBalanceDetail::MergeFrom(from._internal_primary());
  }
  if (from._internal_has_secondary()) {
    _internal_mutable_secondary()->::payment::PaymentBalanceDetail::MergeFrom(from._internal_secondary());
  }
  if (from._internal_has_discount()) {
    _internal_mutable_discount()->::payment::PaymentBalanceDetail::MergeFrom(from._internal_discount());
  }
  if (from._internal_created() != 0) {
    _internal_set_created(from._internal_created());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentBalanceHistory::CopyFrom(const PaymentBalanceHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentBalanceHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentBalanceHistory::IsInitialized() const {
  return true;
}

void PaymentBalanceHistory::InternalSwap(PaymentBalanceHistory* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaymentBalanceHistory, created_)
      + sizeof(PaymentBalanceHistory::created_)
      - PROTOBUF_FIELD_OFFSET(PaymentBalanceHistory, cash_receipt_)>(
          reinterpret_cast<char*>(&cash_receipt_),
          reinterpret_cast<char*>(&other->cash_receipt_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentBalanceHistory::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[5]);
}

// ===================================================================

class PaymentRequest::_Internal {
 public:
};

PaymentRequest::PaymentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentRequest)
}
PaymentRequest::PaymentRequest(const PaymentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  imp_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imp_uid().empty()) {
    imp_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imp_uid(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:payment.PaymentRequest)
}

inline void PaymentRequest::SharedCtor() {
imp_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PaymentRequest::~PaymentRequest() {
  // @@protoc_insertion_point(destructor:payment.PaymentRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  imp_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PaymentRequest::ArenaDtor(void* object) {
  PaymentRequest* _this = reinterpret_cast< PaymentRequest* >(object);
  (void)_this;
}
void PaymentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imp_uid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string imp_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_imp_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentRequest.imp_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string imp_uid = 1;
  if (!this->_internal_imp_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_imp_uid().data(), static_cast<int>(this->_internal_imp_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentRequest.imp_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_imp_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentRequest)
  return target;
}

size_t PaymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string imp_uid = 1;
  if (!this->_internal_imp_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_imp_uid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentRequest::GetClassData() const { return &_class_data_; }

void PaymentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentRequest *>(to)->MergeFrom(
      static_cast<const PaymentRequest &>(from));
}


void PaymentRequest::MergeFrom(const PaymentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_imp_uid().empty()) {
    _internal_set_imp_uid(from._internal_imp_uid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentRequest::CopyFrom(const PaymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentRequest::IsInitialized() const {
  return true;
}

void PaymentRequest::InternalSwap(PaymentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &imp_uid_, GetArenaForAllocation(),
      &other->imp_uid_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[6]);
}

// ===================================================================

class PaymentResponse::_Internal {
 public:
  static const ::payment::Payment& response(const PaymentResponse* msg);
};

const ::payment::Payment&
PaymentResponse::_Internal::response(const PaymentResponse* msg) {
  return *msg->response_;
}
PaymentResponse::PaymentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentResponse)
}
PaymentResponse::PaymentResponse(const PaymentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_response()) {
    response_ = new ::payment::Payment(*from.response_);
  } else {
    response_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:payment.PaymentResponse)
}

inline void PaymentResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&response_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&response_)) + sizeof(code_));
}

PaymentResponse::~PaymentResponse() {
  // @@protoc_insertion_point(destructor:payment.PaymentResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete response_;
}

void PaymentResponse::ArenaDtor(void* object) {
  PaymentResponse* _this = reinterpret_cast< PaymentResponse* >(object);
  (void)_this;
}
void PaymentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.Payment response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .payment.Payment response = 3;
  if (this->_internal_has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentResponse)
  return target;
}

size_t PaymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .payment.Payment response = 3;
  if (this->_internal_has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentResponse::GetClassData() const { return &_class_data_; }

void PaymentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentResponse *>(to)->MergeFrom(
      static_cast<const PaymentResponse &>(from));
}


void PaymentResponse::MergeFrom(const PaymentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_has_response()) {
    _internal_mutable_response()->::payment::Payment::MergeFrom(from._internal_response());
  }
  if (from._internal_code() != 0) {
    _internal_set_code(from._internal_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentResponse::CopyFrom(const PaymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentResponse::IsInitialized() const {
  return true;
}

void PaymentResponse::InternalSwap(PaymentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, GetArenaForAllocation(),
      &other->message_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaymentResponse, code_)
      + sizeof(PaymentResponse::code_)
      - PROTOBUF_FIELD_OFFSET(PaymentResponse, response_)>(
          reinterpret_cast<char*>(&response_),
          reinterpret_cast<char*>(&other->response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[7]);
}

// ===================================================================

class PaymentsRequest::_Internal {
 public:
};

PaymentsRequest::PaymentsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  imp_uid_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentsRequest)
}
PaymentsRequest::PaymentsRequest(const PaymentsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      imp_uid_(from.imp_uid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:payment.PaymentsRequest)
}

inline void PaymentsRequest::SharedCtor() {
}

PaymentsRequest::~PaymentsRequest() {
  // @@protoc_insertion_point(destructor:payment.PaymentsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaymentsRequest::ArenaDtor(void* object) {
  PaymentsRequest* _this = reinterpret_cast< PaymentsRequest* >(object);
  (void)_this;
}
void PaymentsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imp_uid_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string imp_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_imp_uid();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentsRequest.imp_uid"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string imp_uid = 1;
  for (int i = 0, n = this->_internal_imp_uid_size(); i < n; i++) {
    const auto& s = this->_internal_imp_uid(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentsRequest.imp_uid");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentsRequest)
  return target;
}

size_t PaymentsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string imp_uid = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(imp_uid_.size());
  for (int i = 0, n = imp_uid_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      imp_uid_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentsRequest::GetClassData() const { return &_class_data_; }

void PaymentsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentsRequest *>(to)->MergeFrom(
      static_cast<const PaymentsRequest &>(from));
}


void PaymentsRequest::MergeFrom(const PaymentsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  imp_uid_.MergeFrom(from.imp_uid_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentsRequest::CopyFrom(const PaymentsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentsRequest::IsInitialized() const {
  return true;
}

void PaymentsRequest::InternalSwap(PaymentsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  imp_uid_.InternalSwap(&other->imp_uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[8]);
}

// ===================================================================

class PaymentsResponse::_Internal {
 public:
};

PaymentsResponse::PaymentsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  response_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentsResponse)
}
PaymentsResponse::PaymentsResponse(const PaymentsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      response_(from.response_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:payment.PaymentsResponse)
}

inline void PaymentsResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
code_ = 0;
}

PaymentsResponse::~PaymentsResponse() {
  // @@protoc_insertion_point(destructor:payment.PaymentsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PaymentsResponse::ArenaDtor(void* object) {
  PaymentsResponse* _this = reinterpret_cast< PaymentsResponse* >(object);
  (void)_this;
}
void PaymentsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  response_.Clear();
  message_.ClearToEmpty();
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentsResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .payment.Payment response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_response(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentsResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // repeated .payment.Payment response = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_response_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_response(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentsResponse)
  return target;
}

size_t PaymentsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .payment.Payment response = 3;
  total_size += 1UL * this->_internal_response_size();
  for (const auto& msg : this->response_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentsResponse::GetClassData() const { return &_class_data_; }

void PaymentsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentsResponse *>(to)->MergeFrom(
      static_cast<const PaymentsResponse &>(from));
}


void PaymentsResponse::MergeFrom(const PaymentsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  response_.MergeFrom(from.response_);
  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_code() != 0) {
    _internal_set_code(from._internal_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentsResponse::CopyFrom(const PaymentsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentsResponse::IsInitialized() const {
  return true;
}

void PaymentsResponse::InternalSwap(PaymentsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  response_.InternalSwap(&other->response_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, GetArenaForAllocation(),
      &other->message_, other->GetArenaForAllocation()
  );
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[9]);
}

// ===================================================================

class PaymentsMerchantUidRequest::_Internal {
 public:
};

PaymentsMerchantUidRequest::PaymentsMerchantUidRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentsMerchantUidRequest)
}
PaymentsMerchantUidRequest::PaymentsMerchantUidRequest(const PaymentsMerchantUidRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_merchant_uid().empty()) {
    merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_merchant_uid(), 
      GetArenaForAllocation());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  sorting_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sorting().empty()) {
    sorting_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sorting(), 
      GetArenaForAllocation());
  }
  page_ = from.page_;
  // @@protoc_insertion_point(copy_constructor:payment.PaymentsMerchantUidRequest)
}

inline void PaymentsMerchantUidRequest::SharedCtor() {
merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
sorting_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
page_ = 0;
}

PaymentsMerchantUidRequest::~PaymentsMerchantUidRequest() {
  // @@protoc_insertion_point(destructor:payment.PaymentsMerchantUidRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentsMerchantUidRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  merchant_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sorting_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PaymentsMerchantUidRequest::ArenaDtor(void* object) {
  PaymentsMerchantUidRequest* _this = reinterpret_cast< PaymentsMerchantUidRequest* >(object);
  (void)_this;
}
void PaymentsMerchantUidRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentsMerchantUidRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentsMerchantUidRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentsMerchantUidRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  merchant_uid_.ClearToEmpty();
  status_.ClearToEmpty();
  sorting_.ClearToEmpty();
  page_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentsMerchantUidRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string merchant_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_merchant_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentsMerchantUidRequest.merchant_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentsMerchantUidRequest.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          page_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sorting = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_sorting();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentsMerchantUidRequest.sorting"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentsMerchantUidRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentsMerchantUidRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string merchant_uid = 1;
  if (!this->_internal_merchant_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_merchant_uid().data(), static_cast<int>(this->_internal_merchant_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentsMerchantUidRequest.merchant_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_merchant_uid(), target);
  }

  // string status = 2;
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentsMerchantUidRequest.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  // int32 page = 3;
  if (this->_internal_page() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_page(), target);
  }

  // string sorting = 4;
  if (!this->_internal_sorting().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sorting().data(), static_cast<int>(this->_internal_sorting().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentsMerchantUidRequest.sorting");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_sorting(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentsMerchantUidRequest)
  return target;
}

size_t PaymentsMerchantUidRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentsMerchantUidRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string merchant_uid = 1;
  if (!this->_internal_merchant_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_merchant_uid());
  }

  // string status = 2;
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string sorting = 4;
  if (!this->_internal_sorting().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sorting());
  }

  // int32 page = 3;
  if (this->_internal_page() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentsMerchantUidRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentsMerchantUidRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentsMerchantUidRequest::GetClassData() const { return &_class_data_; }

void PaymentsMerchantUidRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentsMerchantUidRequest *>(to)->MergeFrom(
      static_cast<const PaymentsMerchantUidRequest &>(from));
}


void PaymentsMerchantUidRequest::MergeFrom(const PaymentsMerchantUidRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentsMerchantUidRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_merchant_uid().empty()) {
    _internal_set_merchant_uid(from._internal_merchant_uid());
  }
  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (!from._internal_sorting().empty()) {
    _internal_set_sorting(from._internal_sorting());
  }
  if (from._internal_page() != 0) {
    _internal_set_page(from._internal_page());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentsMerchantUidRequest::CopyFrom(const PaymentsMerchantUidRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentsMerchantUidRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentsMerchantUidRequest::IsInitialized() const {
  return true;
}

void PaymentsMerchantUidRequest::InternalSwap(PaymentsMerchantUidRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &merchant_uid_, GetArenaForAllocation(),
      &other->merchant_uid_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sorting_, GetArenaForAllocation(),
      &other->sorting_, other->GetArenaForAllocation()
  );
  swap(page_, other->page_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentsMerchantUidRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[10]);
}

// ===================================================================

class PaymentsMerchantUidResponse::_Internal {
 public:
  static const ::payment::PaymentPage& response(const PaymentsMerchantUidResponse* msg);
};

const ::payment::PaymentPage&
PaymentsMerchantUidResponse::_Internal::response(const PaymentsMerchantUidResponse* msg) {
  return *msg->response_;
}
PaymentsMerchantUidResponse::PaymentsMerchantUidResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentsMerchantUidResponse)
}
PaymentsMerchantUidResponse::PaymentsMerchantUidResponse(const PaymentsMerchantUidResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_response()) {
    response_ = new ::payment::PaymentPage(*from.response_);
  } else {
    response_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:payment.PaymentsMerchantUidResponse)
}

inline void PaymentsMerchantUidResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&response_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&response_)) + sizeof(code_));
}

PaymentsMerchantUidResponse::~PaymentsMerchantUidResponse() {
  // @@protoc_insertion_point(destructor:payment.PaymentsMerchantUidResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentsMerchantUidResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete response_;
}

void PaymentsMerchantUidResponse::ArenaDtor(void* object) {
  PaymentsMerchantUidResponse* _this = reinterpret_cast< PaymentsMerchantUidResponse* >(object);
  (void)_this;
}
void PaymentsMerchantUidResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentsMerchantUidResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentsMerchantUidResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentsMerchantUidResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentsMerchantUidResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentsMerchantUidResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.PaymentPage response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentsMerchantUidResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentsMerchantUidResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentsMerchantUidResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .payment.PaymentPage response = 3;
  if (this->_internal_has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentsMerchantUidResponse)
  return target;
}

size_t PaymentsMerchantUidResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentsMerchantUidResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .payment.PaymentPage response = 3;
  if (this->_internal_has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentsMerchantUidResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentsMerchantUidResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentsMerchantUidResponse::GetClassData() const { return &_class_data_; }

void PaymentsMerchantUidResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentsMerchantUidResponse *>(to)->MergeFrom(
      static_cast<const PaymentsMerchantUidResponse &>(from));
}


void PaymentsMerchantUidResponse::MergeFrom(const PaymentsMerchantUidResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentsMerchantUidResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_has_response()) {
    _internal_mutable_response()->::payment::PaymentPage::MergeFrom(from._internal_response());
  }
  if (from._internal_code() != 0) {
    _internal_set_code(from._internal_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentsMerchantUidResponse::CopyFrom(const PaymentsMerchantUidResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentsMerchantUidResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentsMerchantUidResponse::IsInitialized() const {
  return true;
}

void PaymentsMerchantUidResponse::InternalSwap(PaymentsMerchantUidResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, GetArenaForAllocation(),
      &other->message_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaymentsMerchantUidResponse, code_)
      + sizeof(PaymentsMerchantUidResponse::code_)
      - PROTOBUF_FIELD_OFFSET(PaymentsMerchantUidResponse, response_)>(
          reinterpret_cast<char*>(&response_),
          reinterpret_cast<char*>(&other->response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentsMerchantUidResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[11]);
}

// ===================================================================

class PaymentStatusRequest::_Internal {
 public:
};

PaymentStatusRequest::PaymentStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentStatusRequest)
}
PaymentStatusRequest::PaymentStatusRequest(const PaymentStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  sorting_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sorting().empty()) {
    sorting_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sorting(), 
      GetArenaForAllocation());
  }
  ::memcpy(&page_, &from.page_,
    static_cast<size_t>(reinterpret_cast<char*>(&to_) -
    reinterpret_cast<char*>(&page_)) + sizeof(to_));
  // @@protoc_insertion_point(copy_constructor:payment.PaymentStatusRequest)
}

inline void PaymentStatusRequest::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
sorting_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&page_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&to_) -
    reinterpret_cast<char*>(&page_)) + sizeof(to_));
}

PaymentStatusRequest::~PaymentStatusRequest() {
  // @@protoc_insertion_point(destructor:payment.PaymentStatusRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sorting_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PaymentStatusRequest::ArenaDtor(void* object) {
  PaymentStatusRequest* _this = reinterpret_cast< PaymentStatusRequest* >(object);
  (void)_this;
}
void PaymentStatusRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  sorting_.ClearToEmpty();
  ::memset(&page_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&to_) -
      reinterpret_cast<char*>(&page_)) + sizeof(to_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentStatusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentStatusRequest.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          page_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 limit = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 from = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          from_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 to = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          to_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sorting = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_sorting();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentStatusRequest.sorting"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentStatusRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1;
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentStatusRequest.status");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_status(), target);
  }

  // int32 page = 2;
  if (this->_internal_page() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page(), target);
  }

  // int32 limit = 3;
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_limit(), target);
  }

  // int32 from = 4;
  if (this->_internal_from() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_from(), target);
  }

  // int32 to = 5;
  if (this->_internal_to() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_to(), target);
  }

  // string sorting = 6;
  if (!this->_internal_sorting().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sorting().data(), static_cast<int>(this->_internal_sorting().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentStatusRequest.sorting");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_sorting(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentStatusRequest)
  return target;
}

size_t PaymentStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentStatusRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 1;
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string sorting = 6;
  if (!this->_internal_sorting().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sorting());
  }

  // int32 page = 2;
  if (this->_internal_page() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page());
  }

  // int32 limit = 3;
  if (this->_internal_limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_limit());
  }

  // int32 from = 4;
  if (this->_internal_from() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_from());
  }

  // int32 to = 5;
  if (this->_internal_to() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_to());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentStatusRequest::GetClassData() const { return &_class_data_; }

void PaymentStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentStatusRequest *>(to)->MergeFrom(
      static_cast<const PaymentStatusRequest &>(from));
}


void PaymentStatusRequest::MergeFrom(const PaymentStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (!from._internal_sorting().empty()) {
    _internal_set_sorting(from._internal_sorting());
  }
  if (from._internal_page() != 0) {
    _internal_set_page(from._internal_page());
  }
  if (from._internal_limit() != 0) {
    _internal_set_limit(from._internal_limit());
  }
  if (from._internal_from() != 0) {
    _internal_set_from(from._internal_from());
  }
  if (from._internal_to() != 0) {
    _internal_set_to(from._internal_to());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentStatusRequest::CopyFrom(const PaymentStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentStatusRequest::IsInitialized() const {
  return true;
}

void PaymentStatusRequest::InternalSwap(PaymentStatusRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sorting_, GetArenaForAllocation(),
      &other->sorting_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaymentStatusRequest, to_)
      + sizeof(PaymentStatusRequest::to_)
      - PROTOBUF_FIELD_OFFSET(PaymentStatusRequest, page_)>(
          reinterpret_cast<char*>(&page_),
          reinterpret_cast<char*>(&other->page_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentStatusRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[12]);
}

// ===================================================================

class PaymentStatusResponse::_Internal {
 public:
  static const ::payment::PaymentPage& response(const PaymentStatusResponse* msg);
};

const ::payment::PaymentPage&
PaymentStatusResponse::_Internal::response(const PaymentStatusResponse* msg) {
  return *msg->response_;
}
PaymentStatusResponse::PaymentStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentStatusResponse)
}
PaymentStatusResponse::PaymentStatusResponse(const PaymentStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_response()) {
    response_ = new ::payment::PaymentPage(*from.response_);
  } else {
    response_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:payment.PaymentStatusResponse)
}

inline void PaymentStatusResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&response_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&response_)) + sizeof(code_));
}

PaymentStatusResponse::~PaymentStatusResponse() {
  // @@protoc_insertion_point(destructor:payment.PaymentStatusResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete response_;
}

void PaymentStatusResponse::ArenaDtor(void* object) {
  PaymentStatusResponse* _this = reinterpret_cast< PaymentStatusResponse* >(object);
  (void)_this;
}
void PaymentStatusResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentStatusResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentStatusResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.PaymentPage response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentStatusResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentStatusResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .payment.PaymentPage response = 3;
  if (this->_internal_has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentStatusResponse)
  return target;
}

size_t PaymentStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentStatusResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .payment.PaymentPage response = 3;
  if (this->_internal_has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentStatusResponse::GetClassData() const { return &_class_data_; }

void PaymentStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentStatusResponse *>(to)->MergeFrom(
      static_cast<const PaymentStatusResponse &>(from));
}


void PaymentStatusResponse::MergeFrom(const PaymentStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_has_response()) {
    _internal_mutable_response()->::payment::PaymentPage::MergeFrom(from._internal_response());
  }
  if (from._internal_code() != 0) {
    _internal_set_code(from._internal_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentStatusResponse::CopyFrom(const PaymentStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentStatusResponse::IsInitialized() const {
  return true;
}

void PaymentStatusResponse::InternalSwap(PaymentStatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, GetArenaForAllocation(),
      &other->message_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaymentStatusResponse, code_)
      + sizeof(PaymentStatusResponse::code_)
      - PROTOBUF_FIELD_OFFSET(PaymentStatusResponse, response_)>(
          reinterpret_cast<char*>(&response_),
          reinterpret_cast<char*>(&other->response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentStatusResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[13]);
}

// ===================================================================

class PaymentMerchantUidRequest::_Internal {
 public:
};

PaymentMerchantUidRequest::PaymentMerchantUidRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentMerchantUidRequest)
}
PaymentMerchantUidRequest::PaymentMerchantUidRequest(const PaymentMerchantUidRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_merchant_uid().empty()) {
    merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_merchant_uid(), 
      GetArenaForAllocation());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  sorting_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sorting().empty()) {
    sorting_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sorting(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:payment.PaymentMerchantUidRequest)
}

inline void PaymentMerchantUidRequest::SharedCtor() {
merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
sorting_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PaymentMerchantUidRequest::~PaymentMerchantUidRequest() {
  // @@protoc_insertion_point(destructor:payment.PaymentMerchantUidRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentMerchantUidRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  merchant_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sorting_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PaymentMerchantUidRequest::ArenaDtor(void* object) {
  PaymentMerchantUidRequest* _this = reinterpret_cast< PaymentMerchantUidRequest* >(object);
  (void)_this;
}
void PaymentMerchantUidRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentMerchantUidRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentMerchantUidRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentMerchantUidRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  merchant_uid_.ClearToEmpty();
  status_.ClearToEmpty();
  sorting_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentMerchantUidRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string merchant_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_merchant_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentMerchantUidRequest.merchant_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentMerchantUidRequest.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sorting = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_sorting();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentMerchantUidRequest.sorting"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentMerchantUidRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentMerchantUidRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string merchant_uid = 1;
  if (!this->_internal_merchant_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_merchant_uid().data(), static_cast<int>(this->_internal_merchant_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentMerchantUidRequest.merchant_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_merchant_uid(), target);
  }

  // string status = 2;
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentMerchantUidRequest.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  // string sorting = 3;
  if (!this->_internal_sorting().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sorting().data(), static_cast<int>(this->_internal_sorting().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentMerchantUidRequest.sorting");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_sorting(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentMerchantUidRequest)
  return target;
}

size_t PaymentMerchantUidRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentMerchantUidRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string merchant_uid = 1;
  if (!this->_internal_merchant_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_merchant_uid());
  }

  // string status = 2;
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string sorting = 3;
  if (!this->_internal_sorting().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sorting());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentMerchantUidRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentMerchantUidRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentMerchantUidRequest::GetClassData() const { return &_class_data_; }

void PaymentMerchantUidRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentMerchantUidRequest *>(to)->MergeFrom(
      static_cast<const PaymentMerchantUidRequest &>(from));
}


void PaymentMerchantUidRequest::MergeFrom(const PaymentMerchantUidRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentMerchantUidRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_merchant_uid().empty()) {
    _internal_set_merchant_uid(from._internal_merchant_uid());
  }
  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (!from._internal_sorting().empty()) {
    _internal_set_sorting(from._internal_sorting());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentMerchantUidRequest::CopyFrom(const PaymentMerchantUidRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentMerchantUidRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentMerchantUidRequest::IsInitialized() const {
  return true;
}

void PaymentMerchantUidRequest::InternalSwap(PaymentMerchantUidRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &merchant_uid_, GetArenaForAllocation(),
      &other->merchant_uid_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sorting_, GetArenaForAllocation(),
      &other->sorting_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentMerchantUidRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[14]);
}

// ===================================================================

class PaymentMerchantUidResponse::_Internal {
 public:
  static const ::payment::Payment& response(const PaymentMerchantUidResponse* msg);
};

const ::payment::Payment&
PaymentMerchantUidResponse::_Internal::response(const PaymentMerchantUidResponse* msg) {
  return *msg->response_;
}
PaymentMerchantUidResponse::PaymentMerchantUidResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentMerchantUidResponse)
}
PaymentMerchantUidResponse::PaymentMerchantUidResponse(const PaymentMerchantUidResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_response()) {
    response_ = new ::payment::Payment(*from.response_);
  } else {
    response_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:payment.PaymentMerchantUidResponse)
}

inline void PaymentMerchantUidResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&response_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&response_)) + sizeof(code_));
}

PaymentMerchantUidResponse::~PaymentMerchantUidResponse() {
  // @@protoc_insertion_point(destructor:payment.PaymentMerchantUidResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentMerchantUidResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete response_;
}

void PaymentMerchantUidResponse::ArenaDtor(void* object) {
  PaymentMerchantUidResponse* _this = reinterpret_cast< PaymentMerchantUidResponse* >(object);
  (void)_this;
}
void PaymentMerchantUidResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentMerchantUidResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentMerchantUidResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentMerchantUidResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentMerchantUidResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentMerchantUidResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.Payment response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentMerchantUidResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentMerchantUidResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentMerchantUidResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .payment.Payment response = 3;
  if (this->_internal_has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentMerchantUidResponse)
  return target;
}

size_t PaymentMerchantUidResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentMerchantUidResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .payment.Payment response = 3;
  if (this->_internal_has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentMerchantUidResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentMerchantUidResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentMerchantUidResponse::GetClassData() const { return &_class_data_; }

void PaymentMerchantUidResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentMerchantUidResponse *>(to)->MergeFrom(
      static_cast<const PaymentMerchantUidResponse &>(from));
}


void PaymentMerchantUidResponse::MergeFrom(const PaymentMerchantUidResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentMerchantUidResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_has_response()) {
    _internal_mutable_response()->::payment::Payment::MergeFrom(from._internal_response());
  }
  if (from._internal_code() != 0) {
    _internal_set_code(from._internal_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentMerchantUidResponse::CopyFrom(const PaymentMerchantUidResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentMerchantUidResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentMerchantUidResponse::IsInitialized() const {
  return true;
}

void PaymentMerchantUidResponse::InternalSwap(PaymentMerchantUidResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, GetArenaForAllocation(),
      &other->message_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaymentMerchantUidResponse, code_)
      + sizeof(PaymentMerchantUidResponse::code_)
      - PROTOBUF_FIELD_OFFSET(PaymentMerchantUidResponse, response_)>(
          reinterpret_cast<char*>(&response_),
          reinterpret_cast<char*>(&other->response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentMerchantUidResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[15]);
}

// ===================================================================

class PaymentCancelRequest::_Internal {
 public:
};

PaymentCancelRequest::PaymentCancelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentCancelRequest)
}
PaymentCancelRequest::PaymentCancelRequest(const PaymentCancelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  imp_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imp_uid().empty()) {
    imp_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imp_uid(), 
      GetArenaForAllocation());
  }
  merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_merchant_uid().empty()) {
    merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_merchant_uid(), 
      GetArenaForAllocation());
  }
  reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reason().empty()) {
    reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reason(), 
      GetArenaForAllocation());
  }
  refund_holder_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_refund_holder().empty()) {
    refund_holder_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_refund_holder(), 
      GetArenaForAllocation());
  }
  refund_bank_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_refund_bank().empty()) {
    refund_bank_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_refund_bank(), 
      GetArenaForAllocation());
  }
  refund_account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_refund_account().empty()) {
    refund_account_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_refund_account(), 
      GetArenaForAllocation());
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&checksum_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(checksum_));
  // @@protoc_insertion_point(copy_constructor:payment.PaymentCancelRequest)
}

inline void PaymentCancelRequest::SharedCtor() {
imp_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
refund_holder_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
refund_bank_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
refund_account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&amount_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&checksum_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(checksum_));
}

PaymentCancelRequest::~PaymentCancelRequest() {
  // @@protoc_insertion_point(destructor:payment.PaymentCancelRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentCancelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  imp_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  merchant_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  refund_holder_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  refund_bank_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  refund_account_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PaymentCancelRequest::ArenaDtor(void* object) {
  PaymentCancelRequest* _this = reinterpret_cast< PaymentCancelRequest* >(object);
  (void)_this;
}
void PaymentCancelRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentCancelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentCancelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentCancelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imp_uid_.ClearToEmpty();
  merchant_uid_.ClearToEmpty();
  reason_.ClearToEmpty();
  refund_holder_.ClearToEmpty();
  refund_bank_.ClearToEmpty();
  refund_account_.ClearToEmpty();
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&checksum_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(checksum_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentCancelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string imp_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_imp_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentCancelRequest.imp_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string merchant_uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_merchant_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentCancelRequest.merchant_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double amount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double tax_free = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          tax_free_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double checksum = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          checksum_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // string reason = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentCancelRequest.reason"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string refund_holder = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_refund_holder();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentCancelRequest.refund_holder"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string refund_bank = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_refund_bank();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentCancelRequest.refund_bank"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string refund_account = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_refund_account();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentCancelRequest.refund_account"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentCancelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentCancelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string imp_uid = 1;
  if (!this->_internal_imp_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_imp_uid().data(), static_cast<int>(this->_internal_imp_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentCancelRequest.imp_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_imp_uid(), target);
  }

  // string merchant_uid = 2;
  if (!this->_internal_merchant_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_merchant_uid().data(), static_cast<int>(this->_internal_merchant_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentCancelRequest.merchant_uid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_merchant_uid(), target);
  }

  // double amount = 3;
  if (!(this->_internal_amount() <= 0 && this->_internal_amount() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_amount(), target);
  }

  // double tax_free = 4;
  if (!(this->_internal_tax_free() <= 0 && this->_internal_tax_free() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_tax_free(), target);
  }

  // double checksum = 5;
  if (!(this->_internal_checksum() <= 0 && this->_internal_checksum() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_checksum(), target);
  }

  // string reason = 6;
  if (!this->_internal_reason().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentCancelRequest.reason");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_reason(), target);
  }

  // string refund_holder = 7;
  if (!this->_internal_refund_holder().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_refund_holder().data(), static_cast<int>(this->_internal_refund_holder().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentCancelRequest.refund_holder");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_refund_holder(), target);
  }

  // string refund_bank = 8;
  if (!this->_internal_refund_bank().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_refund_bank().data(), static_cast<int>(this->_internal_refund_bank().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentCancelRequest.refund_bank");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_refund_bank(), target);
  }

  // string refund_account = 9;
  if (!this->_internal_refund_account().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_refund_account().data(), static_cast<int>(this->_internal_refund_account().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentCancelRequest.refund_account");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_refund_account(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentCancelRequest)
  return target;
}

size_t PaymentCancelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentCancelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string imp_uid = 1;
  if (!this->_internal_imp_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_imp_uid());
  }

  // string merchant_uid = 2;
  if (!this->_internal_merchant_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_merchant_uid());
  }

  // string reason = 6;
  if (!this->_internal_reason().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reason());
  }

  // string refund_holder = 7;
  if (!this->_internal_refund_holder().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_refund_holder());
  }

  // string refund_bank = 8;
  if (!this->_internal_refund_bank().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_refund_bank());
  }

  // string refund_account = 9;
  if (!this->_internal_refund_account().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_refund_account());
  }

  // double amount = 3;
  if (!(this->_internal_amount() <= 0 && this->_internal_amount() >= 0)) {
    total_size += 1 + 8;
  }

  // double tax_free = 4;
  if (!(this->_internal_tax_free() <= 0 && this->_internal_tax_free() >= 0)) {
    total_size += 1 + 8;
  }

  // double checksum = 5;
  if (!(this->_internal_checksum() <= 0 && this->_internal_checksum() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentCancelRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentCancelRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentCancelRequest::GetClassData() const { return &_class_data_; }

void PaymentCancelRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentCancelRequest *>(to)->MergeFrom(
      static_cast<const PaymentCancelRequest &>(from));
}


void PaymentCancelRequest::MergeFrom(const PaymentCancelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentCancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_imp_uid().empty()) {
    _internal_set_imp_uid(from._internal_imp_uid());
  }
  if (!from._internal_merchant_uid().empty()) {
    _internal_set_merchant_uid(from._internal_merchant_uid());
  }
  if (!from._internal_reason().empty()) {
    _internal_set_reason(from._internal_reason());
  }
  if (!from._internal_refund_holder().empty()) {
    _internal_set_refund_holder(from._internal_refund_holder());
  }
  if (!from._internal_refund_bank().empty()) {
    _internal_set_refund_bank(from._internal_refund_bank());
  }
  if (!from._internal_refund_account().empty()) {
    _internal_set_refund_account(from._internal_refund_account());
  }
  if (!(from._internal_amount() <= 0 && from._internal_amount() >= 0)) {
    _internal_set_amount(from._internal_amount());
  }
  if (!(from._internal_tax_free() <= 0 && from._internal_tax_free() >= 0)) {
    _internal_set_tax_free(from._internal_tax_free());
  }
  if (!(from._internal_checksum() <= 0 && from._internal_checksum() >= 0)) {
    _internal_set_checksum(from._internal_checksum());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentCancelRequest::CopyFrom(const PaymentCancelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentCancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentCancelRequest::IsInitialized() const {
  return true;
}

void PaymentCancelRequest::InternalSwap(PaymentCancelRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &imp_uid_, GetArenaForAllocation(),
      &other->imp_uid_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &merchant_uid_, GetArenaForAllocation(),
      &other->merchant_uid_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &reason_, GetArenaForAllocation(),
      &other->reason_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &refund_holder_, GetArenaForAllocation(),
      &other->refund_holder_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &refund_bank_, GetArenaForAllocation(),
      &other->refund_bank_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &refund_account_, GetArenaForAllocation(),
      &other->refund_account_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaymentCancelRequest, checksum_)
      + sizeof(PaymentCancelRequest::checksum_)
      - PROTOBUF_FIELD_OFFSET(PaymentCancelRequest, amount_)>(
          reinterpret_cast<char*>(&amount_),
          reinterpret_cast<char*>(&other->amount_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentCancelRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[16]);
}

// ===================================================================

class PaymentCancelResponse::_Internal {
 public:
  static const ::payment::Payment& response(const PaymentCancelResponse* msg);
};

const ::payment::Payment&
PaymentCancelResponse::_Internal::response(const PaymentCancelResponse* msg) {
  return *msg->response_;
}
PaymentCancelResponse::PaymentCancelResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentCancelResponse)
}
PaymentCancelResponse::PaymentCancelResponse(const PaymentCancelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_response()) {
    response_ = new ::payment::Payment(*from.response_);
  } else {
    response_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:payment.PaymentCancelResponse)
}

inline void PaymentCancelResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&response_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&response_)) + sizeof(code_));
}

PaymentCancelResponse::~PaymentCancelResponse() {
  // @@protoc_insertion_point(destructor:payment.PaymentCancelResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentCancelResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete response_;
}

void PaymentCancelResponse::ArenaDtor(void* object) {
  PaymentCancelResponse* _this = reinterpret_cast< PaymentCancelResponse* >(object);
  (void)_this;
}
void PaymentCancelResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentCancelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentCancelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentCancelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentCancelResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentCancelResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.Payment response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentCancelResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentCancelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentCancelResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .payment.Payment response = 3;
  if (this->_internal_has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentCancelResponse)
  return target;
}

size_t PaymentCancelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentCancelResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .payment.Payment response = 3;
  if (this->_internal_has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentCancelResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentCancelResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentCancelResponse::GetClassData() const { return &_class_data_; }

void PaymentCancelResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentCancelResponse *>(to)->MergeFrom(
      static_cast<const PaymentCancelResponse &>(from));
}


void PaymentCancelResponse::MergeFrom(const PaymentCancelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentCancelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_has_response()) {
    _internal_mutable_response()->::payment::Payment::MergeFrom(from._internal_response());
  }
  if (from._internal_code() != 0) {
    _internal_set_code(from._internal_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentCancelResponse::CopyFrom(const PaymentCancelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentCancelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentCancelResponse::IsInitialized() const {
  return true;
}

void PaymentCancelResponse::InternalSwap(PaymentCancelResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, GetArenaForAllocation(),
      &other->message_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaymentCancelResponse, code_)
      + sizeof(PaymentCancelResponse::code_)
      - PROTOBUF_FIELD_OFFSET(PaymentCancelResponse, response_)>(
          reinterpret_cast<char*>(&response_),
          reinterpret_cast<char*>(&other->response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentCancelResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[17]);
}

// ===================================================================

class PaymentBalanceRequest::_Internal {
 public:
};

PaymentBalanceRequest::PaymentBalanceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentBalanceRequest)
}
PaymentBalanceRequest::PaymentBalanceRequest(const PaymentBalanceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  imp_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imp_uid().empty()) {
    imp_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imp_uid(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:payment.PaymentBalanceRequest)
}

inline void PaymentBalanceRequest::SharedCtor() {
imp_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PaymentBalanceRequest::~PaymentBalanceRequest() {
  // @@protoc_insertion_point(destructor:payment.PaymentBalanceRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentBalanceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  imp_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PaymentBalanceRequest::ArenaDtor(void* object) {
  PaymentBalanceRequest* _this = reinterpret_cast< PaymentBalanceRequest* >(object);
  (void)_this;
}
void PaymentBalanceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentBalanceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentBalanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentBalanceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imp_uid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentBalanceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string imp_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_imp_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentBalanceRequest.imp_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentBalanceRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentBalanceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string imp_uid = 1;
  if (!this->_internal_imp_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_imp_uid().data(), static_cast<int>(this->_internal_imp_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentBalanceRequest.imp_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_imp_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentBalanceRequest)
  return target;
}

size_t PaymentBalanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentBalanceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string imp_uid = 1;
  if (!this->_internal_imp_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_imp_uid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentBalanceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentBalanceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentBalanceRequest::GetClassData() const { return &_class_data_; }

void PaymentBalanceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentBalanceRequest *>(to)->MergeFrom(
      static_cast<const PaymentBalanceRequest &>(from));
}


void PaymentBalanceRequest::MergeFrom(const PaymentBalanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentBalanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_imp_uid().empty()) {
    _internal_set_imp_uid(from._internal_imp_uid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentBalanceRequest::CopyFrom(const PaymentBalanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentBalanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentBalanceRequest::IsInitialized() const {
  return true;
}

void PaymentBalanceRequest::InternalSwap(PaymentBalanceRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &imp_uid_, GetArenaForAllocation(),
      &other->imp_uid_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentBalanceRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[18]);
}

// ===================================================================

class PaymentBalanceResponse::_Internal {
 public:
  static const ::payment::PaymentBalance& response(const PaymentBalanceResponse* msg);
};

const ::payment::PaymentBalance&
PaymentBalanceResponse::_Internal::response(const PaymentBalanceResponse* msg) {
  return *msg->response_;
}
PaymentBalanceResponse::PaymentBalanceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentBalanceResponse)
}
PaymentBalanceResponse::PaymentBalanceResponse(const PaymentBalanceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_response()) {
    response_ = new ::payment::PaymentBalance(*from.response_);
  } else {
    response_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:payment.PaymentBalanceResponse)
}

inline void PaymentBalanceResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&response_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&response_)) + sizeof(code_));
}

PaymentBalanceResponse::~PaymentBalanceResponse() {
  // @@protoc_insertion_point(destructor:payment.PaymentBalanceResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentBalanceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete response_;
}

void PaymentBalanceResponse::ArenaDtor(void* object) {
  PaymentBalanceResponse* _this = reinterpret_cast< PaymentBalanceResponse* >(object);
  (void)_this;
}
void PaymentBalanceResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentBalanceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentBalanceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentBalanceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentBalanceResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentBalanceResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.PaymentBalance response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentBalanceResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentBalanceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentBalanceResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .payment.PaymentBalance response = 3;
  if (this->_internal_has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentBalanceResponse)
  return target;
}

size_t PaymentBalanceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentBalanceResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .payment.PaymentBalance response = 3;
  if (this->_internal_has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentBalanceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentBalanceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentBalanceResponse::GetClassData() const { return &_class_data_; }

void PaymentBalanceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentBalanceResponse *>(to)->MergeFrom(
      static_cast<const PaymentBalanceResponse &>(from));
}


void PaymentBalanceResponse::MergeFrom(const PaymentBalanceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentBalanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_has_response()) {
    _internal_mutable_response()->::payment::PaymentBalance::MergeFrom(from._internal_response());
  }
  if (from._internal_code() != 0) {
    _internal_set_code(from._internal_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentBalanceResponse::CopyFrom(const PaymentBalanceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentBalanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentBalanceResponse::IsInitialized() const {
  return true;
}

void PaymentBalanceResponse::InternalSwap(PaymentBalanceResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, GetArenaForAllocation(),
      &other->message_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaymentBalanceResponse, code_)
      + sizeof(PaymentBalanceResponse::code_)
      - PROTOBUF_FIELD_OFFSET(PaymentBalanceResponse, response_)>(
          reinterpret_cast<char*>(&response_),
          reinterpret_cast<char*>(&other->response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentBalanceResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[19]);
}

// ===================================================================

class Prepare::_Internal {
 public:
};

Prepare::Prepare(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.Prepare)
}
Prepare::Prepare(const Prepare& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_merchant_uid().empty()) {
    merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_merchant_uid(), 
      GetArenaForAllocation());
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:payment.Prepare)
}

inline void Prepare::SharedCtor() {
merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
amount_ = 0;
}

Prepare::~Prepare() {
  // @@protoc_insertion_point(destructor:payment.Prepare)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Prepare::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  merchant_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Prepare::ArenaDtor(void* object) {
  Prepare* _this = reinterpret_cast< Prepare* >(object);
  (void)_this;
}
void Prepare::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Prepare::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Prepare::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.Prepare)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  merchant_uid_.ClearToEmpty();
  amount_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Prepare::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string merchant_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_merchant_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Prepare.merchant_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Prepare::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.Prepare)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string merchant_uid = 1;
  if (!this->_internal_merchant_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_merchant_uid().data(), static_cast<int>(this->_internal_merchant_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Prepare.merchant_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_merchant_uid(), target);
  }

  // int32 amount = 2;
  if (this->_internal_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_amount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.Prepare)
  return target;
}

size_t Prepare::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.Prepare)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string merchant_uid = 1;
  if (!this->_internal_merchant_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_merchant_uid());
  }

  // int32 amount = 2;
  if (this->_internal_amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_amount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Prepare::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Prepare::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Prepare::GetClassData() const { return &_class_data_; }

void Prepare::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<Prepare *>(to)->MergeFrom(
      static_cast<const Prepare &>(from));
}


void Prepare::MergeFrom(const Prepare& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.Prepare)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_merchant_uid().empty()) {
    _internal_set_merchant_uid(from._internal_merchant_uid());
  }
  if (from._internal_amount() != 0) {
    _internal_set_amount(from._internal_amount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Prepare::CopyFrom(const Prepare& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.Prepare)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Prepare::IsInitialized() const {
  return true;
}

void Prepare::InternalSwap(Prepare* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &merchant_uid_, GetArenaForAllocation(),
      &other->merchant_uid_, other->GetArenaForAllocation()
  );
  swap(amount_, other->amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Prepare::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[20]);
}

// ===================================================================

class PaymentPrepareRequest::_Internal {
 public:
};

PaymentPrepareRequest::PaymentPrepareRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentPrepareRequest)
}
PaymentPrepareRequest::PaymentPrepareRequest(const PaymentPrepareRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_merchant_uid().empty()) {
    merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_merchant_uid(), 
      GetArenaForAllocation());
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:payment.PaymentPrepareRequest)
}

inline void PaymentPrepareRequest::SharedCtor() {
merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
amount_ = 0;
}

PaymentPrepareRequest::~PaymentPrepareRequest() {
  // @@protoc_insertion_point(destructor:payment.PaymentPrepareRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentPrepareRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  merchant_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PaymentPrepareRequest::ArenaDtor(void* object) {
  PaymentPrepareRequest* _this = reinterpret_cast< PaymentPrepareRequest* >(object);
  (void)_this;
}
void PaymentPrepareRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentPrepareRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentPrepareRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentPrepareRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  merchant_uid_.ClearToEmpty();
  amount_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentPrepareRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string merchant_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_merchant_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentPrepareRequest.merchant_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentPrepareRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentPrepareRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string merchant_uid = 1;
  if (!this->_internal_merchant_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_merchant_uid().data(), static_cast<int>(this->_internal_merchant_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentPrepareRequest.merchant_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_merchant_uid(), target);
  }

  // double amount = 2;
  if (!(this->_internal_amount() <= 0 && this->_internal_amount() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_amount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentPrepareRequest)
  return target;
}

size_t PaymentPrepareRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentPrepareRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string merchant_uid = 1;
  if (!this->_internal_merchant_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_merchant_uid());
  }

  // double amount = 2;
  if (!(this->_internal_amount() <= 0 && this->_internal_amount() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentPrepareRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentPrepareRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentPrepareRequest::GetClassData() const { return &_class_data_; }

void PaymentPrepareRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentPrepareRequest *>(to)->MergeFrom(
      static_cast<const PaymentPrepareRequest &>(from));
}


void PaymentPrepareRequest::MergeFrom(const PaymentPrepareRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentPrepareRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_merchant_uid().empty()) {
    _internal_set_merchant_uid(from._internal_merchant_uid());
  }
  if (!(from._internal_amount() <= 0 && from._internal_amount() >= 0)) {
    _internal_set_amount(from._internal_amount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentPrepareRequest::CopyFrom(const PaymentPrepareRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentPrepareRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentPrepareRequest::IsInitialized() const {
  return true;
}

void PaymentPrepareRequest::InternalSwap(PaymentPrepareRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &merchant_uid_, GetArenaForAllocation(),
      &other->merchant_uid_, other->GetArenaForAllocation()
  );
  swap(amount_, other->amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentPrepareRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[21]);
}

// ===================================================================

class PaymentPrepareResponse::_Internal {
 public:
  static const ::payment::Prepare& response(const PaymentPrepareResponse* msg);
};

const ::payment::Prepare&
PaymentPrepareResponse::_Internal::response(const PaymentPrepareResponse* msg) {
  return *msg->response_;
}
PaymentPrepareResponse::PaymentPrepareResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentPrepareResponse)
}
PaymentPrepareResponse::PaymentPrepareResponse(const PaymentPrepareResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_response()) {
    response_ = new ::payment::Prepare(*from.response_);
  } else {
    response_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:payment.PaymentPrepareResponse)
}

inline void PaymentPrepareResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&response_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&response_)) + sizeof(code_));
}

PaymentPrepareResponse::~PaymentPrepareResponse() {
  // @@protoc_insertion_point(destructor:payment.PaymentPrepareResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentPrepareResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete response_;
}

void PaymentPrepareResponse::ArenaDtor(void* object) {
  PaymentPrepareResponse* _this = reinterpret_cast< PaymentPrepareResponse* >(object);
  (void)_this;
}
void PaymentPrepareResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentPrepareResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentPrepareResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentPrepareResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentPrepareResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentPrepareResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.Prepare response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentPrepareResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentPrepareResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentPrepareResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .payment.Prepare response = 3;
  if (this->_internal_has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentPrepareResponse)
  return target;
}

size_t PaymentPrepareResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentPrepareResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .payment.Prepare response = 3;
  if (this->_internal_has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentPrepareResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentPrepareResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentPrepareResponse::GetClassData() const { return &_class_data_; }

void PaymentPrepareResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentPrepareResponse *>(to)->MergeFrom(
      static_cast<const PaymentPrepareResponse &>(from));
}


void PaymentPrepareResponse::MergeFrom(const PaymentPrepareResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentPrepareResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_has_response()) {
    _internal_mutable_response()->::payment::Prepare::MergeFrom(from._internal_response());
  }
  if (from._internal_code() != 0) {
    _internal_set_code(from._internal_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentPrepareResponse::CopyFrom(const PaymentPrepareResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentPrepareResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentPrepareResponse::IsInitialized() const {
  return true;
}

void PaymentPrepareResponse::InternalSwap(PaymentPrepareResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, GetArenaForAllocation(),
      &other->message_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaymentPrepareResponse, code_)
      + sizeof(PaymentPrepareResponse::code_)
      - PROTOBUF_FIELD_OFFSET(PaymentPrepareResponse, response_)>(
          reinterpret_cast<char*>(&response_),
          reinterpret_cast<char*>(&other->response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentPrepareResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[22]);
}

// ===================================================================

class PaymentGetPrepareRequest::_Internal {
 public:
};

PaymentGetPrepareRequest::PaymentGetPrepareRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.PaymentGetPrepareRequest)
}
PaymentGetPrepareRequest::PaymentGetPrepareRequest(const PaymentGetPrepareRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_merchant_uid().empty()) {
    merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_merchant_uid(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:payment.PaymentGetPrepareRequest)
}

inline void PaymentGetPrepareRequest::SharedCtor() {
merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PaymentGetPrepareRequest::~PaymentGetPrepareRequest() {
  // @@protoc_insertion_point(destructor:payment.PaymentGetPrepareRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PaymentGetPrepareRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  merchant_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PaymentGetPrepareRequest::ArenaDtor(void* object) {
  PaymentGetPrepareRequest* _this = reinterpret_cast< PaymentGetPrepareRequest* >(object);
  (void)_this;
}
void PaymentGetPrepareRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentGetPrepareRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentGetPrepareRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.PaymentGetPrepareRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  merchant_uid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentGetPrepareRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string merchant_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_merchant_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.PaymentGetPrepareRequest.merchant_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentGetPrepareRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.PaymentGetPrepareRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string merchant_uid = 1;
  if (!this->_internal_merchant_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_merchant_uid().data(), static_cast<int>(this->_internal_merchant_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.PaymentGetPrepareRequest.merchant_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_merchant_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.PaymentGetPrepareRequest)
  return target;
}

size_t PaymentGetPrepareRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.PaymentGetPrepareRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string merchant_uid = 1;
  if (!this->_internal_merchant_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_merchant_uid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PaymentGetPrepareRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PaymentGetPrepareRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PaymentGetPrepareRequest::GetClassData() const { return &_class_data_; }

void PaymentGetPrepareRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PaymentGetPrepareRequest *>(to)->MergeFrom(
      static_cast<const PaymentGetPrepareRequest &>(from));
}


void PaymentGetPrepareRequest::MergeFrom(const PaymentGetPrepareRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.PaymentGetPrepareRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_merchant_uid().empty()) {
    _internal_set_merchant_uid(from._internal_merchant_uid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PaymentGetPrepareRequest::CopyFrom(const PaymentGetPrepareRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.PaymentGetPrepareRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentGetPrepareRequest::IsInitialized() const {
  return true;
}

void PaymentGetPrepareRequest::InternalSwap(PaymentGetPrepareRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &merchant_uid_, GetArenaForAllocation(),
      &other->merchant_uid_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentGetPrepareRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[23]);
}

// ===================================================================

class Promotion::_Internal {
 public:
};

Promotion::Promotion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.Promotion)
}
Promotion::Promotion(const Promotion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  discount_ = from.discount_;
  // @@protoc_insertion_point(copy_constructor:payment.Promotion)
}

inline void Promotion::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
discount_ = 0;
}

Promotion::~Promotion() {
  // @@protoc_insertion_point(destructor:payment.Promotion)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Promotion::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Promotion::ArenaDtor(void* object) {
  Promotion* _this = reinterpret_cast< Promotion* >(object);
  (void)_this;
}
void Promotion::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Promotion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Promotion::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.Promotion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  discount_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Promotion::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.Promotion.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 discount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          discount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Promotion::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.Promotion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.Promotion.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // int32 discount = 2;
  if (this->_internal_discount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_discount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.Promotion)
  return target;
}

size_t Promotion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.Promotion)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // int32 discount = 2;
  if (this->_internal_discount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_discount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Promotion::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Promotion::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Promotion::GetClassData() const { return &_class_data_; }

void Promotion::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<Promotion *>(to)->MergeFrom(
      static_cast<const Promotion &>(from));
}


void Promotion::MergeFrom(const Promotion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.Promotion)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_discount() != 0) {
    _internal_set_discount(from._internal_discount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Promotion::CopyFrom(const Promotion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.Promotion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Promotion::IsInitialized() const {
  return true;
}

void Promotion::InternalSwap(Promotion* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  swap(discount_, other->discount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Promotion::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_v1_2fpayment_2fpayment_2eproto_getter, &descriptor_table_v1_2fpayment_2fpayment_2eproto_once,
      file_level_metadata_v1_2fpayment_2fpayment_2eproto[24]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace payment
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::payment::Payment* Arena::CreateMaybeMessage< ::payment::Payment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::Payment >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::CancelHistory* Arena::CreateMaybeMessage< ::payment::CancelHistory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::CancelHistory >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentPage* Arena::CreateMaybeMessage< ::payment::PaymentPage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentPage >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentBalanceDetail* Arena::CreateMaybeMessage< ::payment::PaymentBalanceDetail >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentBalanceDetail >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentBalance* Arena::CreateMaybeMessage< ::payment::PaymentBalance >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentBalance >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentBalanceHistory* Arena::CreateMaybeMessage< ::payment::PaymentBalanceHistory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentBalanceHistory >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentRequest* Arena::CreateMaybeMessage< ::payment::PaymentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentResponse* Arena::CreateMaybeMessage< ::payment::PaymentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentsRequest* Arena::CreateMaybeMessage< ::payment::PaymentsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentsResponse* Arena::CreateMaybeMessage< ::payment::PaymentsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentsMerchantUidRequest* Arena::CreateMaybeMessage< ::payment::PaymentsMerchantUidRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentsMerchantUidRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentsMerchantUidResponse* Arena::CreateMaybeMessage< ::payment::PaymentsMerchantUidResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentsMerchantUidResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentStatusRequest* Arena::CreateMaybeMessage< ::payment::PaymentStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentStatusResponse* Arena::CreateMaybeMessage< ::payment::PaymentStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentMerchantUidRequest* Arena::CreateMaybeMessage< ::payment::PaymentMerchantUidRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentMerchantUidRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentMerchantUidResponse* Arena::CreateMaybeMessage< ::payment::PaymentMerchantUidResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentMerchantUidResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentCancelRequest* Arena::CreateMaybeMessage< ::payment::PaymentCancelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentCancelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentCancelResponse* Arena::CreateMaybeMessage< ::payment::PaymentCancelResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentCancelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentBalanceRequest* Arena::CreateMaybeMessage< ::payment::PaymentBalanceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentBalanceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentBalanceResponse* Arena::CreateMaybeMessage< ::payment::PaymentBalanceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentBalanceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::Prepare* Arena::CreateMaybeMessage< ::payment::Prepare >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::Prepare >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentPrepareRequest* Arena::CreateMaybeMessage< ::payment::PaymentPrepareRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentPrepareRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentPrepareResponse* Arena::CreateMaybeMessage< ::payment::PaymentPrepareResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentPrepareResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::PaymentGetPrepareRequest* Arena::CreateMaybeMessage< ::payment::PaymentGetPrepareRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::PaymentGetPrepareRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::Promotion* Arena::CreateMaybeMessage< ::payment::Promotion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::Promotion >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
