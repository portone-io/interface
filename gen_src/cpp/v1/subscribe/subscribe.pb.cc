// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1/subscribe/subscribe.proto

#include "v1/subscribe/subscribe.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace subscribe {
constexpr OnetimePaymentRequest::OnetimePaymentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : merchant_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_number_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , expiry_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , birth_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pwd_2digit_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_tel_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_addr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_postcode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , custom_data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , notice_url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(0)
  , tax_free_(0)
  , card_quota_(0)
  , interest_free_by_merchant_(false){}
struct OnetimePaymentRequestDefaultTypeInternal {
  constexpr OnetimePaymentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OnetimePaymentRequestDefaultTypeInternal() {}
  union {
    OnetimePaymentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OnetimePaymentRequestDefaultTypeInternal _OnetimePaymentRequest_default_instance_;
constexpr OnetimePaymentResponse::OnetimePaymentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , response_(nullptr)
  , code_(0){}
struct OnetimePaymentResponseDefaultTypeInternal {
  constexpr OnetimePaymentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OnetimePaymentResponseDefaultTypeInternal() {}
  union {
    OnetimePaymentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OnetimePaymentResponseDefaultTypeInternal _OnetimePaymentResponse_default_instance_;
constexpr AgainPaymentRequest::AgainPaymentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : customer_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , merchant_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_tel_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_addr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_postcode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , custom_data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , notice_url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(0)
  , tax_free_(0)
  , card_quota_(0)
  , interest_free_by_merchant_(false){}
struct AgainPaymentRequestDefaultTypeInternal {
  constexpr AgainPaymentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgainPaymentRequestDefaultTypeInternal() {}
  union {
    AgainPaymentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgainPaymentRequestDefaultTypeInternal _AgainPaymentRequest_default_instance_;
constexpr AgainPaymentResponse::AgainPaymentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , response_(nullptr)
  , code_(0){}
struct AgainPaymentResponseDefaultTypeInternal {
  constexpr AgainPaymentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgainPaymentResponseDefaultTypeInternal() {}
  union {
    AgainPaymentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgainPaymentResponseDefaultTypeInternal _AgainPaymentResponse_default_instance_;
constexpr PaymentScheduleParam::PaymentScheduleParam(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : merchant_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_tel_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_addr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_postcode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , schedule_at_(0)
  , amount_(0)
  , tax_free_(0){}
struct PaymentScheduleParamDefaultTypeInternal {
  constexpr PaymentScheduleParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaymentScheduleParamDefaultTypeInternal() {}
  union {
    PaymentScheduleParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaymentScheduleParamDefaultTypeInternal _PaymentScheduleParam_default_instance_;
constexpr UnitSchedulePaymentResponse::UnitSchedulePaymentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : customer_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , merchant_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , imp_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_tel_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_addr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_postcode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , custom_data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , schedule_status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , payment_status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , fail_reason_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , schedule_at_(0)
  , executed_at_(0)
  , revoked_at_(0)
  , amount_(0){}
struct UnitSchedulePaymentResponseDefaultTypeInternal {
  constexpr UnitSchedulePaymentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnitSchedulePaymentResponseDefaultTypeInternal() {}
  union {
    UnitSchedulePaymentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnitSchedulePaymentResponseDefaultTypeInternal _UnitSchedulePaymentResponse_default_instance_;
constexpr SchedulePayemntRequest::SchedulePayemntRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : schedules_()
  , customer_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_number_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , expiry_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , birth_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pwd_2digit_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , checking_amount_(0){}
struct SchedulePayemntRequestDefaultTypeInternal {
  constexpr SchedulePayemntRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SchedulePayemntRequestDefaultTypeInternal() {}
  union {
    SchedulePayemntRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SchedulePayemntRequestDefaultTypeInternal _SchedulePayemntRequest_default_instance_;
constexpr SchedulePaymentResponse::SchedulePaymentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : response_()
  , message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , code_(0){}
struct SchedulePaymentResponseDefaultTypeInternal {
  constexpr SchedulePaymentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SchedulePaymentResponseDefaultTypeInternal() {}
  union {
    SchedulePaymentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SchedulePaymentResponseDefaultTypeInternal _SchedulePaymentResponse_default_instance_;
constexpr UnschedulePaymentRequest::UnschedulePaymentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : merchant_uid_()
  , customer_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UnschedulePaymentRequestDefaultTypeInternal {
  constexpr UnschedulePaymentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnschedulePaymentRequestDefaultTypeInternal() {}
  union {
    UnschedulePaymentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnschedulePaymentRequestDefaultTypeInternal _UnschedulePaymentRequest_default_instance_;
constexpr UnschedulePaymentResponse::UnschedulePaymentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : response_()
  , message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , code_(0){}
struct UnschedulePaymentResponseDefaultTypeInternal {
  constexpr UnschedulePaymentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnschedulePaymentResponseDefaultTypeInternal() {}
  union {
    UnschedulePaymentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnschedulePaymentResponseDefaultTypeInternal _UnschedulePaymentResponse_default_instance_;
constexpr GetPaymentScheduleRequest::GetPaymentScheduleRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : merchant_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPaymentScheduleRequestDefaultTypeInternal {
  constexpr GetPaymentScheduleRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPaymentScheduleRequestDefaultTypeInternal() {}
  union {
    GetPaymentScheduleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPaymentScheduleRequestDefaultTypeInternal _GetPaymentScheduleRequest_default_instance_;
constexpr GetPaymentScheduleResponse::GetPaymentScheduleResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , response_(nullptr)
  , code_(0){}
struct GetPaymentScheduleResponseDefaultTypeInternal {
  constexpr GetPaymentScheduleResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPaymentScheduleResponseDefaultTypeInternal() {}
  union {
    GetPaymentScheduleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPaymentScheduleResponseDefaultTypeInternal _GetPaymentScheduleResponse_default_instance_;
constexpr GetPaymentScheduleByCustomerRequest::GetPaymentScheduleByCustomerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : customer_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , schedule_status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_(0)
  , from_(0)
  , to_(0){}
struct GetPaymentScheduleByCustomerRequestDefaultTypeInternal {
  constexpr GetPaymentScheduleByCustomerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPaymentScheduleByCustomerRequestDefaultTypeInternal() {}
  union {
    GetPaymentScheduleByCustomerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPaymentScheduleByCustomerRequestDefaultTypeInternal _GetPaymentScheduleByCustomerRequest_default_instance_;
constexpr NestedGetPaymentScheduleByCustomerData::NestedGetPaymentScheduleByCustomerData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : list_()
  , total_(0)
  , previous_(0)
  , next_(0){}
struct NestedGetPaymentScheduleByCustomerDataDefaultTypeInternal {
  constexpr NestedGetPaymentScheduleByCustomerDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NestedGetPaymentScheduleByCustomerDataDefaultTypeInternal() {}
  union {
    NestedGetPaymentScheduleByCustomerData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NestedGetPaymentScheduleByCustomerDataDefaultTypeInternal _NestedGetPaymentScheduleByCustomerData_default_instance_;
constexpr GetPaymentScheduleByCustomerResponse::GetPaymentScheduleByCustomerResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , response_(nullptr)
  , code_(0){}
struct GetPaymentScheduleByCustomerResponseDefaultTypeInternal {
  constexpr GetPaymentScheduleByCustomerResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPaymentScheduleByCustomerResponseDefaultTypeInternal() {}
  union {
    GetPaymentScheduleByCustomerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPaymentScheduleByCustomerResponseDefaultTypeInternal _GetPaymentScheduleByCustomerResponse_default_instance_;
}  // namespace subscribe
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_v1_2fsubscribe_2fsubscribe_2eproto[15];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_v1_2fsubscribe_2fsubscribe_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_v1_2fsubscribe_2fsubscribe_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_v1_2fsubscribe_2fsubscribe_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, merchant_uid_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, amount_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, tax_free_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, card_number_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, expiry_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, birth_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, pwd_2digit_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, customer_uid_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, pg_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, name_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, buyer_name_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, buyer_email_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, buyer_tel_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, buyer_addr_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, buyer_postcode_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, card_quota_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, interest_free_by_merchant_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, custom_data_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentRequest, notice_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentResponse, code_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentResponse, message_),
  PROTOBUF_FIELD_OFFSET(::subscribe::OnetimePaymentResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentRequest, customer_uid_),
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentRequest, merchant_uid_),
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentRequest, amount_),
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentRequest, tax_free_),
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentRequest, name_),
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentRequest, buyer_name_),
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentRequest, buyer_email_),
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentRequest, buyer_tel_),
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentRequest, buyer_addr_),
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentRequest, buyer_postcode_),
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentRequest, card_quota_),
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentRequest, interest_free_by_merchant_),
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentRequest, custom_data_),
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentRequest, notice_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentResponse, code_),
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentResponse, message_),
  PROTOBUF_FIELD_OFFSET(::subscribe::AgainPaymentResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::subscribe::PaymentScheduleParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::subscribe::PaymentScheduleParam, merchant_uid_),
  PROTOBUF_FIELD_OFFSET(::subscribe::PaymentScheduleParam, schedule_at_),
  PROTOBUF_FIELD_OFFSET(::subscribe::PaymentScheduleParam, amount_),
  PROTOBUF_FIELD_OFFSET(::subscribe::PaymentScheduleParam, tax_free_),
  PROTOBUF_FIELD_OFFSET(::subscribe::PaymentScheduleParam, name_),
  PROTOBUF_FIELD_OFFSET(::subscribe::PaymentScheduleParam, buyer_name_),
  PROTOBUF_FIELD_OFFSET(::subscribe::PaymentScheduleParam, buyer_email_),
  PROTOBUF_FIELD_OFFSET(::subscribe::PaymentScheduleParam, buyer_tel_),
  PROTOBUF_FIELD_OFFSET(::subscribe::PaymentScheduleParam, buyer_addr_),
  PROTOBUF_FIELD_OFFSET(::subscribe::PaymentScheduleParam, buyer_postcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::subscribe::UnitSchedulePaymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::subscribe::UnitSchedulePaymentResponse, customer_uid_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnitSchedulePaymentResponse, merchant_uid_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnitSchedulePaymentResponse, imp_uid_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnitSchedulePaymentResponse, schedule_at_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnitSchedulePaymentResponse, executed_at_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnitSchedulePaymentResponse, revoked_at_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnitSchedulePaymentResponse, amount_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnitSchedulePaymentResponse, name_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnitSchedulePaymentResponse, buyer_name_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnitSchedulePaymentResponse, buyer_email_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnitSchedulePaymentResponse, buyer_tel_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnitSchedulePaymentResponse, buyer_addr_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnitSchedulePaymentResponse, buyer_postcode_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnitSchedulePaymentResponse, custom_data_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnitSchedulePaymentResponse, schedule_status_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnitSchedulePaymentResponse, payment_status_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnitSchedulePaymentResponse, fail_reason_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::subscribe::SchedulePayemntRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::subscribe::SchedulePayemntRequest, customer_uid_),
  PROTOBUF_FIELD_OFFSET(::subscribe::SchedulePayemntRequest, checking_amount_),
  PROTOBUF_FIELD_OFFSET(::subscribe::SchedulePayemntRequest, card_number_),
  PROTOBUF_FIELD_OFFSET(::subscribe::SchedulePayemntRequest, expiry_),
  PROTOBUF_FIELD_OFFSET(::subscribe::SchedulePayemntRequest, birth_),
  PROTOBUF_FIELD_OFFSET(::subscribe::SchedulePayemntRequest, pwd_2digit_),
  PROTOBUF_FIELD_OFFSET(::subscribe::SchedulePayemntRequest, pg_),
  PROTOBUF_FIELD_OFFSET(::subscribe::SchedulePayemntRequest, schedules_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::subscribe::SchedulePaymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::subscribe::SchedulePaymentResponse, code_),
  PROTOBUF_FIELD_OFFSET(::subscribe::SchedulePaymentResponse, message_),
  PROTOBUF_FIELD_OFFSET(::subscribe::SchedulePaymentResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::subscribe::UnschedulePaymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::subscribe::UnschedulePaymentRequest, customer_uid_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnschedulePaymentRequest, merchant_uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::subscribe::UnschedulePaymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::subscribe::UnschedulePaymentResponse, code_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnschedulePaymentResponse, message_),
  PROTOBUF_FIELD_OFFSET(::subscribe::UnschedulePaymentResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::subscribe::GetPaymentScheduleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::subscribe::GetPaymentScheduleRequest, merchant_uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::subscribe::GetPaymentScheduleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::subscribe::GetPaymentScheduleResponse, code_),
  PROTOBUF_FIELD_OFFSET(::subscribe::GetPaymentScheduleResponse, message_),
  PROTOBUF_FIELD_OFFSET(::subscribe::GetPaymentScheduleResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::subscribe::GetPaymentScheduleByCustomerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::subscribe::GetPaymentScheduleByCustomerRequest, customer_uid_),
  PROTOBUF_FIELD_OFFSET(::subscribe::GetPaymentScheduleByCustomerRequest, page_),
  PROTOBUF_FIELD_OFFSET(::subscribe::GetPaymentScheduleByCustomerRequest, from_),
  PROTOBUF_FIELD_OFFSET(::subscribe::GetPaymentScheduleByCustomerRequest, to_),
  PROTOBUF_FIELD_OFFSET(::subscribe::GetPaymentScheduleByCustomerRequest, schedule_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::subscribe::NestedGetPaymentScheduleByCustomerData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::subscribe::NestedGetPaymentScheduleByCustomerData, total_),
  PROTOBUF_FIELD_OFFSET(::subscribe::NestedGetPaymentScheduleByCustomerData, previous_),
  PROTOBUF_FIELD_OFFSET(::subscribe::NestedGetPaymentScheduleByCustomerData, next_),
  PROTOBUF_FIELD_OFFSET(::subscribe::NestedGetPaymentScheduleByCustomerData, list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::subscribe::GetPaymentScheduleByCustomerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::subscribe::GetPaymentScheduleByCustomerResponse, code_),
  PROTOBUF_FIELD_OFFSET(::subscribe::GetPaymentScheduleByCustomerResponse, message_),
  PROTOBUF_FIELD_OFFSET(::subscribe::GetPaymentScheduleByCustomerResponse, response_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::subscribe::OnetimePaymentRequest)},
  { 24, -1, sizeof(::subscribe::OnetimePaymentResponse)},
  { 32, -1, sizeof(::subscribe::AgainPaymentRequest)},
  { 51, -1, sizeof(::subscribe::AgainPaymentResponse)},
  { 59, -1, sizeof(::subscribe::PaymentScheduleParam)},
  { 74, -1, sizeof(::subscribe::UnitSchedulePaymentResponse)},
  { 96, -1, sizeof(::subscribe::SchedulePayemntRequest)},
  { 109, -1, sizeof(::subscribe::SchedulePaymentResponse)},
  { 117, -1, sizeof(::subscribe::UnschedulePaymentRequest)},
  { 124, -1, sizeof(::subscribe::UnschedulePaymentResponse)},
  { 132, -1, sizeof(::subscribe::GetPaymentScheduleRequest)},
  { 138, -1, sizeof(::subscribe::GetPaymentScheduleResponse)},
  { 146, -1, sizeof(::subscribe::GetPaymentScheduleByCustomerRequest)},
  { 156, -1, sizeof(::subscribe::NestedGetPaymentScheduleByCustomerData)},
  { 165, -1, sizeof(::subscribe::GetPaymentScheduleByCustomerResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::subscribe::_OnetimePaymentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::subscribe::_OnetimePaymentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::subscribe::_AgainPaymentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::subscribe::_AgainPaymentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::subscribe::_PaymentScheduleParam_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::subscribe::_UnitSchedulePaymentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::subscribe::_SchedulePayemntRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::subscribe::_SchedulePaymentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::subscribe::_UnschedulePaymentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::subscribe::_UnschedulePaymentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::subscribe::_GetPaymentScheduleRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::subscribe::_GetPaymentScheduleResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::subscribe::_GetPaymentScheduleByCustomerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::subscribe::_NestedGetPaymentScheduleByCustomerData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::subscribe::_GetPaymentScheduleByCustomerResponse_default_instance_),
};

const char descriptor_table_protodef_v1_2fsubscribe_2fsubscribe_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034v1/subscribe/subscribe.proto\022\tsubscrib"
  "e\032\034google/api/annotations.proto\032\030v1/paym"
  "ent/payment.proto\"\217\003\n\025OnetimePaymentRequ"
  "est\022\024\n\014merchant_uid\030\001 \001(\t\022\016\n\006amount\030\002 \001("
  "\005\022\020\n\010tax_free\030\003 \001(\005\022\023\n\013card_number\030\004 \001(\t"
  "\022\016\n\006expiry\030\005 \001(\t\022\r\n\005birth\030\006 \001(\t\022\022\n\npwd_2"
  "digit\030\007 \001(\t\022\024\n\014customer_uid\030\010 \001(\t\022\n\n\002pg\030"
  "\t \001(\t\022\014\n\004name\030\n \001(\t\022\022\n\nbuyer_name\030\013 \001(\t\022"
  "\023\n\013buyer_email\030\014 \001(\t\022\021\n\tbuyer_tel\030\r \001(\t\022"
  "\022\n\nbuyer_addr\030\016 \001(\t\022\026\n\016buyer_postcode\030\017 "
  "\001(\t\022\022\n\ncard_quota\030\020 \001(\005\022!\n\031interest_free"
  "_by_merchant\030\021 \001(\010\022\023\n\013custom_data\030\022 \001(\t\022"
  "\022\n\nnotice_url\030\023 \001(\t\"[\n\026OnetimePaymentRes"
  "ponse\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\022\"\n\010"
  "response\030\003 \001(\0132\020.payment.Payment\"\271\002\n\023Aga"
  "inPaymentRequest\022\024\n\014customer_uid\030\001 \001(\t\022\024"
  "\n\014merchant_uid\030\002 \001(\t\022\016\n\006amount\030\003 \001(\005\022\020\n\010"
  "tax_free\030\004 \001(\005\022\014\n\004name\030\005 \001(\t\022\022\n\nbuyer_na"
  "me\030\006 \001(\t\022\023\n\013buyer_email\030\007 \001(\t\022\021\n\tbuyer_t"
  "el\030\010 \001(\t\022\022\n\nbuyer_addr\030\t \001(\t\022\026\n\016buyer_po"
  "stcode\030\n \001(\t\022\022\n\ncard_quota\030\013 \001(\005\022!\n\031inte"
  "rest_free_by_merchant\030\014 \001(\010\022\023\n\013custom_da"
  "ta\030\r \001(\t\022\022\n\nnotice_url\030\016 \001(\t\"Y\n\024AgainPay"
  "mentResponse\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 "
  "\001(\t\022\"\n\010response\030\003 \001(\0132\020.payment.Payment\""
  "\331\001\n\024PaymentScheduleParam\022\024\n\014merchant_uid"
  "\030\001 \001(\t\022\023\n\013schedule_at\030\002 \001(\005\022\016\n\006amount\030\003 "
  "\001(\005\022\020\n\010tax_free\030\004 \001(\005\022\014\n\004name\030\005 \001(\t\022\022\n\nb"
  "uyer_name\030\006 \001(\t\022\023\n\013buyer_email\030\007 \001(\t\022\021\n\t"
  "buyer_tel\030\010 \001(\t\022\022\n\nbuyer_addr\030\t \001(\t\022\026\n\016b"
  "uyer_postcode\030\n \001(\t\"\371\002\n\033UnitSchedulePaym"
  "entResponse\022\024\n\014customer_uid\030\001 \001(\t\022\024\n\014mer"
  "chant_uid\030\002 \001(\t\022\017\n\007imp_uid\030\003 \001(\t\022\023\n\013sche"
  "dule_at\030\004 \001(\005\022\023\n\013executed_at\030\005 \001(\005\022\022\n\nre"
  "voked_at\030\006 \001(\005\022\016\n\006amount\030\007 \001(\005\022\014\n\004name\030\010"
  " \001(\t\022\022\n\nbuyer_name\030\t \001(\t\022\023\n\013buyer_email\030"
  "\n \001(\t\022\021\n\tbuyer_tel\030\013 \001(\t\022\022\n\nbuyer_addr\030\014"
  " \001(\t\022\026\n\016buyer_postcode\030\r \001(\t\022\023\n\013custom_d"
  "ata\030\016 \001(\t\022\027\n\017schedule_status\030\017 \001(\t\022\026\n\016pa"
  "yment_status\030\020 \001(\t\022\023\n\013fail_reason\030\021 \001(\t\""
  "\317\001\n\026SchedulePayemntRequest\022\024\n\014customer_u"
  "id\030\001 \001(\t\022\027\n\017checking_amount\030\002 \001(\005\022\023\n\013car"
  "d_number\030\003 \001(\t\022\016\n\006expiry\030\004 \001(\t\022\r\n\005birth\030"
  "\005 \001(\t\022\022\n\npwd_2digit\030\006 \001(\t\022\n\n\002pg\030\007 \001(\t\0222\n"
  "\tschedules\030\010 \003(\0132\037.subscribe.PaymentSche"
  "duleParam\"r\n\027SchedulePaymentResponse\022\014\n\004"
  "code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\0228\n\010response\030"
  "\003 \003(\0132&.subscribe.UnitSchedulePaymentRes"
  "ponse\"F\n\030UnschedulePaymentRequest\022\024\n\014cus"
  "tomer_uid\030\001 \001(\t\022\024\n\014merchant_uid\030\002 \003(\t\"t\n"
  "\031UnschedulePaymentResponse\022\014\n\004code\030\001 \001(\005"
  "\022\017\n\007message\030\002 \001(\t\0228\n\010response\030\003 \003(\0132&.su"
  "bscribe.UnitSchedulePaymentResponse\"1\n\031G"
  "etPaymentScheduleRequest\022\024\n\014merchant_uid"
  "\030\001 \001(\t\"u\n\032GetPaymentScheduleResponse\022\014\n\004"
  "code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\0228\n\010response\030"
  "\003 \001(\0132&.subscribe.UnitSchedulePaymentRes"
  "ponse\"|\n#GetPaymentScheduleByCustomerReq"
  "uest\022\024\n\014customer_uid\030\001 \001(\t\022\014\n\004page\030\002 \001(\005"
  "\022\014\n\004from\030\003 \001(\005\022\n\n\002to\030\004 \001(\005\022\027\n\017schedule_s"
  "tatus\030\005 \001(\t\"\215\001\n&NestedGetPaymentSchedule"
  "ByCustomerData\022\r\n\005total\030\001 \001(\005\022\020\n\010previou"
  "s\030\002 \001(\005\022\014\n\004next\030\003 \001(\005\0224\n\004list\030\004 \003(\0132&.su"
  "bscribe.UnitSchedulePaymentResponse\"\212\001\n$"
  "GetPaymentScheduleByCustomerResponse\022\014\n\004"
  "code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\022C\n\010response\030"
  "\003 \001(\01321.subscribe.NestedGetPaymentSchedu"
  "leByCustomerData2\353\007\n\020SubscribeService\022\220\001"
  "\n\021OnetimePaymentRPC\022 .subscribe.OnetimeP"
  "aymentRequest\032!.subscribe.OnetimePayment"
  "Response\"6\202\323\344\223\0020\"+/api/payments/v1/subsc"
  "ribe/payments/onetime:\001*\022\210\001\n\017AgainPaymen"
  "tRPC\022\036.subscribe.AgainPaymentRequest\032\037.s"
  "ubscribe.AgainPaymentResponse\"4\202\323\344\223\002.\")/"
  "api/payments/v1/subscribe/payments/again"
  ":\001*\022\224\001\n\022SchedulePaymentRPC\022!.subscribe.S"
  "chedulePayemntRequest\032\".subscribe.Schedu"
  "lePaymentResponse\"7\202\323\344\223\0021\",/api/payments"
  "/v1/subscribe/payments/schedule:\001*\022\234\001\n\024U"
  "nschedulePaymentRPC\022#.subscribe.Unschedu"
  "lePaymentRequest\032$.subscribe.UnscheduleP"
  "aymentResponse\"9\202\323\344\223\0023\"./api/payments/v1"
  "/subscribe/payments/unschedule:\001*\022\252\001\n\026Ge"
  "tScheduledPaymentRPC\022$.subscribe.GetPaym"
  "entScheduleRequest\032%.subscribe.GetPaymen"
  "tScheduleResponse\"C\202\323\344\223\002=\022;/api/payments"
  "/v1/subscribe/payments/schedule/{merchan"
  "t_uid}\022\325\001\n#GetScheduledPaymentByCustomer"
  "UidRPC\022..subscribe.GetPaymentScheduleByC"
  "ustomerRequest\032/.subscribe.GetPaymentSch"
  "eduleByCustomerResponse\"M\202\323\344\223\002G\022E/api/pa"
  "yments/v1/subscribe/payments/schedule/cu"
  "stomers/{customer_uid}BEZ4github.com/iam"
  "port/interface/gen_src/go/v1/subscribe\252\002"
  "\014V1.Subscribeb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_v1_2fsubscribe_2fsubscribe_2eproto_deps[2] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_v1_2fpayment_2fpayment_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_v1_2fsubscribe_2fsubscribe_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_v1_2fsubscribe_2fsubscribe_2eproto = {
  false, false, 3781, descriptor_table_protodef_v1_2fsubscribe_2fsubscribe_2eproto, "v1/subscribe/subscribe.proto", 
  &descriptor_table_v1_2fsubscribe_2fsubscribe_2eproto_once, descriptor_table_v1_2fsubscribe_2fsubscribe_2eproto_deps, 2, 15,
  schemas, file_default_instances, TableStruct_v1_2fsubscribe_2fsubscribe_2eproto::offsets,
  file_level_metadata_v1_2fsubscribe_2fsubscribe_2eproto, file_level_enum_descriptors_v1_2fsubscribe_2fsubscribe_2eproto, file_level_service_descriptors_v1_2fsubscribe_2fsubscribe_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_v1_2fsubscribe_2fsubscribe_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_v1_2fsubscribe_2fsubscribe_2eproto);
  return descriptor_table_v1_2fsubscribe_2fsubscribe_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_v1_2fsubscribe_2fsubscribe_2eproto(&descriptor_table_v1_2fsubscribe_2fsubscribe_2eproto);
namespace subscribe {

// ===================================================================

class OnetimePaymentRequest::_Internal {
 public:
};

OnetimePaymentRequest::OnetimePaymentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscribe.OnetimePaymentRequest)
}
OnetimePaymentRequest::OnetimePaymentRequest(const OnetimePaymentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_merchant_uid().empty()) {
    merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_merchant_uid(), 
      GetArena());
  }
  card_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_number().empty()) {
    card_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_number(), 
      GetArena());
  }
  expiry_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_expiry().empty()) {
    expiry_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_expiry(), 
      GetArena());
  }
  birth_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_birth().empty()) {
    birth_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_birth(), 
      GetArena());
  }
  pwd_2digit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pwd_2digit().empty()) {
    pwd_2digit_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pwd_2digit(), 
      GetArena());
  }
  customer_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_uid().empty()) {
    customer_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_uid(), 
      GetArena());
  }
  pg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pg().empty()) {
    pg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pg(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  buyer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_name().empty()) {
    buyer_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_name(), 
      GetArena());
  }
  buyer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_email().empty()) {
    buyer_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_email(), 
      GetArena());
  }
  buyer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_tel().empty()) {
    buyer_tel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_tel(), 
      GetArena());
  }
  buyer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_addr().empty()) {
    buyer_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_addr(), 
      GetArena());
  }
  buyer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_postcode().empty()) {
    buyer_postcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_postcode(), 
      GetArena());
  }
  custom_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_custom_data().empty()) {
    custom_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_custom_data(), 
      GetArena());
  }
  notice_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_notice_url().empty()) {
    notice_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_notice_url(), 
      GetArena());
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&interest_free_by_merchant_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(interest_free_by_merchant_));
  // @@protoc_insertion_point(copy_constructor:subscribe.OnetimePaymentRequest)
}

void OnetimePaymentRequest::SharedCtor() {
merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
expiry_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
birth_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pwd_2digit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
custom_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
notice_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&amount_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&interest_free_by_merchant_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(interest_free_by_merchant_));
}

OnetimePaymentRequest::~OnetimePaymentRequest() {
  // @@protoc_insertion_point(destructor:subscribe.OnetimePaymentRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnetimePaymentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  merchant_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  expiry_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  birth_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pwd_2digit_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_tel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_postcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  custom_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  notice_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnetimePaymentRequest::ArenaDtor(void* object) {
  OnetimePaymentRequest* _this = reinterpret_cast< OnetimePaymentRequest* >(object);
  (void)_this;
}
void OnetimePaymentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnetimePaymentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OnetimePaymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.OnetimePaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  merchant_uid_.ClearToEmpty();
  card_number_.ClearToEmpty();
  expiry_.ClearToEmpty();
  birth_.ClearToEmpty();
  pwd_2digit_.ClearToEmpty();
  customer_uid_.ClearToEmpty();
  pg_.ClearToEmpty();
  name_.ClearToEmpty();
  buyer_name_.ClearToEmpty();
  buyer_email_.ClearToEmpty();
  buyer_tel_.ClearToEmpty();
  buyer_addr_.ClearToEmpty();
  buyer_postcode_.ClearToEmpty();
  custom_data_.ClearToEmpty();
  notice_url_.ClearToEmpty();
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interest_free_by_merchant_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(interest_free_by_merchant_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnetimePaymentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string merchant_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_merchant_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.OnetimePaymentRequest.merchant_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 tax_free = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          tax_free_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_number = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_card_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.OnetimePaymentRequest.card_number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string expiry = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_expiry();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.OnetimePaymentRequest.expiry"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string birth = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_birth();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.OnetimePaymentRequest.birth"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pwd_2digit = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_pwd_2digit();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.OnetimePaymentRequest.pwd_2digit"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_uid = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_customer_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.OnetimePaymentRequest.customer_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pg = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_pg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.OnetimePaymentRequest.pg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.OnetimePaymentRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_name = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_buyer_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.OnetimePaymentRequest.buyer_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_email = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_buyer_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.OnetimePaymentRequest.buyer_email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_tel = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_buyer_tel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.OnetimePaymentRequest.buyer_tel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_addr = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_buyer_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.OnetimePaymentRequest.buyer_addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_postcode = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_buyer_postcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.OnetimePaymentRequest.buyer_postcode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 card_quota = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          card_quota_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool interest_free_by_merchant = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          interest_free_by_merchant_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string custom_data = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_custom_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.OnetimePaymentRequest.custom_data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string notice_url = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          auto str = _internal_mutable_notice_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.OnetimePaymentRequest.notice_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnetimePaymentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.OnetimePaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string merchant_uid = 1;
  if (this->merchant_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_merchant_uid().data(), static_cast<int>(this->_internal_merchant_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.OnetimePaymentRequest.merchant_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_merchant_uid(), target);
  }

  // int32 amount = 2;
  if (this->amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_amount(), target);
  }

  // int32 tax_free = 3;
  if (this->tax_free() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_tax_free(), target);
  }

  // string card_number = 4;
  if (this->card_number().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_number().data(), static_cast<int>(this->_internal_card_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.OnetimePaymentRequest.card_number");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_card_number(), target);
  }

  // string expiry = 5;
  if (this->expiry().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_expiry().data(), static_cast<int>(this->_internal_expiry().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.OnetimePaymentRequest.expiry");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_expiry(), target);
  }

  // string birth = 6;
  if (this->birth().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_birth().data(), static_cast<int>(this->_internal_birth().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.OnetimePaymentRequest.birth");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_birth(), target);
  }

  // string pwd_2digit = 7;
  if (this->pwd_2digit().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pwd_2digit().data(), static_cast<int>(this->_internal_pwd_2digit().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.OnetimePaymentRequest.pwd_2digit");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_pwd_2digit(), target);
  }

  // string customer_uid = 8;
  if (this->customer_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_uid().data(), static_cast<int>(this->_internal_customer_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.OnetimePaymentRequest.customer_uid");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_customer_uid(), target);
  }

  // string pg = 9;
  if (this->pg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pg().data(), static_cast<int>(this->_internal_pg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.OnetimePaymentRequest.pg");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_pg(), target);
  }

  // string name = 10;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.OnetimePaymentRequest.name");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_name(), target);
  }

  // string buyer_name = 11;
  if (this->buyer_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_name().data(), static_cast<int>(this->_internal_buyer_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.OnetimePaymentRequest.buyer_name");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_buyer_name(), target);
  }

  // string buyer_email = 12;
  if (this->buyer_email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_email().data(), static_cast<int>(this->_internal_buyer_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.OnetimePaymentRequest.buyer_email");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_buyer_email(), target);
  }

  // string buyer_tel = 13;
  if (this->buyer_tel().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_tel().data(), static_cast<int>(this->_internal_buyer_tel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.OnetimePaymentRequest.buyer_tel");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_buyer_tel(), target);
  }

  // string buyer_addr = 14;
  if (this->buyer_addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_addr().data(), static_cast<int>(this->_internal_buyer_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.OnetimePaymentRequest.buyer_addr");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_buyer_addr(), target);
  }

  // string buyer_postcode = 15;
  if (this->buyer_postcode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_postcode().data(), static_cast<int>(this->_internal_buyer_postcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.OnetimePaymentRequest.buyer_postcode");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_buyer_postcode(), target);
  }

  // int32 card_quota = 16;
  if (this->card_quota() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(16, this->_internal_card_quota(), target);
  }

  // bool interest_free_by_merchant = 17;
  if (this->interest_free_by_merchant() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(17, this->_internal_interest_free_by_merchant(), target);
  }

  // string custom_data = 18;
  if (this->custom_data().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_custom_data().data(), static_cast<int>(this->_internal_custom_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.OnetimePaymentRequest.custom_data");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_custom_data(), target);
  }

  // string notice_url = 19;
  if (this->notice_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_notice_url().data(), static_cast<int>(this->_internal_notice_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.OnetimePaymentRequest.notice_url");
    target = stream->WriteStringMaybeAliased(
        19, this->_internal_notice_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscribe.OnetimePaymentRequest)
  return target;
}

size_t OnetimePaymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.OnetimePaymentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string merchant_uid = 1;
  if (this->merchant_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_merchant_uid());
  }

  // string card_number = 4;
  if (this->card_number().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_number());
  }

  // string expiry = 5;
  if (this->expiry().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_expiry());
  }

  // string birth = 6;
  if (this->birth().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_birth());
  }

  // string pwd_2digit = 7;
  if (this->pwd_2digit().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pwd_2digit());
  }

  // string customer_uid = 8;
  if (this->customer_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_uid());
  }

  // string pg = 9;
  if (this->pg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pg());
  }

  // string name = 10;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string buyer_name = 11;
  if (this->buyer_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_name());
  }

  // string buyer_email = 12;
  if (this->buyer_email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_email());
  }

  // string buyer_tel = 13;
  if (this->buyer_tel().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_tel());
  }

  // string buyer_addr = 14;
  if (this->buyer_addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_addr());
  }

  // string buyer_postcode = 15;
  if (this->buyer_postcode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_postcode());
  }

  // string custom_data = 18;
  if (this->custom_data().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_custom_data());
  }

  // string notice_url = 19;
  if (this->notice_url().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_notice_url());
  }

  // int32 amount = 2;
  if (this->amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_amount());
  }

  // int32 tax_free = 3;
  if (this->tax_free() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tax_free());
  }

  // int32 card_quota = 16;
  if (this->card_quota() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_card_quota());
  }

  // bool interest_free_by_merchant = 17;
  if (this->interest_free_by_merchant() != 0) {
    total_size += 2 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnetimePaymentRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.OnetimePaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnetimePaymentRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnetimePaymentRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.OnetimePaymentRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.OnetimePaymentRequest)
    MergeFrom(*source);
  }
}

void OnetimePaymentRequest::MergeFrom(const OnetimePaymentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.OnetimePaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.merchant_uid().size() > 0) {
    _internal_set_merchant_uid(from._internal_merchant_uid());
  }
  if (from.card_number().size() > 0) {
    _internal_set_card_number(from._internal_card_number());
  }
  if (from.expiry().size() > 0) {
    _internal_set_expiry(from._internal_expiry());
  }
  if (from.birth().size() > 0) {
    _internal_set_birth(from._internal_birth());
  }
  if (from.pwd_2digit().size() > 0) {
    _internal_set_pwd_2digit(from._internal_pwd_2digit());
  }
  if (from.customer_uid().size() > 0) {
    _internal_set_customer_uid(from._internal_customer_uid());
  }
  if (from.pg().size() > 0) {
    _internal_set_pg(from._internal_pg());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.buyer_name().size() > 0) {
    _internal_set_buyer_name(from._internal_buyer_name());
  }
  if (from.buyer_email().size() > 0) {
    _internal_set_buyer_email(from._internal_buyer_email());
  }
  if (from.buyer_tel().size() > 0) {
    _internal_set_buyer_tel(from._internal_buyer_tel());
  }
  if (from.buyer_addr().size() > 0) {
    _internal_set_buyer_addr(from._internal_buyer_addr());
  }
  if (from.buyer_postcode().size() > 0) {
    _internal_set_buyer_postcode(from._internal_buyer_postcode());
  }
  if (from.custom_data().size() > 0) {
    _internal_set_custom_data(from._internal_custom_data());
  }
  if (from.notice_url().size() > 0) {
    _internal_set_notice_url(from._internal_notice_url());
  }
  if (from.amount() != 0) {
    _internal_set_amount(from._internal_amount());
  }
  if (from.tax_free() != 0) {
    _internal_set_tax_free(from._internal_tax_free());
  }
  if (from.card_quota() != 0) {
    _internal_set_card_quota(from._internal_card_quota());
  }
  if (from.interest_free_by_merchant() != 0) {
    _internal_set_interest_free_by_merchant(from._internal_interest_free_by_merchant());
  }
}

void OnetimePaymentRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.OnetimePaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnetimePaymentRequest::CopyFrom(const OnetimePaymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.OnetimePaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnetimePaymentRequest::IsInitialized() const {
  return true;
}

void OnetimePaymentRequest::InternalSwap(OnetimePaymentRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  merchant_uid_.Swap(&other->merchant_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  card_number_.Swap(&other->card_number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  expiry_.Swap(&other->expiry_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  birth_.Swap(&other->birth_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pwd_2digit_.Swap(&other->pwd_2digit_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_uid_.Swap(&other->customer_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pg_.Swap(&other->pg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_name_.Swap(&other->buyer_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_email_.Swap(&other->buyer_email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_tel_.Swap(&other->buyer_tel_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_addr_.Swap(&other->buyer_addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_postcode_.Swap(&other->buyer_postcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  custom_data_.Swap(&other->custom_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  notice_url_.Swap(&other->notice_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OnetimePaymentRequest, interest_free_by_merchant_)
      + sizeof(OnetimePaymentRequest::interest_free_by_merchant_)
      - PROTOBUF_FIELD_OFFSET(OnetimePaymentRequest, amount_)>(
          reinterpret_cast<char*>(&amount_),
          reinterpret_cast<char*>(&other->amount_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OnetimePaymentRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OnetimePaymentResponse::_Internal {
 public:
  static const ::payment::Payment& response(const OnetimePaymentResponse* msg);
};

const ::payment::Payment&
OnetimePaymentResponse::_Internal::response(const OnetimePaymentResponse* msg) {
  return *msg->response_;
}
void OnetimePaymentResponse::clear_response() {
  if (GetArena() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
}
OnetimePaymentResponse::OnetimePaymentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscribe.OnetimePaymentResponse)
}
OnetimePaymentResponse::OnetimePaymentResponse(const OnetimePaymentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  if (from._internal_has_response()) {
    response_ = new ::payment::Payment(*from.response_);
  } else {
    response_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:subscribe.OnetimePaymentResponse)
}

void OnetimePaymentResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&response_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&response_)) + sizeof(code_));
}

OnetimePaymentResponse::~OnetimePaymentResponse() {
  // @@protoc_insertion_point(destructor:subscribe.OnetimePaymentResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnetimePaymentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete response_;
}

void OnetimePaymentResponse::ArenaDtor(void* object) {
  OnetimePaymentResponse* _this = reinterpret_cast< OnetimePaymentResponse* >(object);
  (void)_this;
}
void OnetimePaymentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnetimePaymentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OnetimePaymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.OnetimePaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  if (GetArena() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnetimePaymentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.OnetimePaymentResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.Payment response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnetimePaymentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.OnetimePaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.OnetimePaymentResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .payment.Payment response = 3;
  if (this->has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscribe.OnetimePaymentResponse)
  return target;
}

size_t OnetimePaymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.OnetimePaymentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .payment.Payment response = 3;
  if (this->has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnetimePaymentResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.OnetimePaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OnetimePaymentResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnetimePaymentResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.OnetimePaymentResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.OnetimePaymentResponse)
    MergeFrom(*source);
  }
}

void OnetimePaymentResponse::MergeFrom(const OnetimePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.OnetimePaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.has_response()) {
    _internal_mutable_response()->::payment::Payment::MergeFrom(from._internal_response());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void OnetimePaymentResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.OnetimePaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnetimePaymentResponse::CopyFrom(const OnetimePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.OnetimePaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnetimePaymentResponse::IsInitialized() const {
  return true;
}

void OnetimePaymentResponse::InternalSwap(OnetimePaymentResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OnetimePaymentResponse, code_)
      + sizeof(OnetimePaymentResponse::code_)
      - PROTOBUF_FIELD_OFFSET(OnetimePaymentResponse, response_)>(
          reinterpret_cast<char*>(&response_),
          reinterpret_cast<char*>(&other->response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OnetimePaymentResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AgainPaymentRequest::_Internal {
 public:
};

AgainPaymentRequest::AgainPaymentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscribe.AgainPaymentRequest)
}
AgainPaymentRequest::AgainPaymentRequest(const AgainPaymentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  customer_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_uid().empty()) {
    customer_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_uid(), 
      GetArena());
  }
  merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_merchant_uid().empty()) {
    merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_merchant_uid(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  buyer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_name().empty()) {
    buyer_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_name(), 
      GetArena());
  }
  buyer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_email().empty()) {
    buyer_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_email(), 
      GetArena());
  }
  buyer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_tel().empty()) {
    buyer_tel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_tel(), 
      GetArena());
  }
  buyer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_addr().empty()) {
    buyer_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_addr(), 
      GetArena());
  }
  buyer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_postcode().empty()) {
    buyer_postcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_postcode(), 
      GetArena());
  }
  custom_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_custom_data().empty()) {
    custom_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_custom_data(), 
      GetArena());
  }
  notice_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_notice_url().empty()) {
    notice_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_notice_url(), 
      GetArena());
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&interest_free_by_merchant_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(interest_free_by_merchant_));
  // @@protoc_insertion_point(copy_constructor:subscribe.AgainPaymentRequest)
}

void AgainPaymentRequest::SharedCtor() {
customer_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
custom_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
notice_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&amount_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&interest_free_by_merchant_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(interest_free_by_merchant_));
}

AgainPaymentRequest::~AgainPaymentRequest() {
  // @@protoc_insertion_point(destructor:subscribe.AgainPaymentRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AgainPaymentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  customer_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  merchant_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_tel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_postcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  custom_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  notice_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AgainPaymentRequest::ArenaDtor(void* object) {
  AgainPaymentRequest* _this = reinterpret_cast< AgainPaymentRequest* >(object);
  (void)_this;
}
void AgainPaymentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgainPaymentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgainPaymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.AgainPaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  customer_uid_.ClearToEmpty();
  merchant_uid_.ClearToEmpty();
  name_.ClearToEmpty();
  buyer_name_.ClearToEmpty();
  buyer_email_.ClearToEmpty();
  buyer_tel_.ClearToEmpty();
  buyer_addr_.ClearToEmpty();
  buyer_postcode_.ClearToEmpty();
  custom_data_.ClearToEmpty();
  notice_url_.ClearToEmpty();
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interest_free_by_merchant_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(interest_free_by_merchant_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgainPaymentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string customer_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_customer_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.AgainPaymentRequest.customer_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string merchant_uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_merchant_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.AgainPaymentRequest.merchant_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 amount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 tax_free = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          tax_free_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.AgainPaymentRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_buyer_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.AgainPaymentRequest.buyer_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_email = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_buyer_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.AgainPaymentRequest.buyer_email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_tel = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_buyer_tel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.AgainPaymentRequest.buyer_tel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_addr = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_buyer_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.AgainPaymentRequest.buyer_addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_postcode = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_buyer_postcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.AgainPaymentRequest.buyer_postcode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 card_quota = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          card_quota_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool interest_free_by_merchant = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          interest_free_by_merchant_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string custom_data = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_custom_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.AgainPaymentRequest.custom_data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string notice_url = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_notice_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.AgainPaymentRequest.notice_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgainPaymentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.AgainPaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string customer_uid = 1;
  if (this->customer_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_uid().data(), static_cast<int>(this->_internal_customer_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.AgainPaymentRequest.customer_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_customer_uid(), target);
  }

  // string merchant_uid = 2;
  if (this->merchant_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_merchant_uid().data(), static_cast<int>(this->_internal_merchant_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.AgainPaymentRequest.merchant_uid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_merchant_uid(), target);
  }

  // int32 amount = 3;
  if (this->amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_amount(), target);
  }

  // int32 tax_free = 4;
  if (this->tax_free() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_tax_free(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.AgainPaymentRequest.name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_name(), target);
  }

  // string buyer_name = 6;
  if (this->buyer_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_name().data(), static_cast<int>(this->_internal_buyer_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.AgainPaymentRequest.buyer_name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_buyer_name(), target);
  }

  // string buyer_email = 7;
  if (this->buyer_email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_email().data(), static_cast<int>(this->_internal_buyer_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.AgainPaymentRequest.buyer_email");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_buyer_email(), target);
  }

  // string buyer_tel = 8;
  if (this->buyer_tel().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_tel().data(), static_cast<int>(this->_internal_buyer_tel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.AgainPaymentRequest.buyer_tel");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_buyer_tel(), target);
  }

  // string buyer_addr = 9;
  if (this->buyer_addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_addr().data(), static_cast<int>(this->_internal_buyer_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.AgainPaymentRequest.buyer_addr");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_buyer_addr(), target);
  }

  // string buyer_postcode = 10;
  if (this->buyer_postcode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_postcode().data(), static_cast<int>(this->_internal_buyer_postcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.AgainPaymentRequest.buyer_postcode");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_buyer_postcode(), target);
  }

  // int32 card_quota = 11;
  if (this->card_quota() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_card_quota(), target);
  }

  // bool interest_free_by_merchant = 12;
  if (this->interest_free_by_merchant() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_interest_free_by_merchant(), target);
  }

  // string custom_data = 13;
  if (this->custom_data().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_custom_data().data(), static_cast<int>(this->_internal_custom_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.AgainPaymentRequest.custom_data");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_custom_data(), target);
  }

  // string notice_url = 14;
  if (this->notice_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_notice_url().data(), static_cast<int>(this->_internal_notice_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.AgainPaymentRequest.notice_url");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_notice_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscribe.AgainPaymentRequest)
  return target;
}

size_t AgainPaymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.AgainPaymentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string customer_uid = 1;
  if (this->customer_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_uid());
  }

  // string merchant_uid = 2;
  if (this->merchant_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_merchant_uid());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string buyer_name = 6;
  if (this->buyer_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_name());
  }

  // string buyer_email = 7;
  if (this->buyer_email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_email());
  }

  // string buyer_tel = 8;
  if (this->buyer_tel().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_tel());
  }

  // string buyer_addr = 9;
  if (this->buyer_addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_addr());
  }

  // string buyer_postcode = 10;
  if (this->buyer_postcode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_postcode());
  }

  // string custom_data = 13;
  if (this->custom_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_custom_data());
  }

  // string notice_url = 14;
  if (this->notice_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_notice_url());
  }

  // int32 amount = 3;
  if (this->amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_amount());
  }

  // int32 tax_free = 4;
  if (this->tax_free() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tax_free());
  }

  // int32 card_quota = 11;
  if (this->card_quota() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_card_quota());
  }

  // bool interest_free_by_merchant = 12;
  if (this->interest_free_by_merchant() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgainPaymentRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.AgainPaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AgainPaymentRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AgainPaymentRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.AgainPaymentRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.AgainPaymentRequest)
    MergeFrom(*source);
  }
}

void AgainPaymentRequest::MergeFrom(const AgainPaymentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.AgainPaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.customer_uid().size() > 0) {
    _internal_set_customer_uid(from._internal_customer_uid());
  }
  if (from.merchant_uid().size() > 0) {
    _internal_set_merchant_uid(from._internal_merchant_uid());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.buyer_name().size() > 0) {
    _internal_set_buyer_name(from._internal_buyer_name());
  }
  if (from.buyer_email().size() > 0) {
    _internal_set_buyer_email(from._internal_buyer_email());
  }
  if (from.buyer_tel().size() > 0) {
    _internal_set_buyer_tel(from._internal_buyer_tel());
  }
  if (from.buyer_addr().size() > 0) {
    _internal_set_buyer_addr(from._internal_buyer_addr());
  }
  if (from.buyer_postcode().size() > 0) {
    _internal_set_buyer_postcode(from._internal_buyer_postcode());
  }
  if (from.custom_data().size() > 0) {
    _internal_set_custom_data(from._internal_custom_data());
  }
  if (from.notice_url().size() > 0) {
    _internal_set_notice_url(from._internal_notice_url());
  }
  if (from.amount() != 0) {
    _internal_set_amount(from._internal_amount());
  }
  if (from.tax_free() != 0) {
    _internal_set_tax_free(from._internal_tax_free());
  }
  if (from.card_quota() != 0) {
    _internal_set_card_quota(from._internal_card_quota());
  }
  if (from.interest_free_by_merchant() != 0) {
    _internal_set_interest_free_by_merchant(from._internal_interest_free_by_merchant());
  }
}

void AgainPaymentRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.AgainPaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgainPaymentRequest::CopyFrom(const AgainPaymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.AgainPaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgainPaymentRequest::IsInitialized() const {
  return true;
}

void AgainPaymentRequest::InternalSwap(AgainPaymentRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  customer_uid_.Swap(&other->customer_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  merchant_uid_.Swap(&other->merchant_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_name_.Swap(&other->buyer_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_email_.Swap(&other->buyer_email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_tel_.Swap(&other->buyer_tel_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_addr_.Swap(&other->buyer_addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_postcode_.Swap(&other->buyer_postcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  custom_data_.Swap(&other->custom_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  notice_url_.Swap(&other->notice_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AgainPaymentRequest, interest_free_by_merchant_)
      + sizeof(AgainPaymentRequest::interest_free_by_merchant_)
      - PROTOBUF_FIELD_OFFSET(AgainPaymentRequest, amount_)>(
          reinterpret_cast<char*>(&amount_),
          reinterpret_cast<char*>(&other->amount_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AgainPaymentRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AgainPaymentResponse::_Internal {
 public:
  static const ::payment::Payment& response(const AgainPaymentResponse* msg);
};

const ::payment::Payment&
AgainPaymentResponse::_Internal::response(const AgainPaymentResponse* msg) {
  return *msg->response_;
}
void AgainPaymentResponse::clear_response() {
  if (GetArena() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
}
AgainPaymentResponse::AgainPaymentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscribe.AgainPaymentResponse)
}
AgainPaymentResponse::AgainPaymentResponse(const AgainPaymentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  if (from._internal_has_response()) {
    response_ = new ::payment::Payment(*from.response_);
  } else {
    response_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:subscribe.AgainPaymentResponse)
}

void AgainPaymentResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&response_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&response_)) + sizeof(code_));
}

AgainPaymentResponse::~AgainPaymentResponse() {
  // @@protoc_insertion_point(destructor:subscribe.AgainPaymentResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AgainPaymentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete response_;
}

void AgainPaymentResponse::ArenaDtor(void* object) {
  AgainPaymentResponse* _this = reinterpret_cast< AgainPaymentResponse* >(object);
  (void)_this;
}
void AgainPaymentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgainPaymentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgainPaymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.AgainPaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  if (GetArena() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgainPaymentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.AgainPaymentResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.Payment response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgainPaymentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.AgainPaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.AgainPaymentResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .payment.Payment response = 3;
  if (this->has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscribe.AgainPaymentResponse)
  return target;
}

size_t AgainPaymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.AgainPaymentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .payment.Payment response = 3;
  if (this->has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgainPaymentResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.AgainPaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AgainPaymentResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AgainPaymentResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.AgainPaymentResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.AgainPaymentResponse)
    MergeFrom(*source);
  }
}

void AgainPaymentResponse::MergeFrom(const AgainPaymentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.AgainPaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.has_response()) {
    _internal_mutable_response()->::payment::Payment::MergeFrom(from._internal_response());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void AgainPaymentResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.AgainPaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgainPaymentResponse::CopyFrom(const AgainPaymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.AgainPaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgainPaymentResponse::IsInitialized() const {
  return true;
}

void AgainPaymentResponse::InternalSwap(AgainPaymentResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AgainPaymentResponse, code_)
      + sizeof(AgainPaymentResponse::code_)
      - PROTOBUF_FIELD_OFFSET(AgainPaymentResponse, response_)>(
          reinterpret_cast<char*>(&response_),
          reinterpret_cast<char*>(&other->response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AgainPaymentResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PaymentScheduleParam::_Internal {
 public:
};

PaymentScheduleParam::PaymentScheduleParam(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscribe.PaymentScheduleParam)
}
PaymentScheduleParam::PaymentScheduleParam(const PaymentScheduleParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_merchant_uid().empty()) {
    merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_merchant_uid(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  buyer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_name().empty()) {
    buyer_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_name(), 
      GetArena());
  }
  buyer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_email().empty()) {
    buyer_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_email(), 
      GetArena());
  }
  buyer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_tel().empty()) {
    buyer_tel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_tel(), 
      GetArena());
  }
  buyer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_addr().empty()) {
    buyer_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_addr(), 
      GetArena());
  }
  buyer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_postcode().empty()) {
    buyer_postcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_postcode(), 
      GetArena());
  }
  ::memcpy(&schedule_at_, &from.schedule_at_,
    static_cast<size_t>(reinterpret_cast<char*>(&tax_free_) -
    reinterpret_cast<char*>(&schedule_at_)) + sizeof(tax_free_));
  // @@protoc_insertion_point(copy_constructor:subscribe.PaymentScheduleParam)
}

void PaymentScheduleParam::SharedCtor() {
merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&schedule_at_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&tax_free_) -
    reinterpret_cast<char*>(&schedule_at_)) + sizeof(tax_free_));
}

PaymentScheduleParam::~PaymentScheduleParam() {
  // @@protoc_insertion_point(destructor:subscribe.PaymentScheduleParam)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaymentScheduleParam::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  merchant_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_tel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_postcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PaymentScheduleParam::ArenaDtor(void* object) {
  PaymentScheduleParam* _this = reinterpret_cast< PaymentScheduleParam* >(object);
  (void)_this;
}
void PaymentScheduleParam::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentScheduleParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaymentScheduleParam::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.PaymentScheduleParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  merchant_uid_.ClearToEmpty();
  name_.ClearToEmpty();
  buyer_name_.ClearToEmpty();
  buyer_email_.ClearToEmpty();
  buyer_tel_.ClearToEmpty();
  buyer_addr_.ClearToEmpty();
  buyer_postcode_.ClearToEmpty();
  ::memset(&schedule_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tax_free_) -
      reinterpret_cast<char*>(&schedule_at_)) + sizeof(tax_free_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentScheduleParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string merchant_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_merchant_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.PaymentScheduleParam.merchant_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 schedule_at = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          schedule_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 amount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 tax_free = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          tax_free_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.PaymentScheduleParam.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_buyer_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.PaymentScheduleParam.buyer_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_email = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_buyer_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.PaymentScheduleParam.buyer_email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_tel = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_buyer_tel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.PaymentScheduleParam.buyer_tel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_addr = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_buyer_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.PaymentScheduleParam.buyer_addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_postcode = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_buyer_postcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.PaymentScheduleParam.buyer_postcode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentScheduleParam::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.PaymentScheduleParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string merchant_uid = 1;
  if (this->merchant_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_merchant_uid().data(), static_cast<int>(this->_internal_merchant_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.PaymentScheduleParam.merchant_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_merchant_uid(), target);
  }

  // int32 schedule_at = 2;
  if (this->schedule_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_schedule_at(), target);
  }

  // int32 amount = 3;
  if (this->amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_amount(), target);
  }

  // int32 tax_free = 4;
  if (this->tax_free() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_tax_free(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.PaymentScheduleParam.name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_name(), target);
  }

  // string buyer_name = 6;
  if (this->buyer_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_name().data(), static_cast<int>(this->_internal_buyer_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.PaymentScheduleParam.buyer_name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_buyer_name(), target);
  }

  // string buyer_email = 7;
  if (this->buyer_email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_email().data(), static_cast<int>(this->_internal_buyer_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.PaymentScheduleParam.buyer_email");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_buyer_email(), target);
  }

  // string buyer_tel = 8;
  if (this->buyer_tel().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_tel().data(), static_cast<int>(this->_internal_buyer_tel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.PaymentScheduleParam.buyer_tel");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_buyer_tel(), target);
  }

  // string buyer_addr = 9;
  if (this->buyer_addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_addr().data(), static_cast<int>(this->_internal_buyer_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.PaymentScheduleParam.buyer_addr");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_buyer_addr(), target);
  }

  // string buyer_postcode = 10;
  if (this->buyer_postcode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_postcode().data(), static_cast<int>(this->_internal_buyer_postcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.PaymentScheduleParam.buyer_postcode");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_buyer_postcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscribe.PaymentScheduleParam)
  return target;
}

size_t PaymentScheduleParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.PaymentScheduleParam)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string merchant_uid = 1;
  if (this->merchant_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_merchant_uid());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string buyer_name = 6;
  if (this->buyer_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_name());
  }

  // string buyer_email = 7;
  if (this->buyer_email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_email());
  }

  // string buyer_tel = 8;
  if (this->buyer_tel().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_tel());
  }

  // string buyer_addr = 9;
  if (this->buyer_addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_addr());
  }

  // string buyer_postcode = 10;
  if (this->buyer_postcode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_postcode());
  }

  // int32 schedule_at = 2;
  if (this->schedule_at() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_schedule_at());
  }

  // int32 amount = 3;
  if (this->amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_amount());
  }

  // int32 tax_free = 4;
  if (this->tax_free() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tax_free());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaymentScheduleParam::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.PaymentScheduleParam)
  GOOGLE_DCHECK_NE(&from, this);
  const PaymentScheduleParam* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaymentScheduleParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.PaymentScheduleParam)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.PaymentScheduleParam)
    MergeFrom(*source);
  }
}

void PaymentScheduleParam::MergeFrom(const PaymentScheduleParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.PaymentScheduleParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.merchant_uid().size() > 0) {
    _internal_set_merchant_uid(from._internal_merchant_uid());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.buyer_name().size() > 0) {
    _internal_set_buyer_name(from._internal_buyer_name());
  }
  if (from.buyer_email().size() > 0) {
    _internal_set_buyer_email(from._internal_buyer_email());
  }
  if (from.buyer_tel().size() > 0) {
    _internal_set_buyer_tel(from._internal_buyer_tel());
  }
  if (from.buyer_addr().size() > 0) {
    _internal_set_buyer_addr(from._internal_buyer_addr());
  }
  if (from.buyer_postcode().size() > 0) {
    _internal_set_buyer_postcode(from._internal_buyer_postcode());
  }
  if (from.schedule_at() != 0) {
    _internal_set_schedule_at(from._internal_schedule_at());
  }
  if (from.amount() != 0) {
    _internal_set_amount(from._internal_amount());
  }
  if (from.tax_free() != 0) {
    _internal_set_tax_free(from._internal_tax_free());
  }
}

void PaymentScheduleParam::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.PaymentScheduleParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentScheduleParam::CopyFrom(const PaymentScheduleParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.PaymentScheduleParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentScheduleParam::IsInitialized() const {
  return true;
}

void PaymentScheduleParam::InternalSwap(PaymentScheduleParam* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  merchant_uid_.Swap(&other->merchant_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_name_.Swap(&other->buyer_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_email_.Swap(&other->buyer_email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_tel_.Swap(&other->buyer_tel_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_addr_.Swap(&other->buyer_addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_postcode_.Swap(&other->buyer_postcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaymentScheduleParam, tax_free_)
      + sizeof(PaymentScheduleParam::tax_free_)
      - PROTOBUF_FIELD_OFFSET(PaymentScheduleParam, schedule_at_)>(
          reinterpret_cast<char*>(&schedule_at_),
          reinterpret_cast<char*>(&other->schedule_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentScheduleParam::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnitSchedulePaymentResponse::_Internal {
 public:
};

UnitSchedulePaymentResponse::UnitSchedulePaymentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscribe.UnitSchedulePaymentResponse)
}
UnitSchedulePaymentResponse::UnitSchedulePaymentResponse(const UnitSchedulePaymentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  customer_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_uid().empty()) {
    customer_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_uid(), 
      GetArena());
  }
  merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_merchant_uid().empty()) {
    merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_merchant_uid(), 
      GetArena());
  }
  imp_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imp_uid().empty()) {
    imp_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imp_uid(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  buyer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_name().empty()) {
    buyer_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_name(), 
      GetArena());
  }
  buyer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_email().empty()) {
    buyer_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_email(), 
      GetArena());
  }
  buyer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_tel().empty()) {
    buyer_tel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_tel(), 
      GetArena());
  }
  buyer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_addr().empty()) {
    buyer_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_addr(), 
      GetArena());
  }
  buyer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_postcode().empty()) {
    buyer_postcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_postcode(), 
      GetArena());
  }
  custom_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_custom_data().empty()) {
    custom_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_custom_data(), 
      GetArena());
  }
  schedule_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_schedule_status().empty()) {
    schedule_status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_schedule_status(), 
      GetArena());
  }
  payment_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payment_status().empty()) {
    payment_status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_payment_status(), 
      GetArena());
  }
  fail_reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_fail_reason().empty()) {
    fail_reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_fail_reason(), 
      GetArena());
  }
  ::memcpy(&schedule_at_, &from.schedule_at_,
    static_cast<size_t>(reinterpret_cast<char*>(&amount_) -
    reinterpret_cast<char*>(&schedule_at_)) + sizeof(amount_));
  // @@protoc_insertion_point(copy_constructor:subscribe.UnitSchedulePaymentResponse)
}

void UnitSchedulePaymentResponse::SharedCtor() {
customer_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
imp_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
custom_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
schedule_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
payment_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
fail_reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&schedule_at_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&amount_) -
    reinterpret_cast<char*>(&schedule_at_)) + sizeof(amount_));
}

UnitSchedulePaymentResponse::~UnitSchedulePaymentResponse() {
  // @@protoc_insertion_point(destructor:subscribe.UnitSchedulePaymentResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnitSchedulePaymentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  customer_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  merchant_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  imp_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_tel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_postcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  custom_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  schedule_status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payment_status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fail_reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnitSchedulePaymentResponse::ArenaDtor(void* object) {
  UnitSchedulePaymentResponse* _this = reinterpret_cast< UnitSchedulePaymentResponse* >(object);
  (void)_this;
}
void UnitSchedulePaymentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnitSchedulePaymentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnitSchedulePaymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.UnitSchedulePaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  customer_uid_.ClearToEmpty();
  merchant_uid_.ClearToEmpty();
  imp_uid_.ClearToEmpty();
  name_.ClearToEmpty();
  buyer_name_.ClearToEmpty();
  buyer_email_.ClearToEmpty();
  buyer_tel_.ClearToEmpty();
  buyer_addr_.ClearToEmpty();
  buyer_postcode_.ClearToEmpty();
  custom_data_.ClearToEmpty();
  schedule_status_.ClearToEmpty();
  payment_status_.ClearToEmpty();
  fail_reason_.ClearToEmpty();
  ::memset(&schedule_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&schedule_at_)) + sizeof(amount_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnitSchedulePaymentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string customer_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_customer_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.UnitSchedulePaymentResponse.customer_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string merchant_uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_merchant_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.UnitSchedulePaymentResponse.merchant_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string imp_uid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_imp_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.UnitSchedulePaymentResponse.imp_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 schedule_at = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          schedule_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 executed_at = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          executed_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 revoked_at = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          revoked_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 amount = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.UnitSchedulePaymentResponse.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_name = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_buyer_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.UnitSchedulePaymentResponse.buyer_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_email = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_buyer_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.UnitSchedulePaymentResponse.buyer_email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_tel = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_buyer_tel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.UnitSchedulePaymentResponse.buyer_tel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_addr = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_buyer_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.UnitSchedulePaymentResponse.buyer_addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_postcode = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_buyer_postcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.UnitSchedulePaymentResponse.buyer_postcode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string custom_data = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_custom_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.UnitSchedulePaymentResponse.custom_data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string schedule_status = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_schedule_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.UnitSchedulePaymentResponse.schedule_status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string payment_status = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_payment_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.UnitSchedulePaymentResponse.payment_status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string fail_reason = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          auto str = _internal_mutable_fail_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.UnitSchedulePaymentResponse.fail_reason"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnitSchedulePaymentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.UnitSchedulePaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string customer_uid = 1;
  if (this->customer_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_uid().data(), static_cast<int>(this->_internal_customer_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.UnitSchedulePaymentResponse.customer_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_customer_uid(), target);
  }

  // string merchant_uid = 2;
  if (this->merchant_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_merchant_uid().data(), static_cast<int>(this->_internal_merchant_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.UnitSchedulePaymentResponse.merchant_uid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_merchant_uid(), target);
  }

  // string imp_uid = 3;
  if (this->imp_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_imp_uid().data(), static_cast<int>(this->_internal_imp_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.UnitSchedulePaymentResponse.imp_uid");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_imp_uid(), target);
  }

  // int32 schedule_at = 4;
  if (this->schedule_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_schedule_at(), target);
  }

  // int32 executed_at = 5;
  if (this->executed_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_executed_at(), target);
  }

  // int32 revoked_at = 6;
  if (this->revoked_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_revoked_at(), target);
  }

  // int32 amount = 7;
  if (this->amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_amount(), target);
  }

  // string name = 8;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.UnitSchedulePaymentResponse.name");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_name(), target);
  }

  // string buyer_name = 9;
  if (this->buyer_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_name().data(), static_cast<int>(this->_internal_buyer_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.UnitSchedulePaymentResponse.buyer_name");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_buyer_name(), target);
  }

  // string buyer_email = 10;
  if (this->buyer_email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_email().data(), static_cast<int>(this->_internal_buyer_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.UnitSchedulePaymentResponse.buyer_email");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_buyer_email(), target);
  }

  // string buyer_tel = 11;
  if (this->buyer_tel().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_tel().data(), static_cast<int>(this->_internal_buyer_tel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.UnitSchedulePaymentResponse.buyer_tel");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_buyer_tel(), target);
  }

  // string buyer_addr = 12;
  if (this->buyer_addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_addr().data(), static_cast<int>(this->_internal_buyer_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.UnitSchedulePaymentResponse.buyer_addr");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_buyer_addr(), target);
  }

  // string buyer_postcode = 13;
  if (this->buyer_postcode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_postcode().data(), static_cast<int>(this->_internal_buyer_postcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.UnitSchedulePaymentResponse.buyer_postcode");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_buyer_postcode(), target);
  }

  // string custom_data = 14;
  if (this->custom_data().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_custom_data().data(), static_cast<int>(this->_internal_custom_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.UnitSchedulePaymentResponse.custom_data");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_custom_data(), target);
  }

  // string schedule_status = 15;
  if (this->schedule_status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_schedule_status().data(), static_cast<int>(this->_internal_schedule_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.UnitSchedulePaymentResponse.schedule_status");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_schedule_status(), target);
  }

  // string payment_status = 16;
  if (this->payment_status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payment_status().data(), static_cast<int>(this->_internal_payment_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.UnitSchedulePaymentResponse.payment_status");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_payment_status(), target);
  }

  // string fail_reason = 17;
  if (this->fail_reason().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fail_reason().data(), static_cast<int>(this->_internal_fail_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.UnitSchedulePaymentResponse.fail_reason");
    target = stream->WriteStringMaybeAliased(
        17, this->_internal_fail_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscribe.UnitSchedulePaymentResponse)
  return target;
}

size_t UnitSchedulePaymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.UnitSchedulePaymentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string customer_uid = 1;
  if (this->customer_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_uid());
  }

  // string merchant_uid = 2;
  if (this->merchant_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_merchant_uid());
  }

  // string imp_uid = 3;
  if (this->imp_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_imp_uid());
  }

  // string name = 8;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string buyer_name = 9;
  if (this->buyer_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_name());
  }

  // string buyer_email = 10;
  if (this->buyer_email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_email());
  }

  // string buyer_tel = 11;
  if (this->buyer_tel().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_tel());
  }

  // string buyer_addr = 12;
  if (this->buyer_addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_addr());
  }

  // string buyer_postcode = 13;
  if (this->buyer_postcode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_postcode());
  }

  // string custom_data = 14;
  if (this->custom_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_custom_data());
  }

  // string schedule_status = 15;
  if (this->schedule_status().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_schedule_status());
  }

  // string payment_status = 16;
  if (this->payment_status().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payment_status());
  }

  // string fail_reason = 17;
  if (this->fail_reason().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fail_reason());
  }

  // int32 schedule_at = 4;
  if (this->schedule_at() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_schedule_at());
  }

  // int32 executed_at = 5;
  if (this->executed_at() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_executed_at());
  }

  // int32 revoked_at = 6;
  if (this->revoked_at() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_revoked_at());
  }

  // int32 amount = 7;
  if (this->amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_amount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnitSchedulePaymentResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.UnitSchedulePaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UnitSchedulePaymentResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnitSchedulePaymentResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.UnitSchedulePaymentResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.UnitSchedulePaymentResponse)
    MergeFrom(*source);
  }
}

void UnitSchedulePaymentResponse::MergeFrom(const UnitSchedulePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.UnitSchedulePaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.customer_uid().size() > 0) {
    _internal_set_customer_uid(from._internal_customer_uid());
  }
  if (from.merchant_uid().size() > 0) {
    _internal_set_merchant_uid(from._internal_merchant_uid());
  }
  if (from.imp_uid().size() > 0) {
    _internal_set_imp_uid(from._internal_imp_uid());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.buyer_name().size() > 0) {
    _internal_set_buyer_name(from._internal_buyer_name());
  }
  if (from.buyer_email().size() > 0) {
    _internal_set_buyer_email(from._internal_buyer_email());
  }
  if (from.buyer_tel().size() > 0) {
    _internal_set_buyer_tel(from._internal_buyer_tel());
  }
  if (from.buyer_addr().size() > 0) {
    _internal_set_buyer_addr(from._internal_buyer_addr());
  }
  if (from.buyer_postcode().size() > 0) {
    _internal_set_buyer_postcode(from._internal_buyer_postcode());
  }
  if (from.custom_data().size() > 0) {
    _internal_set_custom_data(from._internal_custom_data());
  }
  if (from.schedule_status().size() > 0) {
    _internal_set_schedule_status(from._internal_schedule_status());
  }
  if (from.payment_status().size() > 0) {
    _internal_set_payment_status(from._internal_payment_status());
  }
  if (from.fail_reason().size() > 0) {
    _internal_set_fail_reason(from._internal_fail_reason());
  }
  if (from.schedule_at() != 0) {
    _internal_set_schedule_at(from._internal_schedule_at());
  }
  if (from.executed_at() != 0) {
    _internal_set_executed_at(from._internal_executed_at());
  }
  if (from.revoked_at() != 0) {
    _internal_set_revoked_at(from._internal_revoked_at());
  }
  if (from.amount() != 0) {
    _internal_set_amount(from._internal_amount());
  }
}

void UnitSchedulePaymentResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.UnitSchedulePaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitSchedulePaymentResponse::CopyFrom(const UnitSchedulePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.UnitSchedulePaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitSchedulePaymentResponse::IsInitialized() const {
  return true;
}

void UnitSchedulePaymentResponse::InternalSwap(UnitSchedulePaymentResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  customer_uid_.Swap(&other->customer_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  merchant_uid_.Swap(&other->merchant_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  imp_uid_.Swap(&other->imp_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_name_.Swap(&other->buyer_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_email_.Swap(&other->buyer_email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_tel_.Swap(&other->buyer_tel_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_addr_.Swap(&other->buyer_addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_postcode_.Swap(&other->buyer_postcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  custom_data_.Swap(&other->custom_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  schedule_status_.Swap(&other->schedule_status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  payment_status_.Swap(&other->payment_status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  fail_reason_.Swap(&other->fail_reason_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnitSchedulePaymentResponse, amount_)
      + sizeof(UnitSchedulePaymentResponse::amount_)
      - PROTOBUF_FIELD_OFFSET(UnitSchedulePaymentResponse, schedule_at_)>(
          reinterpret_cast<char*>(&schedule_at_),
          reinterpret_cast<char*>(&other->schedule_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnitSchedulePaymentResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SchedulePayemntRequest::_Internal {
 public:
};

SchedulePayemntRequest::SchedulePayemntRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  schedules_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscribe.SchedulePayemntRequest)
}
SchedulePayemntRequest::SchedulePayemntRequest(const SchedulePayemntRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      schedules_(from.schedules_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  customer_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_uid().empty()) {
    customer_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_uid(), 
      GetArena());
  }
  card_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_number().empty()) {
    card_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_number(), 
      GetArena());
  }
  expiry_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_expiry().empty()) {
    expiry_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_expiry(), 
      GetArena());
  }
  birth_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_birth().empty()) {
    birth_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_birth(), 
      GetArena());
  }
  pwd_2digit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pwd_2digit().empty()) {
    pwd_2digit_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pwd_2digit(), 
      GetArena());
  }
  pg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pg().empty()) {
    pg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pg(), 
      GetArena());
  }
  checking_amount_ = from.checking_amount_;
  // @@protoc_insertion_point(copy_constructor:subscribe.SchedulePayemntRequest)
}

void SchedulePayemntRequest::SharedCtor() {
customer_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
expiry_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
birth_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pwd_2digit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
checking_amount_ = 0;
}

SchedulePayemntRequest::~SchedulePayemntRequest() {
  // @@protoc_insertion_point(destructor:subscribe.SchedulePayemntRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SchedulePayemntRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  customer_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  expiry_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  birth_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pwd_2digit_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SchedulePayemntRequest::ArenaDtor(void* object) {
  SchedulePayemntRequest* _this = reinterpret_cast< SchedulePayemntRequest* >(object);
  (void)_this;
}
void SchedulePayemntRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SchedulePayemntRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SchedulePayemntRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.SchedulePayemntRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  schedules_.Clear();
  customer_uid_.ClearToEmpty();
  card_number_.ClearToEmpty();
  expiry_.ClearToEmpty();
  birth_.ClearToEmpty();
  pwd_2digit_.ClearToEmpty();
  pg_.ClearToEmpty();
  checking_amount_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SchedulePayemntRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string customer_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_customer_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.SchedulePayemntRequest.customer_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 checking_amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          checking_amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_number = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_card_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.SchedulePayemntRequest.card_number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string expiry = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_expiry();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.SchedulePayemntRequest.expiry"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string birth = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_birth();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.SchedulePayemntRequest.birth"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pwd_2digit = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_pwd_2digit();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.SchedulePayemntRequest.pwd_2digit"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pg = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_pg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.SchedulePayemntRequest.pg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .subscribe.PaymentScheduleParam schedules = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_schedules(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SchedulePayemntRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.SchedulePayemntRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string customer_uid = 1;
  if (this->customer_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_uid().data(), static_cast<int>(this->_internal_customer_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.SchedulePayemntRequest.customer_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_customer_uid(), target);
  }

  // int32 checking_amount = 2;
  if (this->checking_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_checking_amount(), target);
  }

  // string card_number = 3;
  if (this->card_number().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_number().data(), static_cast<int>(this->_internal_card_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.SchedulePayemntRequest.card_number");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_card_number(), target);
  }

  // string expiry = 4;
  if (this->expiry().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_expiry().data(), static_cast<int>(this->_internal_expiry().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.SchedulePayemntRequest.expiry");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_expiry(), target);
  }

  // string birth = 5;
  if (this->birth().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_birth().data(), static_cast<int>(this->_internal_birth().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.SchedulePayemntRequest.birth");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_birth(), target);
  }

  // string pwd_2digit = 6;
  if (this->pwd_2digit().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pwd_2digit().data(), static_cast<int>(this->_internal_pwd_2digit().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.SchedulePayemntRequest.pwd_2digit");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_pwd_2digit(), target);
  }

  // string pg = 7;
  if (this->pg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pg().data(), static_cast<int>(this->_internal_pg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.SchedulePayemntRequest.pg");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_pg(), target);
  }

  // repeated .subscribe.PaymentScheduleParam schedules = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_schedules_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_schedules(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscribe.SchedulePayemntRequest)
  return target;
}

size_t SchedulePayemntRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.SchedulePayemntRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .subscribe.PaymentScheduleParam schedules = 8;
  total_size += 1UL * this->_internal_schedules_size();
  for (const auto& msg : this->schedules_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string customer_uid = 1;
  if (this->customer_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_uid());
  }

  // string card_number = 3;
  if (this->card_number().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_number());
  }

  // string expiry = 4;
  if (this->expiry().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_expiry());
  }

  // string birth = 5;
  if (this->birth().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_birth());
  }

  // string pwd_2digit = 6;
  if (this->pwd_2digit().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pwd_2digit());
  }

  // string pg = 7;
  if (this->pg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pg());
  }

  // int32 checking_amount = 2;
  if (this->checking_amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_checking_amount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SchedulePayemntRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.SchedulePayemntRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SchedulePayemntRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SchedulePayemntRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.SchedulePayemntRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.SchedulePayemntRequest)
    MergeFrom(*source);
  }
}

void SchedulePayemntRequest::MergeFrom(const SchedulePayemntRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.SchedulePayemntRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  schedules_.MergeFrom(from.schedules_);
  if (from.customer_uid().size() > 0) {
    _internal_set_customer_uid(from._internal_customer_uid());
  }
  if (from.card_number().size() > 0) {
    _internal_set_card_number(from._internal_card_number());
  }
  if (from.expiry().size() > 0) {
    _internal_set_expiry(from._internal_expiry());
  }
  if (from.birth().size() > 0) {
    _internal_set_birth(from._internal_birth());
  }
  if (from.pwd_2digit().size() > 0) {
    _internal_set_pwd_2digit(from._internal_pwd_2digit());
  }
  if (from.pg().size() > 0) {
    _internal_set_pg(from._internal_pg());
  }
  if (from.checking_amount() != 0) {
    _internal_set_checking_amount(from._internal_checking_amount());
  }
}

void SchedulePayemntRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.SchedulePayemntRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SchedulePayemntRequest::CopyFrom(const SchedulePayemntRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.SchedulePayemntRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SchedulePayemntRequest::IsInitialized() const {
  return true;
}

void SchedulePayemntRequest::InternalSwap(SchedulePayemntRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  schedules_.InternalSwap(&other->schedules_);
  customer_uid_.Swap(&other->customer_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  card_number_.Swap(&other->card_number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  expiry_.Swap(&other->expiry_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  birth_.Swap(&other->birth_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pwd_2digit_.Swap(&other->pwd_2digit_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pg_.Swap(&other->pg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(checking_amount_, other->checking_amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SchedulePayemntRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SchedulePaymentResponse::_Internal {
 public:
};

SchedulePaymentResponse::SchedulePaymentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  response_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscribe.SchedulePaymentResponse)
}
SchedulePaymentResponse::SchedulePaymentResponse(const SchedulePaymentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      response_(from.response_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:subscribe.SchedulePaymentResponse)
}

void SchedulePaymentResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
code_ = 0;
}

SchedulePaymentResponse::~SchedulePaymentResponse() {
  // @@protoc_insertion_point(destructor:subscribe.SchedulePaymentResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SchedulePaymentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SchedulePaymentResponse::ArenaDtor(void* object) {
  SchedulePaymentResponse* _this = reinterpret_cast< SchedulePaymentResponse* >(object);
  (void)_this;
}
void SchedulePaymentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SchedulePaymentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SchedulePaymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.SchedulePaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  response_.Clear();
  message_.ClearToEmpty();
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SchedulePaymentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.SchedulePaymentResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .subscribe.UnitSchedulePaymentResponse response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_response(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SchedulePaymentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.SchedulePaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.SchedulePaymentResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // repeated .subscribe.UnitSchedulePaymentResponse response = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_response_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_response(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscribe.SchedulePaymentResponse)
  return target;
}

size_t SchedulePaymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.SchedulePaymentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .subscribe.UnitSchedulePaymentResponse response = 3;
  total_size += 1UL * this->_internal_response_size();
  for (const auto& msg : this->response_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SchedulePaymentResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.SchedulePaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SchedulePaymentResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SchedulePaymentResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.SchedulePaymentResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.SchedulePaymentResponse)
    MergeFrom(*source);
  }
}

void SchedulePaymentResponse::MergeFrom(const SchedulePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.SchedulePaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  response_.MergeFrom(from.response_);
  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void SchedulePaymentResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.SchedulePaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SchedulePaymentResponse::CopyFrom(const SchedulePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.SchedulePaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SchedulePaymentResponse::IsInitialized() const {
  return true;
}

void SchedulePaymentResponse::InternalSwap(SchedulePaymentResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  response_.InternalSwap(&other->response_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SchedulePaymentResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnschedulePaymentRequest::_Internal {
 public:
};

UnschedulePaymentRequest::UnschedulePaymentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  merchant_uid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscribe.UnschedulePaymentRequest)
}
UnschedulePaymentRequest::UnschedulePaymentRequest(const UnschedulePaymentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      merchant_uid_(from.merchant_uid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  customer_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_uid().empty()) {
    customer_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_uid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:subscribe.UnschedulePaymentRequest)
}

void UnschedulePaymentRequest::SharedCtor() {
customer_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UnschedulePaymentRequest::~UnschedulePaymentRequest() {
  // @@protoc_insertion_point(destructor:subscribe.UnschedulePaymentRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnschedulePaymentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  customer_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnschedulePaymentRequest::ArenaDtor(void* object) {
  UnschedulePaymentRequest* _this = reinterpret_cast< UnschedulePaymentRequest* >(object);
  (void)_this;
}
void UnschedulePaymentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnschedulePaymentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnschedulePaymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.UnschedulePaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  merchant_uid_.Clear();
  customer_uid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnschedulePaymentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string customer_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_customer_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.UnschedulePaymentRequest.customer_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string merchant_uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_merchant_uid();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.UnschedulePaymentRequest.merchant_uid"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnschedulePaymentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.UnschedulePaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string customer_uid = 1;
  if (this->customer_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_uid().data(), static_cast<int>(this->_internal_customer_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.UnschedulePaymentRequest.customer_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_customer_uid(), target);
  }

  // repeated string merchant_uid = 2;
  for (int i = 0, n = this->_internal_merchant_uid_size(); i < n; i++) {
    const auto& s = this->_internal_merchant_uid(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.UnschedulePaymentRequest.merchant_uid");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscribe.UnschedulePaymentRequest)
  return target;
}

size_t UnschedulePaymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.UnschedulePaymentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string merchant_uid = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(merchant_uid_.size());
  for (int i = 0, n = merchant_uid_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      merchant_uid_.Get(i));
  }

  // string customer_uid = 1;
  if (this->customer_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_uid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnschedulePaymentRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.UnschedulePaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnschedulePaymentRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnschedulePaymentRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.UnschedulePaymentRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.UnschedulePaymentRequest)
    MergeFrom(*source);
  }
}

void UnschedulePaymentRequest::MergeFrom(const UnschedulePaymentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.UnschedulePaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  merchant_uid_.MergeFrom(from.merchant_uid_);
  if (from.customer_uid().size() > 0) {
    _internal_set_customer_uid(from._internal_customer_uid());
  }
}

void UnschedulePaymentRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.UnschedulePaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnschedulePaymentRequest::CopyFrom(const UnschedulePaymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.UnschedulePaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnschedulePaymentRequest::IsInitialized() const {
  return true;
}

void UnschedulePaymentRequest::InternalSwap(UnschedulePaymentRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  merchant_uid_.InternalSwap(&other->merchant_uid_);
  customer_uid_.Swap(&other->customer_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UnschedulePaymentRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnschedulePaymentResponse::_Internal {
 public:
};

UnschedulePaymentResponse::UnschedulePaymentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  response_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscribe.UnschedulePaymentResponse)
}
UnschedulePaymentResponse::UnschedulePaymentResponse(const UnschedulePaymentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      response_(from.response_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:subscribe.UnschedulePaymentResponse)
}

void UnschedulePaymentResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
code_ = 0;
}

UnschedulePaymentResponse::~UnschedulePaymentResponse() {
  // @@protoc_insertion_point(destructor:subscribe.UnschedulePaymentResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnschedulePaymentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnschedulePaymentResponse::ArenaDtor(void* object) {
  UnschedulePaymentResponse* _this = reinterpret_cast< UnschedulePaymentResponse* >(object);
  (void)_this;
}
void UnschedulePaymentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnschedulePaymentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnschedulePaymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.UnschedulePaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  response_.Clear();
  message_.ClearToEmpty();
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnschedulePaymentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.UnschedulePaymentResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .subscribe.UnitSchedulePaymentResponse response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_response(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnschedulePaymentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.UnschedulePaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.UnschedulePaymentResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // repeated .subscribe.UnitSchedulePaymentResponse response = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_response_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_response(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscribe.UnschedulePaymentResponse)
  return target;
}

size_t UnschedulePaymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.UnschedulePaymentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .subscribe.UnitSchedulePaymentResponse response = 3;
  total_size += 1UL * this->_internal_response_size();
  for (const auto& msg : this->response_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnschedulePaymentResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.UnschedulePaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UnschedulePaymentResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnschedulePaymentResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.UnschedulePaymentResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.UnschedulePaymentResponse)
    MergeFrom(*source);
  }
}

void UnschedulePaymentResponse::MergeFrom(const UnschedulePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.UnschedulePaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  response_.MergeFrom(from.response_);
  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void UnschedulePaymentResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.UnschedulePaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnschedulePaymentResponse::CopyFrom(const UnschedulePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.UnschedulePaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnschedulePaymentResponse::IsInitialized() const {
  return true;
}

void UnschedulePaymentResponse::InternalSwap(UnschedulePaymentResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  response_.InternalSwap(&other->response_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnschedulePaymentResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetPaymentScheduleRequest::_Internal {
 public:
};

GetPaymentScheduleRequest::GetPaymentScheduleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscribe.GetPaymentScheduleRequest)
}
GetPaymentScheduleRequest::GetPaymentScheduleRequest(const GetPaymentScheduleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_merchant_uid().empty()) {
    merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_merchant_uid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:subscribe.GetPaymentScheduleRequest)
}

void GetPaymentScheduleRequest::SharedCtor() {
merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPaymentScheduleRequest::~GetPaymentScheduleRequest() {
  // @@protoc_insertion_point(destructor:subscribe.GetPaymentScheduleRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPaymentScheduleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  merchant_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPaymentScheduleRequest::ArenaDtor(void* object) {
  GetPaymentScheduleRequest* _this = reinterpret_cast< GetPaymentScheduleRequest* >(object);
  (void)_this;
}
void GetPaymentScheduleRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPaymentScheduleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPaymentScheduleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.GetPaymentScheduleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  merchant_uid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPaymentScheduleRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string merchant_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_merchant_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.GetPaymentScheduleRequest.merchant_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPaymentScheduleRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.GetPaymentScheduleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string merchant_uid = 1;
  if (this->merchant_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_merchant_uid().data(), static_cast<int>(this->_internal_merchant_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.GetPaymentScheduleRequest.merchant_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_merchant_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscribe.GetPaymentScheduleRequest)
  return target;
}

size_t GetPaymentScheduleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.GetPaymentScheduleRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string merchant_uid = 1;
  if (this->merchant_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_merchant_uid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPaymentScheduleRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.GetPaymentScheduleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPaymentScheduleRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPaymentScheduleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.GetPaymentScheduleRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.GetPaymentScheduleRequest)
    MergeFrom(*source);
  }
}

void GetPaymentScheduleRequest::MergeFrom(const GetPaymentScheduleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.GetPaymentScheduleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.merchant_uid().size() > 0) {
    _internal_set_merchant_uid(from._internal_merchant_uid());
  }
}

void GetPaymentScheduleRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.GetPaymentScheduleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPaymentScheduleRequest::CopyFrom(const GetPaymentScheduleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.GetPaymentScheduleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPaymentScheduleRequest::IsInitialized() const {
  return true;
}

void GetPaymentScheduleRequest::InternalSwap(GetPaymentScheduleRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  merchant_uid_.Swap(&other->merchant_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPaymentScheduleRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetPaymentScheduleResponse::_Internal {
 public:
  static const ::subscribe::UnitSchedulePaymentResponse& response(const GetPaymentScheduleResponse* msg);
};

const ::subscribe::UnitSchedulePaymentResponse&
GetPaymentScheduleResponse::_Internal::response(const GetPaymentScheduleResponse* msg) {
  return *msg->response_;
}
GetPaymentScheduleResponse::GetPaymentScheduleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscribe.GetPaymentScheduleResponse)
}
GetPaymentScheduleResponse::GetPaymentScheduleResponse(const GetPaymentScheduleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  if (from._internal_has_response()) {
    response_ = new ::subscribe::UnitSchedulePaymentResponse(*from.response_);
  } else {
    response_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:subscribe.GetPaymentScheduleResponse)
}

void GetPaymentScheduleResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&response_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&response_)) + sizeof(code_));
}

GetPaymentScheduleResponse::~GetPaymentScheduleResponse() {
  // @@protoc_insertion_point(destructor:subscribe.GetPaymentScheduleResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPaymentScheduleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete response_;
}

void GetPaymentScheduleResponse::ArenaDtor(void* object) {
  GetPaymentScheduleResponse* _this = reinterpret_cast< GetPaymentScheduleResponse* >(object);
  (void)_this;
}
void GetPaymentScheduleResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPaymentScheduleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPaymentScheduleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.GetPaymentScheduleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  if (GetArena() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPaymentScheduleResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.GetPaymentScheduleResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .subscribe.UnitSchedulePaymentResponse response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPaymentScheduleResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.GetPaymentScheduleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.GetPaymentScheduleResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .subscribe.UnitSchedulePaymentResponse response = 3;
  if (this->has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscribe.GetPaymentScheduleResponse)
  return target;
}

size_t GetPaymentScheduleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.GetPaymentScheduleResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .subscribe.UnitSchedulePaymentResponse response = 3;
  if (this->has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPaymentScheduleResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.GetPaymentScheduleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPaymentScheduleResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPaymentScheduleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.GetPaymentScheduleResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.GetPaymentScheduleResponse)
    MergeFrom(*source);
  }
}

void GetPaymentScheduleResponse::MergeFrom(const GetPaymentScheduleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.GetPaymentScheduleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.has_response()) {
    _internal_mutable_response()->::subscribe::UnitSchedulePaymentResponse::MergeFrom(from._internal_response());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GetPaymentScheduleResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.GetPaymentScheduleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPaymentScheduleResponse::CopyFrom(const GetPaymentScheduleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.GetPaymentScheduleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPaymentScheduleResponse::IsInitialized() const {
  return true;
}

void GetPaymentScheduleResponse::InternalSwap(GetPaymentScheduleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetPaymentScheduleResponse, code_)
      + sizeof(GetPaymentScheduleResponse::code_)
      - PROTOBUF_FIELD_OFFSET(GetPaymentScheduleResponse, response_)>(
          reinterpret_cast<char*>(&response_),
          reinterpret_cast<char*>(&other->response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPaymentScheduleResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetPaymentScheduleByCustomerRequest::_Internal {
 public:
};

GetPaymentScheduleByCustomerRequest::GetPaymentScheduleByCustomerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscribe.GetPaymentScheduleByCustomerRequest)
}
GetPaymentScheduleByCustomerRequest::GetPaymentScheduleByCustomerRequest(const GetPaymentScheduleByCustomerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  customer_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_uid().empty()) {
    customer_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_uid(), 
      GetArena());
  }
  schedule_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_schedule_status().empty()) {
    schedule_status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_schedule_status(), 
      GetArena());
  }
  ::memcpy(&page_, &from.page_,
    static_cast<size_t>(reinterpret_cast<char*>(&to_) -
    reinterpret_cast<char*>(&page_)) + sizeof(to_));
  // @@protoc_insertion_point(copy_constructor:subscribe.GetPaymentScheduleByCustomerRequest)
}

void GetPaymentScheduleByCustomerRequest::SharedCtor() {
customer_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
schedule_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&page_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&to_) -
    reinterpret_cast<char*>(&page_)) + sizeof(to_));
}

GetPaymentScheduleByCustomerRequest::~GetPaymentScheduleByCustomerRequest() {
  // @@protoc_insertion_point(destructor:subscribe.GetPaymentScheduleByCustomerRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPaymentScheduleByCustomerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  customer_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  schedule_status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPaymentScheduleByCustomerRequest::ArenaDtor(void* object) {
  GetPaymentScheduleByCustomerRequest* _this = reinterpret_cast< GetPaymentScheduleByCustomerRequest* >(object);
  (void)_this;
}
void GetPaymentScheduleByCustomerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPaymentScheduleByCustomerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPaymentScheduleByCustomerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.GetPaymentScheduleByCustomerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  customer_uid_.ClearToEmpty();
  schedule_status_.ClearToEmpty();
  ::memset(&page_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&to_) -
      reinterpret_cast<char*>(&page_)) + sizeof(to_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPaymentScheduleByCustomerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string customer_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_customer_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.GetPaymentScheduleByCustomerRequest.customer_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          page_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 from = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          from_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 to = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          to_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string schedule_status = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_schedule_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.GetPaymentScheduleByCustomerRequest.schedule_status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPaymentScheduleByCustomerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.GetPaymentScheduleByCustomerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string customer_uid = 1;
  if (this->customer_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_uid().data(), static_cast<int>(this->_internal_customer_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.GetPaymentScheduleByCustomerRequest.customer_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_customer_uid(), target);
  }

  // int32 page = 2;
  if (this->page() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page(), target);
  }

  // int32 from = 3;
  if (this->from() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_from(), target);
  }

  // int32 to = 4;
  if (this->to() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_to(), target);
  }

  // string schedule_status = 5;
  if (this->schedule_status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_schedule_status().data(), static_cast<int>(this->_internal_schedule_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.GetPaymentScheduleByCustomerRequest.schedule_status");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_schedule_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscribe.GetPaymentScheduleByCustomerRequest)
  return target;
}

size_t GetPaymentScheduleByCustomerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.GetPaymentScheduleByCustomerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string customer_uid = 1;
  if (this->customer_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_uid());
  }

  // string schedule_status = 5;
  if (this->schedule_status().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_schedule_status());
  }

  // int32 page = 2;
  if (this->page() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page());
  }

  // int32 from = 3;
  if (this->from() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_from());
  }

  // int32 to = 4;
  if (this->to() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_to());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPaymentScheduleByCustomerRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.GetPaymentScheduleByCustomerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPaymentScheduleByCustomerRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPaymentScheduleByCustomerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.GetPaymentScheduleByCustomerRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.GetPaymentScheduleByCustomerRequest)
    MergeFrom(*source);
  }
}

void GetPaymentScheduleByCustomerRequest::MergeFrom(const GetPaymentScheduleByCustomerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.GetPaymentScheduleByCustomerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.customer_uid().size() > 0) {
    _internal_set_customer_uid(from._internal_customer_uid());
  }
  if (from.schedule_status().size() > 0) {
    _internal_set_schedule_status(from._internal_schedule_status());
  }
  if (from.page() != 0) {
    _internal_set_page(from._internal_page());
  }
  if (from.from() != 0) {
    _internal_set_from(from._internal_from());
  }
  if (from.to() != 0) {
    _internal_set_to(from._internal_to());
  }
}

void GetPaymentScheduleByCustomerRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.GetPaymentScheduleByCustomerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPaymentScheduleByCustomerRequest::CopyFrom(const GetPaymentScheduleByCustomerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.GetPaymentScheduleByCustomerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPaymentScheduleByCustomerRequest::IsInitialized() const {
  return true;
}

void GetPaymentScheduleByCustomerRequest::InternalSwap(GetPaymentScheduleByCustomerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  customer_uid_.Swap(&other->customer_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  schedule_status_.Swap(&other->schedule_status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetPaymentScheduleByCustomerRequest, to_)
      + sizeof(GetPaymentScheduleByCustomerRequest::to_)
      - PROTOBUF_FIELD_OFFSET(GetPaymentScheduleByCustomerRequest, page_)>(
          reinterpret_cast<char*>(&page_),
          reinterpret_cast<char*>(&other->page_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPaymentScheduleByCustomerRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class NestedGetPaymentScheduleByCustomerData::_Internal {
 public:
};

NestedGetPaymentScheduleByCustomerData::NestedGetPaymentScheduleByCustomerData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscribe.NestedGetPaymentScheduleByCustomerData)
}
NestedGetPaymentScheduleByCustomerData::NestedGetPaymentScheduleByCustomerData(const NestedGetPaymentScheduleByCustomerData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      list_(from.list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&total_, &from.total_,
    static_cast<size_t>(reinterpret_cast<char*>(&next_) -
    reinterpret_cast<char*>(&total_)) + sizeof(next_));
  // @@protoc_insertion_point(copy_constructor:subscribe.NestedGetPaymentScheduleByCustomerData)
}

void NestedGetPaymentScheduleByCustomerData::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&total_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&next_) -
    reinterpret_cast<char*>(&total_)) + sizeof(next_));
}

NestedGetPaymentScheduleByCustomerData::~NestedGetPaymentScheduleByCustomerData() {
  // @@protoc_insertion_point(destructor:subscribe.NestedGetPaymentScheduleByCustomerData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void NestedGetPaymentScheduleByCustomerData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void NestedGetPaymentScheduleByCustomerData::ArenaDtor(void* object) {
  NestedGetPaymentScheduleByCustomerData* _this = reinterpret_cast< NestedGetPaymentScheduleByCustomerData* >(object);
  (void)_this;
}
void NestedGetPaymentScheduleByCustomerData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NestedGetPaymentScheduleByCustomerData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NestedGetPaymentScheduleByCustomerData::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.NestedGetPaymentScheduleByCustomerData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  ::memset(&total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&next_) -
      reinterpret_cast<char*>(&total_)) + sizeof(next_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NestedGetPaymentScheduleByCustomerData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 total = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          total_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 previous = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          previous_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 next = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          next_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .subscribe.UnitSchedulePaymentResponse list = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NestedGetPaymentScheduleByCustomerData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.NestedGetPaymentScheduleByCustomerData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 total = 1;
  if (this->total() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_total(), target);
  }

  // int32 previous = 2;
  if (this->previous() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_previous(), target);
  }

  // int32 next = 3;
  if (this->next() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_next(), target);
  }

  // repeated .subscribe.UnitSchedulePaymentResponse list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscribe.NestedGetPaymentScheduleByCustomerData)
  return target;
}

size_t NestedGetPaymentScheduleByCustomerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.NestedGetPaymentScheduleByCustomerData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .subscribe.UnitSchedulePaymentResponse list = 4;
  total_size += 1UL * this->_internal_list_size();
  for (const auto& msg : this->list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 total = 1;
  if (this->total() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_total());
  }

  // int32 previous = 2;
  if (this->previous() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_previous());
  }

  // int32 next = 3;
  if (this->next() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_next());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NestedGetPaymentScheduleByCustomerData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.NestedGetPaymentScheduleByCustomerData)
  GOOGLE_DCHECK_NE(&from, this);
  const NestedGetPaymentScheduleByCustomerData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NestedGetPaymentScheduleByCustomerData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.NestedGetPaymentScheduleByCustomerData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.NestedGetPaymentScheduleByCustomerData)
    MergeFrom(*source);
  }
}

void NestedGetPaymentScheduleByCustomerData::MergeFrom(const NestedGetPaymentScheduleByCustomerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.NestedGetPaymentScheduleByCustomerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
  if (from.total() != 0) {
    _internal_set_total(from._internal_total());
  }
  if (from.previous() != 0) {
    _internal_set_previous(from._internal_previous());
  }
  if (from.next() != 0) {
    _internal_set_next(from._internal_next());
  }
}

void NestedGetPaymentScheduleByCustomerData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.NestedGetPaymentScheduleByCustomerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NestedGetPaymentScheduleByCustomerData::CopyFrom(const NestedGetPaymentScheduleByCustomerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.NestedGetPaymentScheduleByCustomerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NestedGetPaymentScheduleByCustomerData::IsInitialized() const {
  return true;
}

void NestedGetPaymentScheduleByCustomerData::InternalSwap(NestedGetPaymentScheduleByCustomerData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  list_.InternalSwap(&other->list_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NestedGetPaymentScheduleByCustomerData, next_)
      + sizeof(NestedGetPaymentScheduleByCustomerData::next_)
      - PROTOBUF_FIELD_OFFSET(NestedGetPaymentScheduleByCustomerData, total_)>(
          reinterpret_cast<char*>(&total_),
          reinterpret_cast<char*>(&other->total_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NestedGetPaymentScheduleByCustomerData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetPaymentScheduleByCustomerResponse::_Internal {
 public:
  static const ::subscribe::NestedGetPaymentScheduleByCustomerData& response(const GetPaymentScheduleByCustomerResponse* msg);
};

const ::subscribe::NestedGetPaymentScheduleByCustomerData&
GetPaymentScheduleByCustomerResponse::_Internal::response(const GetPaymentScheduleByCustomerResponse* msg) {
  return *msg->response_;
}
GetPaymentScheduleByCustomerResponse::GetPaymentScheduleByCustomerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscribe.GetPaymentScheduleByCustomerResponse)
}
GetPaymentScheduleByCustomerResponse::GetPaymentScheduleByCustomerResponse(const GetPaymentScheduleByCustomerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  if (from._internal_has_response()) {
    response_ = new ::subscribe::NestedGetPaymentScheduleByCustomerData(*from.response_);
  } else {
    response_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:subscribe.GetPaymentScheduleByCustomerResponse)
}

void GetPaymentScheduleByCustomerResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&response_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&response_)) + sizeof(code_));
}

GetPaymentScheduleByCustomerResponse::~GetPaymentScheduleByCustomerResponse() {
  // @@protoc_insertion_point(destructor:subscribe.GetPaymentScheduleByCustomerResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPaymentScheduleByCustomerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete response_;
}

void GetPaymentScheduleByCustomerResponse::ArenaDtor(void* object) {
  GetPaymentScheduleByCustomerResponse* _this = reinterpret_cast< GetPaymentScheduleByCustomerResponse* >(object);
  (void)_this;
}
void GetPaymentScheduleByCustomerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPaymentScheduleByCustomerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPaymentScheduleByCustomerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.GetPaymentScheduleByCustomerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  if (GetArena() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPaymentScheduleByCustomerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "subscribe.GetPaymentScheduleByCustomerResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .subscribe.NestedGetPaymentScheduleByCustomerData response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPaymentScheduleByCustomerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.GetPaymentScheduleByCustomerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "subscribe.GetPaymentScheduleByCustomerResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .subscribe.NestedGetPaymentScheduleByCustomerData response = 3;
  if (this->has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscribe.GetPaymentScheduleByCustomerResponse)
  return target;
}

size_t GetPaymentScheduleByCustomerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.GetPaymentScheduleByCustomerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .subscribe.NestedGetPaymentScheduleByCustomerData response = 3;
  if (this->has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPaymentScheduleByCustomerResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.GetPaymentScheduleByCustomerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPaymentScheduleByCustomerResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPaymentScheduleByCustomerResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.GetPaymentScheduleByCustomerResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.GetPaymentScheduleByCustomerResponse)
    MergeFrom(*source);
  }
}

void GetPaymentScheduleByCustomerResponse::MergeFrom(const GetPaymentScheduleByCustomerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.GetPaymentScheduleByCustomerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.has_response()) {
    _internal_mutable_response()->::subscribe::NestedGetPaymentScheduleByCustomerData::MergeFrom(from._internal_response());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GetPaymentScheduleByCustomerResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.GetPaymentScheduleByCustomerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPaymentScheduleByCustomerResponse::CopyFrom(const GetPaymentScheduleByCustomerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.GetPaymentScheduleByCustomerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPaymentScheduleByCustomerResponse::IsInitialized() const {
  return true;
}

void GetPaymentScheduleByCustomerResponse::InternalSwap(GetPaymentScheduleByCustomerResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetPaymentScheduleByCustomerResponse, code_)
      + sizeof(GetPaymentScheduleByCustomerResponse::code_)
      - PROTOBUF_FIELD_OFFSET(GetPaymentScheduleByCustomerResponse, response_)>(
          reinterpret_cast<char*>(&response_),
          reinterpret_cast<char*>(&other->response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPaymentScheduleByCustomerResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace subscribe
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::subscribe::OnetimePaymentRequest* Arena::CreateMaybeMessage< ::subscribe::OnetimePaymentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::subscribe::OnetimePaymentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::subscribe::OnetimePaymentResponse* Arena::CreateMaybeMessage< ::subscribe::OnetimePaymentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::subscribe::OnetimePaymentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::subscribe::AgainPaymentRequest* Arena::CreateMaybeMessage< ::subscribe::AgainPaymentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::subscribe::AgainPaymentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::subscribe::AgainPaymentResponse* Arena::CreateMaybeMessage< ::subscribe::AgainPaymentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::subscribe::AgainPaymentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::subscribe::PaymentScheduleParam* Arena::CreateMaybeMessage< ::subscribe::PaymentScheduleParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::subscribe::PaymentScheduleParam >(arena);
}
template<> PROTOBUF_NOINLINE ::subscribe::UnitSchedulePaymentResponse* Arena::CreateMaybeMessage< ::subscribe::UnitSchedulePaymentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::subscribe::UnitSchedulePaymentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::subscribe::SchedulePayemntRequest* Arena::CreateMaybeMessage< ::subscribe::SchedulePayemntRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::subscribe::SchedulePayemntRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::subscribe::SchedulePaymentResponse* Arena::CreateMaybeMessage< ::subscribe::SchedulePaymentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::subscribe::SchedulePaymentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::subscribe::UnschedulePaymentRequest* Arena::CreateMaybeMessage< ::subscribe::UnschedulePaymentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::subscribe::UnschedulePaymentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::subscribe::UnschedulePaymentResponse* Arena::CreateMaybeMessage< ::subscribe::UnschedulePaymentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::subscribe::UnschedulePaymentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::subscribe::GetPaymentScheduleRequest* Arena::CreateMaybeMessage< ::subscribe::GetPaymentScheduleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::subscribe::GetPaymentScheduleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::subscribe::GetPaymentScheduleResponse* Arena::CreateMaybeMessage< ::subscribe::GetPaymentScheduleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::subscribe::GetPaymentScheduleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::subscribe::GetPaymentScheduleByCustomerRequest* Arena::CreateMaybeMessage< ::subscribe::GetPaymentScheduleByCustomerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::subscribe::GetPaymentScheduleByCustomerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::subscribe::NestedGetPaymentScheduleByCustomerData* Arena::CreateMaybeMessage< ::subscribe::NestedGetPaymentScheduleByCustomerData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::subscribe::NestedGetPaymentScheduleByCustomerData >(arena);
}
template<> PROTOBUF_NOINLINE ::subscribe::GetPaymentScheduleByCustomerResponse* Arena::CreateMaybeMessage< ::subscribe::GetPaymentScheduleByCustomerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::subscribe::GetPaymentScheduleByCustomerResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
