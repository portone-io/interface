// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1/supplements/link/link.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_v1_2fsupplements_2flink_2flink_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_v1_2fsupplements_2flink_2flink_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015005 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/struct.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_v1_2fsupplements_2flink_2flink_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_v1_2fsupplements_2flink_2flink_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_v1_2fsupplements_2flink_2flink_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_v1_2fsupplements_2flink_2flink_2eproto_metadata_getter(int index);
namespace link_v1 {
class GeneratePaymentURLRequest;
struct GeneratePaymentURLRequestDefaultTypeInternal;
extern GeneratePaymentURLRequestDefaultTypeInternal _GeneratePaymentURLRequest_default_instance_;
class GeneratePaymentURLResponse;
struct GeneratePaymentURLResponseDefaultTypeInternal;
extern GeneratePaymentURLResponseDefaultTypeInternal _GeneratePaymentURLResponse_default_instance_;
class GenerateShortenedURLRequest;
struct GenerateShortenedURLRequestDefaultTypeInternal;
extern GenerateShortenedURLRequestDefaultTypeInternal _GenerateShortenedURLRequest_default_instance_;
class GenerateShortenedURLResponse;
struct GenerateShortenedURLResponseDefaultTypeInternal;
extern GenerateShortenedURLResponseDefaultTypeInternal _GenerateShortenedURLResponse_default_instance_;
class GetContentsRequest;
struct GetContentsRequestDefaultTypeInternal;
extern GetContentsRequestDefaultTypeInternal _GetContentsRequest_default_instance_;
class GetContentsResponse;
struct GetContentsResponseDefaultTypeInternal;
extern GetContentsResponseDefaultTypeInternal _GetContentsResponse_default_instance_;
class StoreContentsRequest;
struct StoreContentsRequestDefaultTypeInternal;
extern StoreContentsRequestDefaultTypeInternal _StoreContentsRequest_default_instance_;
class StoreContentsResponse;
struct StoreContentsResponseDefaultTypeInternal;
extern StoreContentsResponseDefaultTypeInternal _StoreContentsResponse_default_instance_;
}  // namespace link_v1
PROTOBUF_NAMESPACE_OPEN
template<> ::link_v1::GeneratePaymentURLRequest* Arena::CreateMaybeMessage<::link_v1::GeneratePaymentURLRequest>(Arena*);
template<> ::link_v1::GeneratePaymentURLResponse* Arena::CreateMaybeMessage<::link_v1::GeneratePaymentURLResponse>(Arena*);
template<> ::link_v1::GenerateShortenedURLRequest* Arena::CreateMaybeMessage<::link_v1::GenerateShortenedURLRequest>(Arena*);
template<> ::link_v1::GenerateShortenedURLResponse* Arena::CreateMaybeMessage<::link_v1::GenerateShortenedURLResponse>(Arena*);
template<> ::link_v1::GetContentsRequest* Arena::CreateMaybeMessage<::link_v1::GetContentsRequest>(Arena*);
template<> ::link_v1::GetContentsResponse* Arena::CreateMaybeMessage<::link_v1::GetContentsResponse>(Arena*);
template<> ::link_v1::StoreContentsRequest* Arena::CreateMaybeMessage<::link_v1::StoreContentsRequest>(Arena*);
template<> ::link_v1::StoreContentsResponse* Arena::CreateMaybeMessage<::link_v1::StoreContentsResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace link_v1 {

// ===================================================================

class GenerateShortenedURLRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:link_v1.GenerateShortenedURLRequest) */ {
 public:
  inline GenerateShortenedURLRequest() : GenerateShortenedURLRequest(nullptr) {}
  virtual ~GenerateShortenedURLRequest();
  explicit constexpr GenerateShortenedURLRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerateShortenedURLRequest(const GenerateShortenedURLRequest& from);
  GenerateShortenedURLRequest(GenerateShortenedURLRequest&& from) noexcept
    : GenerateShortenedURLRequest() {
    *this = ::std::move(from);
  }

  inline GenerateShortenedURLRequest& operator=(const GenerateShortenedURLRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerateShortenedURLRequest& operator=(GenerateShortenedURLRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerateShortenedURLRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerateShortenedURLRequest* internal_default_instance() {
    return reinterpret_cast<const GenerateShortenedURLRequest*>(
               &_GenerateShortenedURLRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GenerateShortenedURLRequest& a, GenerateShortenedURLRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerateShortenedURLRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerateShortenedURLRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerateShortenedURLRequest* New() const final {
    return CreateMaybeMessage<GenerateShortenedURLRequest>(nullptr);
  }

  GenerateShortenedURLRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerateShortenedURLRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerateShortenedURLRequest& from);
  void MergeFrom(const GenerateShortenedURLRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateShortenedURLRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "link_v1.GenerateShortenedURLRequest";
  }
  protected:
  explicit GenerateShortenedURLRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_v1_2fsupplements_2flink_2flink_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUrlFieldNumber = 1,
    kExpiredAtFieldNumber = 2,
  };
  // string url = 1;
  void clear_url();
  const std::string& url() const;
  void set_url(const std::string& value);
  void set_url(std::string&& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  std::string* mutable_url();
  std::string* release_url();
  void set_allocated_url(std::string* url);
  private:
  const std::string& _internal_url() const;
  void _internal_set_url(const std::string& value);
  std::string* _internal_mutable_url();
  public:

  // int64 expired_at = 2;
  void clear_expired_at();
  ::PROTOBUF_NAMESPACE_ID::int64 expired_at() const;
  void set_expired_at(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_expired_at() const;
  void _internal_set_expired_at(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:link_v1.GenerateShortenedURLRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr url_;
  ::PROTOBUF_NAMESPACE_ID::int64 expired_at_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_v1_2fsupplements_2flink_2flink_2eproto;
};
// -------------------------------------------------------------------

class GenerateShortenedURLResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:link_v1.GenerateShortenedURLResponse) */ {
 public:
  inline GenerateShortenedURLResponse() : GenerateShortenedURLResponse(nullptr) {}
  virtual ~GenerateShortenedURLResponse();
  explicit constexpr GenerateShortenedURLResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerateShortenedURLResponse(const GenerateShortenedURLResponse& from);
  GenerateShortenedURLResponse(GenerateShortenedURLResponse&& from) noexcept
    : GenerateShortenedURLResponse() {
    *this = ::std::move(from);
  }

  inline GenerateShortenedURLResponse& operator=(const GenerateShortenedURLResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerateShortenedURLResponse& operator=(GenerateShortenedURLResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerateShortenedURLResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerateShortenedURLResponse* internal_default_instance() {
    return reinterpret_cast<const GenerateShortenedURLResponse*>(
               &_GenerateShortenedURLResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GenerateShortenedURLResponse& a, GenerateShortenedURLResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerateShortenedURLResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerateShortenedURLResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerateShortenedURLResponse* New() const final {
    return CreateMaybeMessage<GenerateShortenedURLResponse>(nullptr);
  }

  GenerateShortenedURLResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerateShortenedURLResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerateShortenedURLResponse& from);
  void MergeFrom(const GenerateShortenedURLResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateShortenedURLResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "link_v1.GenerateShortenedURLResponse";
  }
  protected:
  explicit GenerateShortenedURLResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_v1_2fsupplements_2flink_2flink_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShortenedUrlFieldNumber = 1,
  };
  // string shortened_url = 1;
  void clear_shortened_url();
  const std::string& shortened_url() const;
  void set_shortened_url(const std::string& value);
  void set_shortened_url(std::string&& value);
  void set_shortened_url(const char* value);
  void set_shortened_url(const char* value, size_t size);
  std::string* mutable_shortened_url();
  std::string* release_shortened_url();
  void set_allocated_shortened_url(std::string* shortened_url);
  private:
  const std::string& _internal_shortened_url() const;
  void _internal_set_shortened_url(const std::string& value);
  std::string* _internal_mutable_shortened_url();
  public:

  // @@protoc_insertion_point(class_scope:link_v1.GenerateShortenedURLResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr shortened_url_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_v1_2fsupplements_2flink_2flink_2eproto;
};
// -------------------------------------------------------------------

class StoreContentsRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:link_v1.StoreContentsRequest) */ {
 public:
  inline StoreContentsRequest() : StoreContentsRequest(nullptr) {}
  virtual ~StoreContentsRequest();
  explicit constexpr StoreContentsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StoreContentsRequest(const StoreContentsRequest& from);
  StoreContentsRequest(StoreContentsRequest&& from) noexcept
    : StoreContentsRequest() {
    *this = ::std::move(from);
  }

  inline StoreContentsRequest& operator=(const StoreContentsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StoreContentsRequest& operator=(StoreContentsRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StoreContentsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StoreContentsRequest* internal_default_instance() {
    return reinterpret_cast<const StoreContentsRequest*>(
               &_StoreContentsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(StoreContentsRequest& a, StoreContentsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StoreContentsRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StoreContentsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StoreContentsRequest* New() const final {
    return CreateMaybeMessage<StoreContentsRequest>(nullptr);
  }

  StoreContentsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StoreContentsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StoreContentsRequest& from);
  void MergeFrom(const StoreContentsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StoreContentsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "link_v1.StoreContentsRequest";
  }
  protected:
  explicit StoreContentsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_v1_2fsupplements_2flink_2flink_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContentsFieldNumber = 1,
  };
  // string contents = 1;
  void clear_contents();
  const std::string& contents() const;
  void set_contents(const std::string& value);
  void set_contents(std::string&& value);
  void set_contents(const char* value);
  void set_contents(const char* value, size_t size);
  std::string* mutable_contents();
  std::string* release_contents();
  void set_allocated_contents(std::string* contents);
  private:
  const std::string& _internal_contents() const;
  void _internal_set_contents(const std::string& value);
  std::string* _internal_mutable_contents();
  public:

  // @@protoc_insertion_point(class_scope:link_v1.StoreContentsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr contents_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_v1_2fsupplements_2flink_2flink_2eproto;
};
// -------------------------------------------------------------------

class StoreContentsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:link_v1.StoreContentsResponse) */ {
 public:
  inline StoreContentsResponse() : StoreContentsResponse(nullptr) {}
  virtual ~StoreContentsResponse();
  explicit constexpr StoreContentsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StoreContentsResponse(const StoreContentsResponse& from);
  StoreContentsResponse(StoreContentsResponse&& from) noexcept
    : StoreContentsResponse() {
    *this = ::std::move(from);
  }

  inline StoreContentsResponse& operator=(const StoreContentsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StoreContentsResponse& operator=(StoreContentsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StoreContentsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StoreContentsResponse* internal_default_instance() {
    return reinterpret_cast<const StoreContentsResponse*>(
               &_StoreContentsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(StoreContentsResponse& a, StoreContentsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StoreContentsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StoreContentsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StoreContentsResponse* New() const final {
    return CreateMaybeMessage<StoreContentsResponse>(nullptr);
  }

  StoreContentsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StoreContentsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StoreContentsResponse& from);
  void MergeFrom(const StoreContentsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StoreContentsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "link_v1.StoreContentsResponse";
  }
  protected:
  explicit StoreContentsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_v1_2fsupplements_2flink_2flink_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuidFieldNumber = 1,
  };
  // string guid = 1;
  void clear_guid();
  const std::string& guid() const;
  void set_guid(const std::string& value);
  void set_guid(std::string&& value);
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  std::string* mutable_guid();
  std::string* release_guid();
  void set_allocated_guid(std::string* guid);
  private:
  const std::string& _internal_guid() const;
  void _internal_set_guid(const std::string& value);
  std::string* _internal_mutable_guid();
  public:

  // @@protoc_insertion_point(class_scope:link_v1.StoreContentsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_v1_2fsupplements_2flink_2flink_2eproto;
};
// -------------------------------------------------------------------

class GetContentsRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:link_v1.GetContentsRequest) */ {
 public:
  inline GetContentsRequest() : GetContentsRequest(nullptr) {}
  virtual ~GetContentsRequest();
  explicit constexpr GetContentsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContentsRequest(const GetContentsRequest& from);
  GetContentsRequest(GetContentsRequest&& from) noexcept
    : GetContentsRequest() {
    *this = ::std::move(from);
  }

  inline GetContentsRequest& operator=(const GetContentsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContentsRequest& operator=(GetContentsRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetContentsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContentsRequest* internal_default_instance() {
    return reinterpret_cast<const GetContentsRequest*>(
               &_GetContentsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GetContentsRequest& a, GetContentsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContentsRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContentsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetContentsRequest* New() const final {
    return CreateMaybeMessage<GetContentsRequest>(nullptr);
  }

  GetContentsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetContentsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetContentsRequest& from);
  void MergeFrom(const GetContentsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContentsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "link_v1.GetContentsRequest";
  }
  protected:
  explicit GetContentsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_v1_2fsupplements_2flink_2flink_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuidFieldNumber = 1,
  };
  // string guid = 1;
  void clear_guid();
  const std::string& guid() const;
  void set_guid(const std::string& value);
  void set_guid(std::string&& value);
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  std::string* mutable_guid();
  std::string* release_guid();
  void set_allocated_guid(std::string* guid);
  private:
  const std::string& _internal_guid() const;
  void _internal_set_guid(const std::string& value);
  std::string* _internal_mutable_guid();
  public:

  // @@protoc_insertion_point(class_scope:link_v1.GetContentsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_v1_2fsupplements_2flink_2flink_2eproto;
};
// -------------------------------------------------------------------

class GetContentsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:link_v1.GetContentsResponse) */ {
 public:
  inline GetContentsResponse() : GetContentsResponse(nullptr) {}
  virtual ~GetContentsResponse();
  explicit constexpr GetContentsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContentsResponse(const GetContentsResponse& from);
  GetContentsResponse(GetContentsResponse&& from) noexcept
    : GetContentsResponse() {
    *this = ::std::move(from);
  }

  inline GetContentsResponse& operator=(const GetContentsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContentsResponse& operator=(GetContentsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetContentsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContentsResponse* internal_default_instance() {
    return reinterpret_cast<const GetContentsResponse*>(
               &_GetContentsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetContentsResponse& a, GetContentsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContentsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContentsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetContentsResponse* New() const final {
    return CreateMaybeMessage<GetContentsResponse>(nullptr);
  }

  GetContentsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetContentsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetContentsResponse& from);
  void MergeFrom(const GetContentsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContentsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "link_v1.GetContentsResponse";
  }
  protected:
  explicit GetContentsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_v1_2fsupplements_2flink_2flink_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContentsFieldNumber = 1,
  };
  // string contents = 1;
  void clear_contents();
  const std::string& contents() const;
  void set_contents(const std::string& value);
  void set_contents(std::string&& value);
  void set_contents(const char* value);
  void set_contents(const char* value, size_t size);
  std::string* mutable_contents();
  std::string* release_contents();
  void set_allocated_contents(std::string* contents);
  private:
  const std::string& _internal_contents() const;
  void _internal_set_contents(const std::string& value);
  std::string* _internal_mutable_contents();
  public:

  // @@protoc_insertion_point(class_scope:link_v1.GetContentsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr contents_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_v1_2fsupplements_2flink_2flink_2eproto;
};
// -------------------------------------------------------------------

class GeneratePaymentURLRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:link_v1.GeneratePaymentURLRequest) */ {
 public:
  inline GeneratePaymentURLRequest() : GeneratePaymentURLRequest(nullptr) {}
  virtual ~GeneratePaymentURLRequest();
  explicit constexpr GeneratePaymentURLRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GeneratePaymentURLRequest(const GeneratePaymentURLRequest& from);
  GeneratePaymentURLRequest(GeneratePaymentURLRequest&& from) noexcept
    : GeneratePaymentURLRequest() {
    *this = ::std::move(from);
  }

  inline GeneratePaymentURLRequest& operator=(const GeneratePaymentURLRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeneratePaymentURLRequest& operator=(GeneratePaymentURLRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GeneratePaymentURLRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GeneratePaymentURLRequest* internal_default_instance() {
    return reinterpret_cast<const GeneratePaymentURLRequest*>(
               &_GeneratePaymentURLRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GeneratePaymentURLRequest& a, GeneratePaymentURLRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GeneratePaymentURLRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GeneratePaymentURLRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GeneratePaymentURLRequest* New() const final {
    return CreateMaybeMessage<GeneratePaymentURLRequest>(nullptr);
  }

  GeneratePaymentURLRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GeneratePaymentURLRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GeneratePaymentURLRequest& from);
  void MergeFrom(const GeneratePaymentURLRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeneratePaymentURLRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "link_v1.GeneratePaymentURLRequest";
  }
  protected:
  explicit GeneratePaymentURLRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_v1_2fsupplements_2flink_2flink_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPaymentInfoFieldNumber = 1,
    kExpiredAtFieldNumber = 2,
  };
  // .google.protobuf.Struct payment_info = 1;
  bool has_payment_info() const;
  private:
  bool _internal_has_payment_info() const;
  public:
  void clear_payment_info();
  const PROTOBUF_NAMESPACE_ID::Struct& payment_info() const;
  PROTOBUF_NAMESPACE_ID::Struct* release_payment_info();
  PROTOBUF_NAMESPACE_ID::Struct* mutable_payment_info();
  void set_allocated_payment_info(PROTOBUF_NAMESPACE_ID::Struct* payment_info);
  private:
  const PROTOBUF_NAMESPACE_ID::Struct& _internal_payment_info() const;
  PROTOBUF_NAMESPACE_ID::Struct* _internal_mutable_payment_info();
  public:
  void unsafe_arena_set_allocated_payment_info(
      PROTOBUF_NAMESPACE_ID::Struct* payment_info);
  PROTOBUF_NAMESPACE_ID::Struct* unsafe_arena_release_payment_info();

  // int64 expired_at = 2;
  void clear_expired_at();
  ::PROTOBUF_NAMESPACE_ID::int64 expired_at() const;
  void set_expired_at(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_expired_at() const;
  void _internal_set_expired_at(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:link_v1.GeneratePaymentURLRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  PROTOBUF_NAMESPACE_ID::Struct* payment_info_;
  ::PROTOBUF_NAMESPACE_ID::int64 expired_at_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_v1_2fsupplements_2flink_2flink_2eproto;
};
// -------------------------------------------------------------------

class GeneratePaymentURLResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:link_v1.GeneratePaymentURLResponse) */ {
 public:
  inline GeneratePaymentURLResponse() : GeneratePaymentURLResponse(nullptr) {}
  virtual ~GeneratePaymentURLResponse();
  explicit constexpr GeneratePaymentURLResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GeneratePaymentURLResponse(const GeneratePaymentURLResponse& from);
  GeneratePaymentURLResponse(GeneratePaymentURLResponse&& from) noexcept
    : GeneratePaymentURLResponse() {
    *this = ::std::move(from);
  }

  inline GeneratePaymentURLResponse& operator=(const GeneratePaymentURLResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeneratePaymentURLResponse& operator=(GeneratePaymentURLResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GeneratePaymentURLResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GeneratePaymentURLResponse* internal_default_instance() {
    return reinterpret_cast<const GeneratePaymentURLResponse*>(
               &_GeneratePaymentURLResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GeneratePaymentURLResponse& a, GeneratePaymentURLResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GeneratePaymentURLResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GeneratePaymentURLResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GeneratePaymentURLResponse* New() const final {
    return CreateMaybeMessage<GeneratePaymentURLResponse>(nullptr);
  }

  GeneratePaymentURLResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GeneratePaymentURLResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GeneratePaymentURLResponse& from);
  void MergeFrom(const GeneratePaymentURLResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeneratePaymentURLResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "link_v1.GeneratePaymentURLResponse";
  }
  protected:
  explicit GeneratePaymentURLResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_v1_2fsupplements_2flink_2flink_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShortenedUrlFieldNumber = 1,
  };
  // string shortened_url = 1;
  void clear_shortened_url();
  const std::string& shortened_url() const;
  void set_shortened_url(const std::string& value);
  void set_shortened_url(std::string&& value);
  void set_shortened_url(const char* value);
  void set_shortened_url(const char* value, size_t size);
  std::string* mutable_shortened_url();
  std::string* release_shortened_url();
  void set_allocated_shortened_url(std::string* shortened_url);
  private:
  const std::string& _internal_shortened_url() const;
  void _internal_set_shortened_url(const std::string& value);
  std::string* _internal_mutable_shortened_url();
  public:

  // @@protoc_insertion_point(class_scope:link_v1.GeneratePaymentURLResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr shortened_url_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_v1_2fsupplements_2flink_2flink_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GenerateShortenedURLRequest

// string url = 1;
inline void GenerateShortenedURLRequest::clear_url() {
  url_.ClearToEmpty();
}
inline const std::string& GenerateShortenedURLRequest::url() const {
  // @@protoc_insertion_point(field_get:link_v1.GenerateShortenedURLRequest.url)
  return _internal_url();
}
inline void GenerateShortenedURLRequest::set_url(const std::string& value) {
  _internal_set_url(value);
  // @@protoc_insertion_point(field_set:link_v1.GenerateShortenedURLRequest.url)
}
inline std::string* GenerateShortenedURLRequest::mutable_url() {
  // @@protoc_insertion_point(field_mutable:link_v1.GenerateShortenedURLRequest.url)
  return _internal_mutable_url();
}
inline const std::string& GenerateShortenedURLRequest::_internal_url() const {
  return url_.Get();
}
inline void GenerateShortenedURLRequest::_internal_set_url(const std::string& value) {
  
  url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GenerateShortenedURLRequest::set_url(std::string&& value) {
  
  url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:link_v1.GenerateShortenedURLRequest.url)
}
inline void GenerateShortenedURLRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:link_v1.GenerateShortenedURLRequest.url)
}
inline void GenerateShortenedURLRequest::set_url(const char* value,
    size_t size) {
  
  url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:link_v1.GenerateShortenedURLRequest.url)
}
inline std::string* GenerateShortenedURLRequest::_internal_mutable_url() {
  
  return url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GenerateShortenedURLRequest::release_url() {
  // @@protoc_insertion_point(field_release:link_v1.GenerateShortenedURLRequest.url)
  return url_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GenerateShortenedURLRequest::set_allocated_url(std::string* url) {
  if (url != nullptr) {
    
  } else {
    
  }
  url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:link_v1.GenerateShortenedURLRequest.url)
}

// int64 expired_at = 2;
inline void GenerateShortenedURLRequest::clear_expired_at() {
  expired_at_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 GenerateShortenedURLRequest::_internal_expired_at() const {
  return expired_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 GenerateShortenedURLRequest::expired_at() const {
  // @@protoc_insertion_point(field_get:link_v1.GenerateShortenedURLRequest.expired_at)
  return _internal_expired_at();
}
inline void GenerateShortenedURLRequest::_internal_set_expired_at(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  expired_at_ = value;
}
inline void GenerateShortenedURLRequest::set_expired_at(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_expired_at(value);
  // @@protoc_insertion_point(field_set:link_v1.GenerateShortenedURLRequest.expired_at)
}

// -------------------------------------------------------------------

// GenerateShortenedURLResponse

// string shortened_url = 1;
inline void GenerateShortenedURLResponse::clear_shortened_url() {
  shortened_url_.ClearToEmpty();
}
inline const std::string& GenerateShortenedURLResponse::shortened_url() const {
  // @@protoc_insertion_point(field_get:link_v1.GenerateShortenedURLResponse.shortened_url)
  return _internal_shortened_url();
}
inline void GenerateShortenedURLResponse::set_shortened_url(const std::string& value) {
  _internal_set_shortened_url(value);
  // @@protoc_insertion_point(field_set:link_v1.GenerateShortenedURLResponse.shortened_url)
}
inline std::string* GenerateShortenedURLResponse::mutable_shortened_url() {
  // @@protoc_insertion_point(field_mutable:link_v1.GenerateShortenedURLResponse.shortened_url)
  return _internal_mutable_shortened_url();
}
inline const std::string& GenerateShortenedURLResponse::_internal_shortened_url() const {
  return shortened_url_.Get();
}
inline void GenerateShortenedURLResponse::_internal_set_shortened_url(const std::string& value) {
  
  shortened_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GenerateShortenedURLResponse::set_shortened_url(std::string&& value) {
  
  shortened_url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:link_v1.GenerateShortenedURLResponse.shortened_url)
}
inline void GenerateShortenedURLResponse::set_shortened_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  shortened_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:link_v1.GenerateShortenedURLResponse.shortened_url)
}
inline void GenerateShortenedURLResponse::set_shortened_url(const char* value,
    size_t size) {
  
  shortened_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:link_v1.GenerateShortenedURLResponse.shortened_url)
}
inline std::string* GenerateShortenedURLResponse::_internal_mutable_shortened_url() {
  
  return shortened_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GenerateShortenedURLResponse::release_shortened_url() {
  // @@protoc_insertion_point(field_release:link_v1.GenerateShortenedURLResponse.shortened_url)
  return shortened_url_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GenerateShortenedURLResponse::set_allocated_shortened_url(std::string* shortened_url) {
  if (shortened_url != nullptr) {
    
  } else {
    
  }
  shortened_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), shortened_url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:link_v1.GenerateShortenedURLResponse.shortened_url)
}

// -------------------------------------------------------------------

// StoreContentsRequest

// string contents = 1;
inline void StoreContentsRequest::clear_contents() {
  contents_.ClearToEmpty();
}
inline const std::string& StoreContentsRequest::contents() const {
  // @@protoc_insertion_point(field_get:link_v1.StoreContentsRequest.contents)
  return _internal_contents();
}
inline void StoreContentsRequest::set_contents(const std::string& value) {
  _internal_set_contents(value);
  // @@protoc_insertion_point(field_set:link_v1.StoreContentsRequest.contents)
}
inline std::string* StoreContentsRequest::mutable_contents() {
  // @@protoc_insertion_point(field_mutable:link_v1.StoreContentsRequest.contents)
  return _internal_mutable_contents();
}
inline const std::string& StoreContentsRequest::_internal_contents() const {
  return contents_.Get();
}
inline void StoreContentsRequest::_internal_set_contents(const std::string& value) {
  
  contents_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void StoreContentsRequest::set_contents(std::string&& value) {
  
  contents_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:link_v1.StoreContentsRequest.contents)
}
inline void StoreContentsRequest::set_contents(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  contents_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:link_v1.StoreContentsRequest.contents)
}
inline void StoreContentsRequest::set_contents(const char* value,
    size_t size) {
  
  contents_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:link_v1.StoreContentsRequest.contents)
}
inline std::string* StoreContentsRequest::_internal_mutable_contents() {
  
  return contents_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* StoreContentsRequest::release_contents() {
  // @@protoc_insertion_point(field_release:link_v1.StoreContentsRequest.contents)
  return contents_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void StoreContentsRequest::set_allocated_contents(std::string* contents) {
  if (contents != nullptr) {
    
  } else {
    
  }
  contents_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), contents,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:link_v1.StoreContentsRequest.contents)
}

// -------------------------------------------------------------------

// StoreContentsResponse

// string guid = 1;
inline void StoreContentsResponse::clear_guid() {
  guid_.ClearToEmpty();
}
inline const std::string& StoreContentsResponse::guid() const {
  // @@protoc_insertion_point(field_get:link_v1.StoreContentsResponse.guid)
  return _internal_guid();
}
inline void StoreContentsResponse::set_guid(const std::string& value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:link_v1.StoreContentsResponse.guid)
}
inline std::string* StoreContentsResponse::mutable_guid() {
  // @@protoc_insertion_point(field_mutable:link_v1.StoreContentsResponse.guid)
  return _internal_mutable_guid();
}
inline const std::string& StoreContentsResponse::_internal_guid() const {
  return guid_.Get();
}
inline void StoreContentsResponse::_internal_set_guid(const std::string& value) {
  
  guid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void StoreContentsResponse::set_guid(std::string&& value) {
  
  guid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:link_v1.StoreContentsResponse.guid)
}
inline void StoreContentsResponse::set_guid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  guid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:link_v1.StoreContentsResponse.guid)
}
inline void StoreContentsResponse::set_guid(const char* value,
    size_t size) {
  
  guid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:link_v1.StoreContentsResponse.guid)
}
inline std::string* StoreContentsResponse::_internal_mutable_guid() {
  
  return guid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* StoreContentsResponse::release_guid() {
  // @@protoc_insertion_point(field_release:link_v1.StoreContentsResponse.guid)
  return guid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void StoreContentsResponse::set_allocated_guid(std::string* guid) {
  if (guid != nullptr) {
    
  } else {
    
  }
  guid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), guid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:link_v1.StoreContentsResponse.guid)
}

// -------------------------------------------------------------------

// GetContentsRequest

// string guid = 1;
inline void GetContentsRequest::clear_guid() {
  guid_.ClearToEmpty();
}
inline const std::string& GetContentsRequest::guid() const {
  // @@protoc_insertion_point(field_get:link_v1.GetContentsRequest.guid)
  return _internal_guid();
}
inline void GetContentsRequest::set_guid(const std::string& value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:link_v1.GetContentsRequest.guid)
}
inline std::string* GetContentsRequest::mutable_guid() {
  // @@protoc_insertion_point(field_mutable:link_v1.GetContentsRequest.guid)
  return _internal_mutable_guid();
}
inline const std::string& GetContentsRequest::_internal_guid() const {
  return guid_.Get();
}
inline void GetContentsRequest::_internal_set_guid(const std::string& value) {
  
  guid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetContentsRequest::set_guid(std::string&& value) {
  
  guid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:link_v1.GetContentsRequest.guid)
}
inline void GetContentsRequest::set_guid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  guid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:link_v1.GetContentsRequest.guid)
}
inline void GetContentsRequest::set_guid(const char* value,
    size_t size) {
  
  guid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:link_v1.GetContentsRequest.guid)
}
inline std::string* GetContentsRequest::_internal_mutable_guid() {
  
  return guid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetContentsRequest::release_guid() {
  // @@protoc_insertion_point(field_release:link_v1.GetContentsRequest.guid)
  return guid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetContentsRequest::set_allocated_guid(std::string* guid) {
  if (guid != nullptr) {
    
  } else {
    
  }
  guid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), guid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:link_v1.GetContentsRequest.guid)
}

// -------------------------------------------------------------------

// GetContentsResponse

// string contents = 1;
inline void GetContentsResponse::clear_contents() {
  contents_.ClearToEmpty();
}
inline const std::string& GetContentsResponse::contents() const {
  // @@protoc_insertion_point(field_get:link_v1.GetContentsResponse.contents)
  return _internal_contents();
}
inline void GetContentsResponse::set_contents(const std::string& value) {
  _internal_set_contents(value);
  // @@protoc_insertion_point(field_set:link_v1.GetContentsResponse.contents)
}
inline std::string* GetContentsResponse::mutable_contents() {
  // @@protoc_insertion_point(field_mutable:link_v1.GetContentsResponse.contents)
  return _internal_mutable_contents();
}
inline const std::string& GetContentsResponse::_internal_contents() const {
  return contents_.Get();
}
inline void GetContentsResponse::_internal_set_contents(const std::string& value) {
  
  contents_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetContentsResponse::set_contents(std::string&& value) {
  
  contents_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:link_v1.GetContentsResponse.contents)
}
inline void GetContentsResponse::set_contents(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  contents_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:link_v1.GetContentsResponse.contents)
}
inline void GetContentsResponse::set_contents(const char* value,
    size_t size) {
  
  contents_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:link_v1.GetContentsResponse.contents)
}
inline std::string* GetContentsResponse::_internal_mutable_contents() {
  
  return contents_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetContentsResponse::release_contents() {
  // @@protoc_insertion_point(field_release:link_v1.GetContentsResponse.contents)
  return contents_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetContentsResponse::set_allocated_contents(std::string* contents) {
  if (contents != nullptr) {
    
  } else {
    
  }
  contents_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), contents,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:link_v1.GetContentsResponse.contents)
}

// -------------------------------------------------------------------

// GeneratePaymentURLRequest

// .google.protobuf.Struct payment_info = 1;
inline bool GeneratePaymentURLRequest::_internal_has_payment_info() const {
  return this != internal_default_instance() && payment_info_ != nullptr;
}
inline bool GeneratePaymentURLRequest::has_payment_info() const {
  return _internal_has_payment_info();
}
inline const PROTOBUF_NAMESPACE_ID::Struct& GeneratePaymentURLRequest::_internal_payment_info() const {
  const PROTOBUF_NAMESPACE_ID::Struct* p = payment_info_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Struct&>(
      PROTOBUF_NAMESPACE_ID::_Struct_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Struct& GeneratePaymentURLRequest::payment_info() const {
  // @@protoc_insertion_point(field_get:link_v1.GeneratePaymentURLRequest.payment_info)
  return _internal_payment_info();
}
inline void GeneratePaymentURLRequest::unsafe_arena_set_allocated_payment_info(
    PROTOBUF_NAMESPACE_ID::Struct* payment_info) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(payment_info_);
  }
  payment_info_ = payment_info;
  if (payment_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:link_v1.GeneratePaymentURLRequest.payment_info)
}
inline PROTOBUF_NAMESPACE_ID::Struct* GeneratePaymentURLRequest::release_payment_info() {
  
  PROTOBUF_NAMESPACE_ID::Struct* temp = payment_info_;
  payment_info_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Struct* GeneratePaymentURLRequest::unsafe_arena_release_payment_info() {
  // @@protoc_insertion_point(field_release:link_v1.GeneratePaymentURLRequest.payment_info)
  
  PROTOBUF_NAMESPACE_ID::Struct* temp = payment_info_;
  payment_info_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Struct* GeneratePaymentURLRequest::_internal_mutable_payment_info() {
  
  if (payment_info_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Struct>(GetArena());
    payment_info_ = p;
  }
  return payment_info_;
}
inline PROTOBUF_NAMESPACE_ID::Struct* GeneratePaymentURLRequest::mutable_payment_info() {
  // @@protoc_insertion_point(field_mutable:link_v1.GeneratePaymentURLRequest.payment_info)
  return _internal_mutable_payment_info();
}
inline void GeneratePaymentURLRequest::set_allocated_payment_info(PROTOBUF_NAMESPACE_ID::Struct* payment_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(payment_info_);
  }
  if (payment_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(payment_info)->GetArena();
    if (message_arena != submessage_arena) {
      payment_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, payment_info, submessage_arena);
    }
    
  } else {
    
  }
  payment_info_ = payment_info;
  // @@protoc_insertion_point(field_set_allocated:link_v1.GeneratePaymentURLRequest.payment_info)
}

// int64 expired_at = 2;
inline void GeneratePaymentURLRequest::clear_expired_at() {
  expired_at_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 GeneratePaymentURLRequest::_internal_expired_at() const {
  return expired_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 GeneratePaymentURLRequest::expired_at() const {
  // @@protoc_insertion_point(field_get:link_v1.GeneratePaymentURLRequest.expired_at)
  return _internal_expired_at();
}
inline void GeneratePaymentURLRequest::_internal_set_expired_at(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  expired_at_ = value;
}
inline void GeneratePaymentURLRequest::set_expired_at(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_expired_at(value);
  // @@protoc_insertion_point(field_set:link_v1.GeneratePaymentURLRequest.expired_at)
}

// -------------------------------------------------------------------

// GeneratePaymentURLResponse

// string shortened_url = 1;
inline void GeneratePaymentURLResponse::clear_shortened_url() {
  shortened_url_.ClearToEmpty();
}
inline const std::string& GeneratePaymentURLResponse::shortened_url() const {
  // @@protoc_insertion_point(field_get:link_v1.GeneratePaymentURLResponse.shortened_url)
  return _internal_shortened_url();
}
inline void GeneratePaymentURLResponse::set_shortened_url(const std::string& value) {
  _internal_set_shortened_url(value);
  // @@protoc_insertion_point(field_set:link_v1.GeneratePaymentURLResponse.shortened_url)
}
inline std::string* GeneratePaymentURLResponse::mutable_shortened_url() {
  // @@protoc_insertion_point(field_mutable:link_v1.GeneratePaymentURLResponse.shortened_url)
  return _internal_mutable_shortened_url();
}
inline const std::string& GeneratePaymentURLResponse::_internal_shortened_url() const {
  return shortened_url_.Get();
}
inline void GeneratePaymentURLResponse::_internal_set_shortened_url(const std::string& value) {
  
  shortened_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GeneratePaymentURLResponse::set_shortened_url(std::string&& value) {
  
  shortened_url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:link_v1.GeneratePaymentURLResponse.shortened_url)
}
inline void GeneratePaymentURLResponse::set_shortened_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  shortened_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:link_v1.GeneratePaymentURLResponse.shortened_url)
}
inline void GeneratePaymentURLResponse::set_shortened_url(const char* value,
    size_t size) {
  
  shortened_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:link_v1.GeneratePaymentURLResponse.shortened_url)
}
inline std::string* GeneratePaymentURLResponse::_internal_mutable_shortened_url() {
  
  return shortened_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GeneratePaymentURLResponse::release_shortened_url() {
  // @@protoc_insertion_point(field_release:link_v1.GeneratePaymentURLResponse.shortened_url)
  return shortened_url_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GeneratePaymentURLResponse::set_allocated_shortened_url(std::string* shortened_url) {
  if (shortened_url != nullptr) {
    
  } else {
    
  }
  shortened_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), shortened_url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:link_v1.GeneratePaymentURLResponse.shortened_url)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace link_v1

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_v1_2fsupplements_2flink_2flink_2eproto
