// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v2/authenticate/authenticate.proto

#include "v2/authenticate/authenticate.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_v2_2fauthenticate_2fauthenticate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TokenData_v2_2fauthenticate_2fauthenticate_2eproto;
namespace authenticate_v2 {
class TokenRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TokenRequest> _instance;
} _TokenRequest_default_instance_;
class TokenDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TokenData> _instance;
} _TokenData_default_instance_;
class TokenResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TokenResponse> _instance;
} _TokenResponse_default_instance_;
class PubKeyRegisterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PubKeyRegisterRequest> _instance;
} _PubKeyRegisterRequest_default_instance_;
class PubKeyRegisterResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PubKeyRegisterResponse> _instance;
} _PubKeyRegisterResponse_default_instance_;
}  // namespace authenticate_v2
static void InitDefaultsscc_info_PubKeyRegisterRequest_v2_2fauthenticate_2fauthenticate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::authenticate_v2::_PubKeyRegisterRequest_default_instance_;
    new (ptr) ::authenticate_v2::PubKeyRegisterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PubKeyRegisterRequest_v2_2fauthenticate_2fauthenticate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PubKeyRegisterRequest_v2_2fauthenticate_2fauthenticate_2eproto}, {}};

static void InitDefaultsscc_info_PubKeyRegisterResponse_v2_2fauthenticate_2fauthenticate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::authenticate_v2::_PubKeyRegisterResponse_default_instance_;
    new (ptr) ::authenticate_v2::PubKeyRegisterResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PubKeyRegisterResponse_v2_2fauthenticate_2fauthenticate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PubKeyRegisterResponse_v2_2fauthenticate_2fauthenticate_2eproto}, {}};

static void InitDefaultsscc_info_TokenData_v2_2fauthenticate_2fauthenticate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::authenticate_v2::_TokenData_default_instance_;
    new (ptr) ::authenticate_v2::TokenData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TokenData_v2_2fauthenticate_2fauthenticate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TokenData_v2_2fauthenticate_2fauthenticate_2eproto}, {}};

static void InitDefaultsscc_info_TokenRequest_v2_2fauthenticate_2fauthenticate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::authenticate_v2::_TokenRequest_default_instance_;
    new (ptr) ::authenticate_v2::TokenRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TokenRequest_v2_2fauthenticate_2fauthenticate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TokenRequest_v2_2fauthenticate_2fauthenticate_2eproto}, {}};

static void InitDefaultsscc_info_TokenResponse_v2_2fauthenticate_2fauthenticate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::authenticate_v2::_TokenResponse_default_instance_;
    new (ptr) ::authenticate_v2::TokenResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TokenResponse_v2_2fauthenticate_2fauthenticate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TokenResponse_v2_2fauthenticate_2fauthenticate_2eproto}, {
      &scc_info_TokenData_v2_2fauthenticate_2fauthenticate_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_v2_2fauthenticate_2fauthenticate_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_v2_2fauthenticate_2fauthenticate_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_v2_2fauthenticate_2fauthenticate_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_v2_2fauthenticate_2fauthenticate_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::authenticate_v2::TokenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::authenticate_v2::TokenRequest, imp_key_),
  PROTOBUF_FIELD_OFFSET(::authenticate_v2::TokenRequest, imp_secret_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::authenticate_v2::TokenData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::authenticate_v2::TokenData, access_token_),
  PROTOBUF_FIELD_OFFSET(::authenticate_v2::TokenData, expired_at_),
  PROTOBUF_FIELD_OFFSET(::authenticate_v2::TokenData, now_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::authenticate_v2::TokenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::authenticate_v2::TokenResponse, code_),
  PROTOBUF_FIELD_OFFSET(::authenticate_v2::TokenResponse, message_),
  PROTOBUF_FIELD_OFFSET(::authenticate_v2::TokenResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::authenticate_v2::PubKeyRegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::authenticate_v2::PubKeyRegisterRequest, imp_key_),
  PROTOBUF_FIELD_OFFSET(::authenticate_v2::PubKeyRegisterRequest, public_key_),
  PROTOBUF_FIELD_OFFSET(::authenticate_v2::PubKeyRegisterRequest, password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::authenticate_v2::PubKeyRegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::authenticate_v2::PubKeyRegisterResponse, code_),
  PROTOBUF_FIELD_OFFSET(::authenticate_v2::PubKeyRegisterResponse, message_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::authenticate_v2::TokenRequest)},
  { 7, -1, sizeof(::authenticate_v2::TokenData)},
  { 15, -1, sizeof(::authenticate_v2::TokenResponse)},
  { 23, -1, sizeof(::authenticate_v2::PubKeyRegisterRequest)},
  { 31, -1, sizeof(::authenticate_v2::PubKeyRegisterResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::authenticate_v2::_TokenRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::authenticate_v2::_TokenData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::authenticate_v2::_TokenResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::authenticate_v2::_PubKeyRegisterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::authenticate_v2::_PubKeyRegisterResponse_default_instance_),
};

const char descriptor_table_protodef_v2_2fauthenticate_2fauthenticate_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"v2/authenticate/authenticate.proto\022\017au"
  "thenticate_v2\032\034google/api/annotations.pr"
  "oto\"3\n\014TokenRequest\022\017\n\007imp_key\030\001 \001(\t\022\022\n\n"
  "imp_secret\030\002 \001(\t\"B\n\tTokenData\022\024\n\014access_"
  "token\030\001 \001(\t\022\022\n\nexpired_at\030\002 \001(\005\022\013\n\003now\030\003"
  " \001(\005\"\\\n\rTokenResponse\022\014\n\004code\030\001 \001(\005\022\017\n\007m"
  "essage\030\002 \001(\t\022,\n\010response\030\003 \001(\0132\032.authent"
  "icate_v2.TokenData\"N\n\025PubKeyRegisterRequ"
  "est\022\017\n\007imp_key\030\001 \001(\t\022\022\n\npublic_key\030\002 \001(\t"
  "\022\020\n\010password\030\003 \001(\t\"7\n\026PubKeyRegisterResp"
  "onse\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t2\245\002\n\023"
  "AuthenticateService\022w\n\nTokenV2RPC\022\035.auth"
  "enticate_v2.TokenRequest\032\036.authenticate_"
  "v2.TokenResponse\"*\202\323\344\223\002$\"\037/api/payments/"
  "v2/users/gettoken:\001*\022\224\001\n\023RegisterPubKeyV"
  "2RPC\022&.authenticate_v2.PubKeyRegisterReq"
  "uest\032\'.authenticate_v2.PubKeyRegisterRes"
  "ponse\",\202\323\344\223\002&\"!/api/payments/v2/users/pu"
  "blic_key:\001*BKZ7github.com/iamport/interf"
  "ace/gen_src/go/v2/authenticate\252\002\017V2.Auth"
  "enticateb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_v2_2fauthenticate_2fauthenticate_2eproto_deps[1] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_v2_2fauthenticate_2fauthenticate_2eproto_sccs[5] = {
  &scc_info_PubKeyRegisterRequest_v2_2fauthenticate_2fauthenticate_2eproto.base,
  &scc_info_PubKeyRegisterResponse_v2_2fauthenticate_2fauthenticate_2eproto.base,
  &scc_info_TokenData_v2_2fauthenticate_2fauthenticate_2eproto.base,
  &scc_info_TokenRequest_v2_2fauthenticate_2fauthenticate_2eproto.base,
  &scc_info_TokenResponse_v2_2fauthenticate_2fauthenticate_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_v2_2fauthenticate_2fauthenticate_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_v2_2fauthenticate_2fauthenticate_2eproto = {
  false, false, descriptor_table_protodef_v2_2fauthenticate_2fauthenticate_2eproto, "v2/authenticate/authenticate.proto", 816,
  &descriptor_table_v2_2fauthenticate_2fauthenticate_2eproto_once, descriptor_table_v2_2fauthenticate_2fauthenticate_2eproto_sccs, descriptor_table_v2_2fauthenticate_2fauthenticate_2eproto_deps, 5, 1,
  schemas, file_default_instances, TableStruct_v2_2fauthenticate_2fauthenticate_2eproto::offsets,
  file_level_metadata_v2_2fauthenticate_2fauthenticate_2eproto, 5, file_level_enum_descriptors_v2_2fauthenticate_2fauthenticate_2eproto, file_level_service_descriptors_v2_2fauthenticate_2fauthenticate_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_v2_2fauthenticate_2fauthenticate_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_v2_2fauthenticate_2fauthenticate_2eproto)), true);
namespace authenticate_v2 {

// ===================================================================

class TokenRequest::_Internal {
 public:
};

TokenRequest::TokenRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:authenticate_v2.TokenRequest)
}
TokenRequest::TokenRequest(const TokenRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  imp_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imp_key().empty()) {
    imp_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imp_key(), 
      GetArena());
  }
  imp_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imp_secret().empty()) {
    imp_secret_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imp_secret(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:authenticate_v2.TokenRequest)
}

void TokenRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TokenRequest_v2_2fauthenticate_2fauthenticate_2eproto.base);
  imp_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  imp_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TokenRequest::~TokenRequest() {
  // @@protoc_insertion_point(destructor:authenticate_v2.TokenRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TokenRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  imp_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  imp_secret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TokenRequest::ArenaDtor(void* object) {
  TokenRequest* _this = reinterpret_cast< TokenRequest* >(object);
  (void)_this;
}
void TokenRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TokenRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TokenRequest& TokenRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TokenRequest_v2_2fauthenticate_2fauthenticate_2eproto.base);
  return *internal_default_instance();
}


void TokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:authenticate_v2.TokenRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imp_key_.ClearToEmpty();
  imp_secret_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TokenRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string imp_key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_imp_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "authenticate_v2.TokenRequest.imp_key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string imp_secret = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_imp_secret();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "authenticate_v2.TokenRequest.imp_secret"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TokenRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:authenticate_v2.TokenRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string imp_key = 1;
  if (this->imp_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_imp_key().data(), static_cast<int>(this->_internal_imp_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "authenticate_v2.TokenRequest.imp_key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_imp_key(), target);
  }

  // string imp_secret = 2;
  if (this->imp_secret().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_imp_secret().data(), static_cast<int>(this->_internal_imp_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "authenticate_v2.TokenRequest.imp_secret");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_imp_secret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:authenticate_v2.TokenRequest)
  return target;
}

size_t TokenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:authenticate_v2.TokenRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string imp_key = 1;
  if (this->imp_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_imp_key());
  }

  // string imp_secret = 2;
  if (this->imp_secret().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_imp_secret());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TokenRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:authenticate_v2.TokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TokenRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TokenRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:authenticate_v2.TokenRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:authenticate_v2.TokenRequest)
    MergeFrom(*source);
  }
}

void TokenRequest::MergeFrom(const TokenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:authenticate_v2.TokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imp_key().size() > 0) {
    _internal_set_imp_key(from._internal_imp_key());
  }
  if (from.imp_secret().size() > 0) {
    _internal_set_imp_secret(from._internal_imp_secret());
  }
}

void TokenRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:authenticate_v2.TokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TokenRequest::CopyFrom(const TokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:authenticate_v2.TokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TokenRequest::IsInitialized() const {
  return true;
}

void TokenRequest::InternalSwap(TokenRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  imp_key_.Swap(&other->imp_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  imp_secret_.Swap(&other->imp_secret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata TokenRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TokenData::_Internal {
 public:
};

TokenData::TokenData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:authenticate_v2.TokenData)
}
TokenData::TokenData(const TokenData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  access_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_access_token().empty()) {
    access_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_access_token(), 
      GetArena());
  }
  ::memcpy(&expired_at_, &from.expired_at_,
    static_cast<size_t>(reinterpret_cast<char*>(&now_) -
    reinterpret_cast<char*>(&expired_at_)) + sizeof(now_));
  // @@protoc_insertion_point(copy_constructor:authenticate_v2.TokenData)
}

void TokenData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TokenData_v2_2fauthenticate_2fauthenticate_2eproto.base);
  access_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&expired_at_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&now_) -
      reinterpret_cast<char*>(&expired_at_)) + sizeof(now_));
}

TokenData::~TokenData() {
  // @@protoc_insertion_point(destructor:authenticate_v2.TokenData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TokenData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  access_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TokenData::ArenaDtor(void* object) {
  TokenData* _this = reinterpret_cast< TokenData* >(object);
  (void)_this;
}
void TokenData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TokenData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TokenData& TokenData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TokenData_v2_2fauthenticate_2fauthenticate_2eproto.base);
  return *internal_default_instance();
}


void TokenData::Clear() {
// @@protoc_insertion_point(message_clear_start:authenticate_v2.TokenData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  access_token_.ClearToEmpty();
  ::memset(&expired_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&now_) -
      reinterpret_cast<char*>(&expired_at_)) + sizeof(now_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TokenData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string access_token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_access_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "authenticate_v2.TokenData.access_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 expired_at = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          expired_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 now = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          now_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TokenData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:authenticate_v2.TokenData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string access_token = 1;
  if (this->access_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_access_token().data(), static_cast<int>(this->_internal_access_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "authenticate_v2.TokenData.access_token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_access_token(), target);
  }

  // int32 expired_at = 2;
  if (this->expired_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_expired_at(), target);
  }

  // int32 now = 3;
  if (this->now() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_now(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:authenticate_v2.TokenData)
  return target;
}

size_t TokenData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:authenticate_v2.TokenData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string access_token = 1;
  if (this->access_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_access_token());
  }

  // int32 expired_at = 2;
  if (this->expired_at() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_expired_at());
  }

  // int32 now = 3;
  if (this->now() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_now());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TokenData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:authenticate_v2.TokenData)
  GOOGLE_DCHECK_NE(&from, this);
  const TokenData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TokenData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:authenticate_v2.TokenData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:authenticate_v2.TokenData)
    MergeFrom(*source);
  }
}

void TokenData::MergeFrom(const TokenData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:authenticate_v2.TokenData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.access_token().size() > 0) {
    _internal_set_access_token(from._internal_access_token());
  }
  if (from.expired_at() != 0) {
    _internal_set_expired_at(from._internal_expired_at());
  }
  if (from.now() != 0) {
    _internal_set_now(from._internal_now());
  }
}

void TokenData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:authenticate_v2.TokenData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TokenData::CopyFrom(const TokenData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:authenticate_v2.TokenData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TokenData::IsInitialized() const {
  return true;
}

void TokenData::InternalSwap(TokenData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  access_token_.Swap(&other->access_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TokenData, now_)
      + sizeof(TokenData::now_)
      - PROTOBUF_FIELD_OFFSET(TokenData, expired_at_)>(
          reinterpret_cast<char*>(&expired_at_),
          reinterpret_cast<char*>(&other->expired_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TokenData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TokenResponse::_Internal {
 public:
  static const ::authenticate_v2::TokenData& response(const TokenResponse* msg);
};

const ::authenticate_v2::TokenData&
TokenResponse::_Internal::response(const TokenResponse* msg) {
  return *msg->response_;
}
TokenResponse::TokenResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:authenticate_v2.TokenResponse)
}
TokenResponse::TokenResponse(const TokenResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  if (from._internal_has_response()) {
    response_ = new ::authenticate_v2::TokenData(*from.response_);
  } else {
    response_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:authenticate_v2.TokenResponse)
}

void TokenResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TokenResponse_v2_2fauthenticate_2fauthenticate_2eproto.base);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&response_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&response_)) + sizeof(code_));
}

TokenResponse::~TokenResponse() {
  // @@protoc_insertion_point(destructor:authenticate_v2.TokenResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TokenResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete response_;
}

void TokenResponse::ArenaDtor(void* object) {
  TokenResponse* _this = reinterpret_cast< TokenResponse* >(object);
  (void)_this;
}
void TokenResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TokenResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TokenResponse& TokenResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TokenResponse_v2_2fauthenticate_2fauthenticate_2eproto.base);
  return *internal_default_instance();
}


void TokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:authenticate_v2.TokenResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  if (GetArena() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TokenResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "authenticate_v2.TokenResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .authenticate_v2.TokenData response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TokenResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:authenticate_v2.TokenResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "authenticate_v2.TokenResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .authenticate_v2.TokenData response = 3;
  if (this->has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:authenticate_v2.TokenResponse)
  return target;
}

size_t TokenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:authenticate_v2.TokenResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .authenticate_v2.TokenData response = 3;
  if (this->has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TokenResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:authenticate_v2.TokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TokenResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TokenResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:authenticate_v2.TokenResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:authenticate_v2.TokenResponse)
    MergeFrom(*source);
  }
}

void TokenResponse::MergeFrom(const TokenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:authenticate_v2.TokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.has_response()) {
    _internal_mutable_response()->::authenticate_v2::TokenData::MergeFrom(from._internal_response());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void TokenResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:authenticate_v2.TokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TokenResponse::CopyFrom(const TokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:authenticate_v2.TokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TokenResponse::IsInitialized() const {
  return true;
}

void TokenResponse::InternalSwap(TokenResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TokenResponse, code_)
      + sizeof(TokenResponse::code_)
      - PROTOBUF_FIELD_OFFSET(TokenResponse, response_)>(
          reinterpret_cast<char*>(&response_),
          reinterpret_cast<char*>(&other->response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TokenResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PubKeyRegisterRequest::_Internal {
 public:
};

PubKeyRegisterRequest::PubKeyRegisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:authenticate_v2.PubKeyRegisterRequest)
}
PubKeyRegisterRequest::PubKeyRegisterRequest(const PubKeyRegisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  imp_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imp_key().empty()) {
    imp_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imp_key(), 
      GetArena());
  }
  public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_public_key().empty()) {
    public_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_public_key(), 
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_password(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:authenticate_v2.PubKeyRegisterRequest)
}

void PubKeyRegisterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PubKeyRegisterRequest_v2_2fauthenticate_2fauthenticate_2eproto.base);
  imp_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PubKeyRegisterRequest::~PubKeyRegisterRequest() {
  // @@protoc_insertion_point(destructor:authenticate_v2.PubKeyRegisterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PubKeyRegisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  imp_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  public_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PubKeyRegisterRequest::ArenaDtor(void* object) {
  PubKeyRegisterRequest* _this = reinterpret_cast< PubKeyRegisterRequest* >(object);
  (void)_this;
}
void PubKeyRegisterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PubKeyRegisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PubKeyRegisterRequest& PubKeyRegisterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PubKeyRegisterRequest_v2_2fauthenticate_2fauthenticate_2eproto.base);
  return *internal_default_instance();
}


void PubKeyRegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:authenticate_v2.PubKeyRegisterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imp_key_.ClearToEmpty();
  public_key_.ClearToEmpty();
  password_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PubKeyRegisterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string imp_key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_imp_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "authenticate_v2.PubKeyRegisterRequest.imp_key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string public_key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_public_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "authenticate_v2.PubKeyRegisterRequest.public_key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "authenticate_v2.PubKeyRegisterRequest.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PubKeyRegisterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:authenticate_v2.PubKeyRegisterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string imp_key = 1;
  if (this->imp_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_imp_key().data(), static_cast<int>(this->_internal_imp_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "authenticate_v2.PubKeyRegisterRequest.imp_key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_imp_key(), target);
  }

  // string public_key = 2;
  if (this->public_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_public_key().data(), static_cast<int>(this->_internal_public_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "authenticate_v2.PubKeyRegisterRequest.public_key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_public_key(), target);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "authenticate_v2.PubKeyRegisterRequest.password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:authenticate_v2.PubKeyRegisterRequest)
  return target;
}

size_t PubKeyRegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:authenticate_v2.PubKeyRegisterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string imp_key = 1;
  if (this->imp_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_imp_key());
  }

  // string public_key = 2;
  if (this->public_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_public_key());
  }

  // string password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PubKeyRegisterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:authenticate_v2.PubKeyRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PubKeyRegisterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PubKeyRegisterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:authenticate_v2.PubKeyRegisterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:authenticate_v2.PubKeyRegisterRequest)
    MergeFrom(*source);
  }
}

void PubKeyRegisterRequest::MergeFrom(const PubKeyRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:authenticate_v2.PubKeyRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imp_key().size() > 0) {
    _internal_set_imp_key(from._internal_imp_key());
  }
  if (from.public_key().size() > 0) {
    _internal_set_public_key(from._internal_public_key());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
}

void PubKeyRegisterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:authenticate_v2.PubKeyRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PubKeyRegisterRequest::CopyFrom(const PubKeyRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:authenticate_v2.PubKeyRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PubKeyRegisterRequest::IsInitialized() const {
  return true;
}

void PubKeyRegisterRequest::InternalSwap(PubKeyRegisterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  imp_key_.Swap(&other->imp_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  public_key_.Swap(&other->public_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PubKeyRegisterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PubKeyRegisterResponse::_Internal {
 public:
};

PubKeyRegisterResponse::PubKeyRegisterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:authenticate_v2.PubKeyRegisterResponse)
}
PubKeyRegisterResponse::PubKeyRegisterResponse(const PubKeyRegisterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:authenticate_v2.PubKeyRegisterResponse)
}

void PubKeyRegisterResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PubKeyRegisterResponse_v2_2fauthenticate_2fauthenticate_2eproto.base);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

PubKeyRegisterResponse::~PubKeyRegisterResponse() {
  // @@protoc_insertion_point(destructor:authenticate_v2.PubKeyRegisterResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PubKeyRegisterResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PubKeyRegisterResponse::ArenaDtor(void* object) {
  PubKeyRegisterResponse* _this = reinterpret_cast< PubKeyRegisterResponse* >(object);
  (void)_this;
}
void PubKeyRegisterResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PubKeyRegisterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PubKeyRegisterResponse& PubKeyRegisterResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PubKeyRegisterResponse_v2_2fauthenticate_2fauthenticate_2eproto.base);
  return *internal_default_instance();
}


void PubKeyRegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:authenticate_v2.PubKeyRegisterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PubKeyRegisterResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "authenticate_v2.PubKeyRegisterResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PubKeyRegisterResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:authenticate_v2.PubKeyRegisterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "authenticate_v2.PubKeyRegisterResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:authenticate_v2.PubKeyRegisterResponse)
  return target;
}

size_t PubKeyRegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:authenticate_v2.PubKeyRegisterResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PubKeyRegisterResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:authenticate_v2.PubKeyRegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PubKeyRegisterResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PubKeyRegisterResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:authenticate_v2.PubKeyRegisterResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:authenticate_v2.PubKeyRegisterResponse)
    MergeFrom(*source);
  }
}

void PubKeyRegisterResponse::MergeFrom(const PubKeyRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:authenticate_v2.PubKeyRegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PubKeyRegisterResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:authenticate_v2.PubKeyRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PubKeyRegisterResponse::CopyFrom(const PubKeyRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:authenticate_v2.PubKeyRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PubKeyRegisterResponse::IsInitialized() const {
  return true;
}

void PubKeyRegisterResponse::InternalSwap(PubKeyRegisterResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PubKeyRegisterResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace authenticate_v2
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::authenticate_v2::TokenRequest* Arena::CreateMaybeMessage< ::authenticate_v2::TokenRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::authenticate_v2::TokenRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::authenticate_v2::TokenData* Arena::CreateMaybeMessage< ::authenticate_v2::TokenData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::authenticate_v2::TokenData >(arena);
}
template<> PROTOBUF_NOINLINE ::authenticate_v2::TokenResponse* Arena::CreateMaybeMessage< ::authenticate_v2::TokenResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::authenticate_v2::TokenResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::authenticate_v2::PubKeyRegisterRequest* Arena::CreateMaybeMessage< ::authenticate_v2::PubKeyRegisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::authenticate_v2::PubKeyRegisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::authenticate_v2::PubKeyRegisterResponse* Arena::CreateMaybeMessage< ::authenticate_v2::PubKeyRegisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::authenticate_v2::PubKeyRegisterResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
