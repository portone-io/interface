// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v2/basis/basis.proto

#include "v2/basis/basis.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_v2_2fbasis_2fbasis_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CancelHistory_v2_2fbasis_2fbasis_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_v2_2fbasis_2fbasis_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Promotion_v2_2fbasis_2fbasis_2eproto;
namespace basis_v2 {
class CancelHistoryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CancelHistory> _instance;
} _CancelHistory_default_instance_;
class PromotionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Promotion> _instance;
} _Promotion_default_instance_;
class UnitTxDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnitTx> _instance;
} _UnitTx_default_instance_;
}  // namespace basis_v2
static void InitDefaultsscc_info_CancelHistory_v2_2fbasis_2fbasis_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::basis_v2::_CancelHistory_default_instance_;
    new (ptr) ::basis_v2::CancelHistory();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CancelHistory_v2_2fbasis_2fbasis_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CancelHistory_v2_2fbasis_2fbasis_2eproto}, {}};

static void InitDefaultsscc_info_Promotion_v2_2fbasis_2fbasis_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::basis_v2::_Promotion_default_instance_;
    new (ptr) ::basis_v2::Promotion();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Promotion_v2_2fbasis_2fbasis_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Promotion_v2_2fbasis_2fbasis_2eproto}, {}};

static void InitDefaultsscc_info_UnitTx_v2_2fbasis_2fbasis_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::basis_v2::_UnitTx_default_instance_;
    new (ptr) ::basis_v2::UnitTx();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_UnitTx_v2_2fbasis_2fbasis_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_UnitTx_v2_2fbasis_2fbasis_2eproto}, {
      &scc_info_CancelHistory_v2_2fbasis_2fbasis_2eproto.base,
      &scc_info_Promotion_v2_2fbasis_2fbasis_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_v2_2fbasis_2fbasis_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_v2_2fbasis_2fbasis_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_v2_2fbasis_2fbasis_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_v2_2fbasis_2fbasis_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::basis_v2::CancelHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::basis_v2::CancelHistory, pg_tid_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::CancelHistory, amount_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::CancelHistory, cancelled_at_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::CancelHistory, reason_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::CancelHistory, receipt_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::basis_v2::Promotion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::basis_v2::Promotion, id_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::Promotion, discount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, amount_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, apply_num_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, bank_code_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, bank_name_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, buyer_addr_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, buyer_email_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, buyer_name_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, buyer_postcode_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, buyer_tel_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, cancel_amount_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, cancel_history_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, cancel_reason_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, cancel_receipt_urls_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, cancelled_at_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, card_code_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, bin_number_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, card_name_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, card_receipe_name_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, card_owner_type_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, card_brand_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, card_credit_type_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, card_number_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, card_installment_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, card_type_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, cash_receipt_issued_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, channel_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, currency_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, custom_data_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, card_uid_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, customer_uid_usage_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, escrow_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, fail_reason_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, failed_at_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, imp_uid_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, merchant_uid_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, order_name_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, paid_at_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, pay_method_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, pg_id_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, pg_provider_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, pg_tid_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, receipt_url_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, started_at_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, status_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, user_agent_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, vbank_code_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, vbank_date_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, vbank_holder_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, vbank_issued_at_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, vbank_name_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, vbank_num_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, customer_email_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, promotion_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, npoint_pay_amount_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, sandbox_),
  PROTOBUF_FIELD_OFFSET(::basis_v2::UnitTx, emb_pg_provider_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::basis_v2::CancelHistory)},
  { 10, -1, sizeof(::basis_v2::Promotion)},
  { 17, -1, sizeof(::basis_v2::UnitTx)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::basis_v2::_CancelHistory_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::basis_v2::_Promotion_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::basis_v2::_UnitTx_default_instance_),
};

const char descriptor_table_protodef_v2_2fbasis_2fbasis_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024v2/basis/basis.proto\022\010basis_v2\"j\n\rCanc"
  "elHistory\022\016\n\006pg_tid\030\001 \001(\t\022\016\n\006amount\030\002 \001("
  "\t\022\024\n\014cancelled_at\030\003 \001(\005\022\016\n\006reason\030\004 \001(\t\022"
  "\023\n\013receipt_url\030\005 \001(\t\")\n\tPromotion\022\n\n\002id\030"
  "\001 \001(\t\022\020\n\010discount\030\002 \001(\005\"\310\t\n\006UnitTx\022\016\n\006am"
  "ount\030\001 \001(\t\022\021\n\tapply_num\030\002 \001(\t\022\021\n\tbank_co"
  "de\030\003 \001(\005\022\021\n\tbank_name\030\004 \001(\t\022\022\n\nbuyer_add"
  "r\030\005 \001(\t\022\023\n\013buyer_email\030\006 \001(\t\022\022\n\nbuyer_na"
  "me\030\007 \001(\t\022\026\n\016buyer_postcode\030\010 \001(\t\022\021\n\tbuye"
  "r_tel\030\t \001(\t\022\025\n\rcancel_amount\030\n \001(\t\022/\n\016ca"
  "ncel_history\030\013 \003(\0132\027.basis_v2.CancelHist"
  "ory\022\025\n\rcancel_reason\030\014 \001(\t\022\033\n\023cancel_rec"
  "eipt_urls\030\r \003(\t\022\024\n\014cancelled_at\030\016 \001(\005\022\021\n"
  "\tcard_code\030\017 \001(\t\022\022\n\nbin_number\030\020 \001(\t\022\021\n\t"
  "card_name\030\021 \001(\t\022\031\n\021card_receipe_name\030\022 \001"
  "(\t\022\027\n\017card_owner_type\030\023 \001(\t\022\022\n\ncard_bran"
  "d\030\024 \001(\t\022\030\n\020card_credit_type\030\025 \001(\t\022\023\n\013car"
  "d_number\030\026 \001(\t\022\030\n\020card_installment\030\027 \001(\005"
  "\022\021\n\tcard_type\030\030 \001(\005\022\033\n\023cash_receipt_issu"
  "ed\030\031 \001(\010\022\017\n\007channel\030\032 \001(\t\022\020\n\010currency\030\033 "
  "\001(\t\022\023\n\013custom_data\030\034 \001(\t\022\020\n\010card_uid\030\035 \001"
  "(\t\022\032\n\022customer_uid_usage\030\036 \001(\t\022\016\n\006escrow"
  "\030\037 \001(\010\022\023\n\013fail_reason\030  \001(\t\022\021\n\tfailed_at"
  "\030! \001(\005\022\017\n\007imp_uid\030\" \001(\t\022\024\n\014merchant_uid\030"
  "# \001(\t\022\022\n\norder_name\030$ \001(\t\022\017\n\007paid_at\030% \001"
  "(\005\022\022\n\npay_method\030& \001(\t\022\r\n\005pg_id\030\' \001(\t\022\023\n"
  "\013pg_provider\030( \001(\t\022\016\n\006pg_tid\030) \001(\t\022\023\n\013re"
  "ceipt_url\030* \001(\t\022\022\n\nstarted_at\030+ \001(\005\022\016\n\006s"
  "tatus\030, \001(\t\022\022\n\nuser_agent\030- \001(\t\022\022\n\nvbank"
  "_code\030. \001(\t\022\022\n\nvbank_date\030/ \001(\005\022\024\n\014vbank"
  "_holder\0300 \001(\t\022\027\n\017vbank_issued_at\0301 \001(\005\022\022"
  "\n\nvbank_name\0302 \001(\t\022\021\n\tvbank_num\0303 \001(\t\022\026\n"
  "\016customer_email\0304 \001(\t\022&\n\tpromotion\0305 \001(\013"
  "2\023.basis_v2.Promotion\022\031\n\021npoint_pay_amou"
  "nt\0306 \001(\t\022\017\n\007sandbox\0307 \001(\010\022\027\n\017emb_pg_prov"
  "ider\0308 \001(\tB=Z0github.com/iamport/interfa"
  "ce/gen_src/go/v2/basis\252\002\010V2.Basisb\006proto"
  "3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_v2_2fbasis_2fbasis_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_v2_2fbasis_2fbasis_2eproto_sccs[3] = {
  &scc_info_CancelHistory_v2_2fbasis_2fbasis_2eproto.base,
  &scc_info_Promotion_v2_2fbasis_2fbasis_2eproto.base,
  &scc_info_UnitTx_v2_2fbasis_2fbasis_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_v2_2fbasis_2fbasis_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_v2_2fbasis_2fbasis_2eproto = {
  false, false, descriptor_table_protodef_v2_2fbasis_2fbasis_2eproto, "v2/basis/basis.proto", 1481,
  &descriptor_table_v2_2fbasis_2fbasis_2eproto_once, descriptor_table_v2_2fbasis_2fbasis_2eproto_sccs, descriptor_table_v2_2fbasis_2fbasis_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_v2_2fbasis_2fbasis_2eproto::offsets,
  file_level_metadata_v2_2fbasis_2fbasis_2eproto, 3, file_level_enum_descriptors_v2_2fbasis_2fbasis_2eproto, file_level_service_descriptors_v2_2fbasis_2fbasis_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_v2_2fbasis_2fbasis_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_v2_2fbasis_2fbasis_2eproto)), true);
namespace basis_v2 {

// ===================================================================

class CancelHistory::_Internal {
 public:
};

CancelHistory::CancelHistory(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:basis_v2.CancelHistory)
}
CancelHistory::CancelHistory(const CancelHistory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pg_tid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pg_tid().empty()) {
    pg_tid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pg_tid(), 
      GetArena());
  }
  amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_amount().empty()) {
    amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_amount(), 
      GetArena());
  }
  reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reason().empty()) {
    reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reason(), 
      GetArena());
  }
  receipt_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_receipt_url().empty()) {
    receipt_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_receipt_url(), 
      GetArena());
  }
  cancelled_at_ = from.cancelled_at_;
  // @@protoc_insertion_point(copy_constructor:basis_v2.CancelHistory)
}

void CancelHistory::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CancelHistory_v2_2fbasis_2fbasis_2eproto.base);
  pg_tid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receipt_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cancelled_at_ = 0;
}

CancelHistory::~CancelHistory() {
  // @@protoc_insertion_point(destructor:basis_v2.CancelHistory)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CancelHistory::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  pg_tid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receipt_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CancelHistory::ArenaDtor(void* object) {
  CancelHistory* _this = reinterpret_cast< CancelHistory* >(object);
  (void)_this;
}
void CancelHistory::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CancelHistory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CancelHistory& CancelHistory::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CancelHistory_v2_2fbasis_2fbasis_2eproto.base);
  return *internal_default_instance();
}


void CancelHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:basis_v2.CancelHistory)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pg_tid_.ClearToEmpty();
  amount_.ClearToEmpty();
  reason_.ClearToEmpty();
  receipt_url_.ClearToEmpty();
  cancelled_at_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelHistory::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string pg_tid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pg_tid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.CancelHistory.pg_tid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.CancelHistory.amount"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cancelled_at = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          cancelled_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string reason = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.CancelHistory.reason"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string receipt_url = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_receipt_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.CancelHistory.receipt_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelHistory::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:basis_v2.CancelHistory)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pg_tid = 1;
  if (this->pg_tid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pg_tid().data(), static_cast<int>(this->_internal_pg_tid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.CancelHistory.pg_tid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pg_tid(), target);
  }

  // string amount = 2;
  if (this->amount().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_amount().data(), static_cast<int>(this->_internal_amount().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.CancelHistory.amount");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_amount(), target);
  }

  // int32 cancelled_at = 3;
  if (this->cancelled_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_cancelled_at(), target);
  }

  // string reason = 4;
  if (this->reason().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.CancelHistory.reason");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_reason(), target);
  }

  // string receipt_url = 5;
  if (this->receipt_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_receipt_url().data(), static_cast<int>(this->_internal_receipt_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.CancelHistory.receipt_url");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_receipt_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:basis_v2.CancelHistory)
  return target;
}

size_t CancelHistory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:basis_v2.CancelHistory)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pg_tid = 1;
  if (this->pg_tid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pg_tid());
  }

  // string amount = 2;
  if (this->amount().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_amount());
  }

  // string reason = 4;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reason());
  }

  // string receipt_url = 5;
  if (this->receipt_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_receipt_url());
  }

  // int32 cancelled_at = 3;
  if (this->cancelled_at() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cancelled_at());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelHistory::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:basis_v2.CancelHistory)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelHistory* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CancelHistory>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:basis_v2.CancelHistory)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:basis_v2.CancelHistory)
    MergeFrom(*source);
  }
}

void CancelHistory::MergeFrom(const CancelHistory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:basis_v2.CancelHistory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pg_tid().size() > 0) {
    _internal_set_pg_tid(from._internal_pg_tid());
  }
  if (from.amount().size() > 0) {
    _internal_set_amount(from._internal_amount());
  }
  if (from.reason().size() > 0) {
    _internal_set_reason(from._internal_reason());
  }
  if (from.receipt_url().size() > 0) {
    _internal_set_receipt_url(from._internal_receipt_url());
  }
  if (from.cancelled_at() != 0) {
    _internal_set_cancelled_at(from._internal_cancelled_at());
  }
}

void CancelHistory::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:basis_v2.CancelHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelHistory::CopyFrom(const CancelHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:basis_v2.CancelHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelHistory::IsInitialized() const {
  return true;
}

void CancelHistory::InternalSwap(CancelHistory* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pg_tid_.Swap(&other->pg_tid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  amount_.Swap(&other->amount_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  reason_.Swap(&other->reason_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  receipt_url_.Swap(&other->receipt_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(cancelled_at_, other->cancelled_at_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelHistory::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Promotion::_Internal {
 public:
};

Promotion::Promotion(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:basis_v2.Promotion)
}
Promotion::Promotion(const Promotion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  discount_ = from.discount_;
  // @@protoc_insertion_point(copy_constructor:basis_v2.Promotion)
}

void Promotion::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Promotion_v2_2fbasis_2fbasis_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  discount_ = 0;
}

Promotion::~Promotion() {
  // @@protoc_insertion_point(destructor:basis_v2.Promotion)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Promotion::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Promotion::ArenaDtor(void* object) {
  Promotion* _this = reinterpret_cast< Promotion* >(object);
  (void)_this;
}
void Promotion::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Promotion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Promotion& Promotion::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Promotion_v2_2fbasis_2fbasis_2eproto.base);
  return *internal_default_instance();
}


void Promotion::Clear() {
// @@protoc_insertion_point(message_clear_start:basis_v2.Promotion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  discount_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Promotion::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.Promotion.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 discount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          discount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Promotion::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:basis_v2.Promotion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.Promotion.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // int32 discount = 2;
  if (this->discount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_discount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:basis_v2.Promotion)
  return target;
}

size_t Promotion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:basis_v2.Promotion)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // int32 discount = 2;
  if (this->discount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_discount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Promotion::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:basis_v2.Promotion)
  GOOGLE_DCHECK_NE(&from, this);
  const Promotion* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Promotion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:basis_v2.Promotion)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:basis_v2.Promotion)
    MergeFrom(*source);
  }
}

void Promotion::MergeFrom(const Promotion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:basis_v2.Promotion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.discount() != 0) {
    _internal_set_discount(from._internal_discount());
  }
}

void Promotion::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:basis_v2.Promotion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Promotion::CopyFrom(const Promotion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:basis_v2.Promotion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Promotion::IsInitialized() const {
  return true;
}

void Promotion::InternalSwap(Promotion* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(discount_, other->discount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Promotion::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnitTx::_Internal {
 public:
  static const ::basis_v2::Promotion& promotion(const UnitTx* msg);
};

const ::basis_v2::Promotion&
UnitTx::_Internal::promotion(const UnitTx* msg) {
  return *msg->promotion_;
}
UnitTx::UnitTx(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  cancel_history_(arena),
  cancel_receipt_urls_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:basis_v2.UnitTx)
}
UnitTx::UnitTx(const UnitTx& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      cancel_history_(from.cancel_history_),
      cancel_receipt_urls_(from.cancel_receipt_urls_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_amount().empty()) {
    amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_amount(), 
      GetArena());
  }
  apply_num_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_apply_num().empty()) {
    apply_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_apply_num(), 
      GetArena());
  }
  bank_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bank_name().empty()) {
    bank_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bank_name(), 
      GetArena());
  }
  buyer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_addr().empty()) {
    buyer_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_addr(), 
      GetArena());
  }
  buyer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_email().empty()) {
    buyer_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_email(), 
      GetArena());
  }
  buyer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_name().empty()) {
    buyer_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_name(), 
      GetArena());
  }
  buyer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_postcode().empty()) {
    buyer_postcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_postcode(), 
      GetArena());
  }
  buyer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_tel().empty()) {
    buyer_tel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_tel(), 
      GetArena());
  }
  cancel_amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cancel_amount().empty()) {
    cancel_amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cancel_amount(), 
      GetArena());
  }
  cancel_reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cancel_reason().empty()) {
    cancel_reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cancel_reason(), 
      GetArena());
  }
  card_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_code().empty()) {
    card_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_code(), 
      GetArena());
  }
  bin_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bin_number().empty()) {
    bin_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bin_number(), 
      GetArena());
  }
  card_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_name().empty()) {
    card_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_name(), 
      GetArena());
  }
  card_receipe_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_receipe_name().empty()) {
    card_receipe_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_receipe_name(), 
      GetArena());
  }
  card_owner_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_owner_type().empty()) {
    card_owner_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_owner_type(), 
      GetArena());
  }
  card_brand_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_brand().empty()) {
    card_brand_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_brand(), 
      GetArena());
  }
  card_credit_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_credit_type().empty()) {
    card_credit_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_credit_type(), 
      GetArena());
  }
  card_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_number().empty()) {
    card_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_number(), 
      GetArena());
  }
  channel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_channel().empty()) {
    channel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_channel(), 
      GetArena());
  }
  currency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_currency().empty()) {
    currency_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_currency(), 
      GetArena());
  }
  custom_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_custom_data().empty()) {
    custom_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_custom_data(), 
      GetArena());
  }
  card_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_uid().empty()) {
    card_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_uid(), 
      GetArena());
  }
  customer_uid_usage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_uid_usage().empty()) {
    customer_uid_usage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_uid_usage(), 
      GetArena());
  }
  fail_reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_fail_reason().empty()) {
    fail_reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_fail_reason(), 
      GetArena());
  }
  imp_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imp_uid().empty()) {
    imp_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imp_uid(), 
      GetArena());
  }
  merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_merchant_uid().empty()) {
    merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_merchant_uid(), 
      GetArena());
  }
  order_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_order_name().empty()) {
    order_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order_name(), 
      GetArena());
  }
  pay_method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pay_method().empty()) {
    pay_method_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pay_method(), 
      GetArena());
  }
  pg_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pg_id().empty()) {
    pg_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pg_id(), 
      GetArena());
  }
  pg_provider_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pg_provider().empty()) {
    pg_provider_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pg_provider(), 
      GetArena());
  }
  pg_tid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pg_tid().empty()) {
    pg_tid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pg_tid(), 
      GetArena());
  }
  receipt_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_receipt_url().empty()) {
    receipt_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_receipt_url(), 
      GetArena());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArena());
  }
  user_agent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_agent().empty()) {
    user_agent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user_agent(), 
      GetArena());
  }
  vbank_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_vbank_code().empty()) {
    vbank_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_vbank_code(), 
      GetArena());
  }
  vbank_holder_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_vbank_holder().empty()) {
    vbank_holder_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_vbank_holder(), 
      GetArena());
  }
  vbank_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_vbank_name().empty()) {
    vbank_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_vbank_name(), 
      GetArena());
  }
  vbank_num_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_vbank_num().empty()) {
    vbank_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_vbank_num(), 
      GetArena());
  }
  customer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_email().empty()) {
    customer_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_email(), 
      GetArena());
  }
  npoint_pay_amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_npoint_pay_amount().empty()) {
    npoint_pay_amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_npoint_pay_amount(), 
      GetArena());
  }
  emb_pg_provider_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_emb_pg_provider().empty()) {
    emb_pg_provider_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_emb_pg_provider(), 
      GetArena());
  }
  if (from._internal_has_promotion()) {
    promotion_ = new ::basis_v2::Promotion(*from.promotion_);
  } else {
    promotion_ = nullptr;
  }
  ::memcpy(&bank_code_, &from.bank_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&vbank_issued_at_) -
    reinterpret_cast<char*>(&bank_code_)) + sizeof(vbank_issued_at_));
  // @@protoc_insertion_point(copy_constructor:basis_v2.UnitTx)
}

void UnitTx::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UnitTx_v2_2fbasis_2fbasis_2eproto.base);
  amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  apply_num_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bank_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cancel_amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cancel_reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bin_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_receipe_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_owner_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_brand_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_credit_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  currency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  custom_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_uid_usage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fail_reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  imp_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pay_method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pg_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pg_provider_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pg_tid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receipt_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_agent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vbank_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vbank_holder_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vbank_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vbank_num_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  npoint_pay_amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  emb_pg_provider_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&promotion_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&vbank_issued_at_) -
      reinterpret_cast<char*>(&promotion_)) + sizeof(vbank_issued_at_));
}

UnitTx::~UnitTx() {
  // @@protoc_insertion_point(destructor:basis_v2.UnitTx)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnitTx::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  apply_num_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bank_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_postcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_tel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cancel_amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cancel_reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bin_number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_receipe_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_owner_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_brand_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_credit_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  currency_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  custom_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_uid_usage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fail_reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  imp_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  merchant_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pay_method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pg_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pg_provider_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pg_tid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receipt_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_agent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vbank_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vbank_holder_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vbank_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vbank_num_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  npoint_pay_amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  emb_pg_provider_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete promotion_;
}

void UnitTx::ArenaDtor(void* object) {
  UnitTx* _this = reinterpret_cast< UnitTx* >(object);
  (void)_this;
}
void UnitTx::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnitTx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnitTx& UnitTx::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnitTx_v2_2fbasis_2fbasis_2eproto.base);
  return *internal_default_instance();
}


void UnitTx::Clear() {
// @@protoc_insertion_point(message_clear_start:basis_v2.UnitTx)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cancel_history_.Clear();
  cancel_receipt_urls_.Clear();
  amount_.ClearToEmpty();
  apply_num_.ClearToEmpty();
  bank_name_.ClearToEmpty();
  buyer_addr_.ClearToEmpty();
  buyer_email_.ClearToEmpty();
  buyer_name_.ClearToEmpty();
  buyer_postcode_.ClearToEmpty();
  buyer_tel_.ClearToEmpty();
  cancel_amount_.ClearToEmpty();
  cancel_reason_.ClearToEmpty();
  card_code_.ClearToEmpty();
  bin_number_.ClearToEmpty();
  card_name_.ClearToEmpty();
  card_receipe_name_.ClearToEmpty();
  card_owner_type_.ClearToEmpty();
  card_brand_.ClearToEmpty();
  card_credit_type_.ClearToEmpty();
  card_number_.ClearToEmpty();
  channel_.ClearToEmpty();
  currency_.ClearToEmpty();
  custom_data_.ClearToEmpty();
  card_uid_.ClearToEmpty();
  customer_uid_usage_.ClearToEmpty();
  fail_reason_.ClearToEmpty();
  imp_uid_.ClearToEmpty();
  merchant_uid_.ClearToEmpty();
  order_name_.ClearToEmpty();
  pay_method_.ClearToEmpty();
  pg_id_.ClearToEmpty();
  pg_provider_.ClearToEmpty();
  pg_tid_.ClearToEmpty();
  receipt_url_.ClearToEmpty();
  status_.ClearToEmpty();
  user_agent_.ClearToEmpty();
  vbank_code_.ClearToEmpty();
  vbank_holder_.ClearToEmpty();
  vbank_name_.ClearToEmpty();
  vbank_num_.ClearToEmpty();
  customer_email_.ClearToEmpty();
  npoint_pay_amount_.ClearToEmpty();
  emb_pg_provider_.ClearToEmpty();
  if (GetArena() == nullptr && promotion_ != nullptr) {
    delete promotion_;
  }
  promotion_ = nullptr;
  ::memset(&bank_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vbank_issued_at_) -
      reinterpret_cast<char*>(&bank_code_)) + sizeof(vbank_issued_at_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnitTx::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string amount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.amount"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string apply_num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_apply_num();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.apply_num"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 bank_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          bank_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string bank_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_bank_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.bank_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_addr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_buyer_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.buyer_addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_email = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_buyer_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.buyer_email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_name = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_buyer_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.buyer_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_postcode = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_buyer_postcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.buyer_postcode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_tel = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_buyer_tel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.buyer_tel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string cancel_amount = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_cancel_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.cancel_amount"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .basis_v2.CancelHistory cancel_history = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_cancel_history(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      // string cancel_reason = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_cancel_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.cancel_reason"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string cancel_receipt_urls = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_cancel_receipt_urls();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.cancel_receipt_urls"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 cancelled_at = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          cancelled_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_code = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_card_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.card_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string bin_number = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_bin_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.bin_number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_name = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          auto str = _internal_mutable_card_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.card_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_receipe_name = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_card_receipe_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.card_receipe_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_owner_type = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          auto str = _internal_mutable_card_owner_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.card_owner_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_brand = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          auto str = _internal_mutable_card_brand();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.card_brand"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_credit_type = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          auto str = _internal_mutable_card_credit_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.card_credit_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_number = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          auto str = _internal_mutable_card_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.card_number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 card_installment = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          card_installment_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 card_type = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          card_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool cash_receipt_issued = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 200)) {
          cash_receipt_issued_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string channel = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          auto str = _internal_mutable_channel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.channel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string currency = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          auto str = _internal_mutable_currency();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.currency"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string custom_data = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          auto str = _internal_mutable_custom_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.custom_data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_uid = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          auto str = _internal_mutable_card_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.card_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_uid_usage = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          auto str = _internal_mutable_customer_uid_usage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.customer_uid_usage"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool escrow = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 248)) {
          escrow_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string fail_reason = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 2)) {
          auto str = _internal_mutable_fail_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.fail_reason"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 failed_at = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          failed_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string imp_uid = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_imp_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.imp_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string merchant_uid = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_merchant_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.merchant_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string order_name = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_order_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.order_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 paid_at = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          paid_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pay_method = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_pay_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.pay_method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pg_id = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_pg_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.pg_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pg_provider = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_pg_provider();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.pg_provider"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pg_tid = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_pg_tid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.pg_tid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string receipt_url = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_receipt_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.receipt_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 started_at = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          started_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user_agent = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_user_agent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.user_agent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string vbank_code = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_vbank_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.vbank_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 vbank_date = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          vbank_date_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string vbank_holder = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_vbank_holder();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.vbank_holder"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 vbank_issued_at = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          vbank_issued_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string vbank_name = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_vbank_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.vbank_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string vbank_num = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          auto str = _internal_mutable_vbank_num();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.vbank_num"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_email = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          auto str = _internal_mutable_customer_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.customer_email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .basis_v2.Promotion promotion = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_promotion(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string npoint_pay_amount = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          auto str = _internal_mutable_npoint_pay_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.npoint_pay_amount"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool sandbox = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          sandbox_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string emb_pg_provider = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          auto str = _internal_mutable_emb_pg_provider();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "basis_v2.UnitTx.emb_pg_provider"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnitTx::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:basis_v2.UnitTx)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string amount = 1;
  if (this->amount().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_amount().data(), static_cast<int>(this->_internal_amount().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.amount");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_amount(), target);
  }

  // string apply_num = 2;
  if (this->apply_num().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_apply_num().data(), static_cast<int>(this->_internal_apply_num().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.apply_num");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_apply_num(), target);
  }

  // int32 bank_code = 3;
  if (this->bank_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_bank_code(), target);
  }

  // string bank_name = 4;
  if (this->bank_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bank_name().data(), static_cast<int>(this->_internal_bank_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.bank_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_bank_name(), target);
  }

  // string buyer_addr = 5;
  if (this->buyer_addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_addr().data(), static_cast<int>(this->_internal_buyer_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.buyer_addr");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_buyer_addr(), target);
  }

  // string buyer_email = 6;
  if (this->buyer_email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_email().data(), static_cast<int>(this->_internal_buyer_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.buyer_email");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_buyer_email(), target);
  }

  // string buyer_name = 7;
  if (this->buyer_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_name().data(), static_cast<int>(this->_internal_buyer_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.buyer_name");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_buyer_name(), target);
  }

  // string buyer_postcode = 8;
  if (this->buyer_postcode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_postcode().data(), static_cast<int>(this->_internal_buyer_postcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.buyer_postcode");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_buyer_postcode(), target);
  }

  // string buyer_tel = 9;
  if (this->buyer_tel().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_tel().data(), static_cast<int>(this->_internal_buyer_tel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.buyer_tel");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_buyer_tel(), target);
  }

  // string cancel_amount = 10;
  if (this->cancel_amount().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cancel_amount().data(), static_cast<int>(this->_internal_cancel_amount().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.cancel_amount");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_cancel_amount(), target);
  }

  // repeated .basis_v2.CancelHistory cancel_history = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_cancel_history_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, this->_internal_cancel_history(i), target, stream);
  }

  // string cancel_reason = 12;
  if (this->cancel_reason().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cancel_reason().data(), static_cast<int>(this->_internal_cancel_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.cancel_reason");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_cancel_reason(), target);
  }

  // repeated string cancel_receipt_urls = 13;
  for (int i = 0, n = this->_internal_cancel_receipt_urls_size(); i < n; i++) {
    const auto& s = this->_internal_cancel_receipt_urls(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.cancel_receipt_urls");
    target = stream->WriteString(13, s, target);
  }

  // int32 cancelled_at = 14;
  if (this->cancelled_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(14, this->_internal_cancelled_at(), target);
  }

  // string card_code = 15;
  if (this->card_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_code().data(), static_cast<int>(this->_internal_card_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.card_code");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_card_code(), target);
  }

  // string bin_number = 16;
  if (this->bin_number().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bin_number().data(), static_cast<int>(this->_internal_bin_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.bin_number");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_bin_number(), target);
  }

  // string card_name = 17;
  if (this->card_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_name().data(), static_cast<int>(this->_internal_card_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.card_name");
    target = stream->WriteStringMaybeAliased(
        17, this->_internal_card_name(), target);
  }

  // string card_receipe_name = 18;
  if (this->card_receipe_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_receipe_name().data(), static_cast<int>(this->_internal_card_receipe_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.card_receipe_name");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_card_receipe_name(), target);
  }

  // string card_owner_type = 19;
  if (this->card_owner_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_owner_type().data(), static_cast<int>(this->_internal_card_owner_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.card_owner_type");
    target = stream->WriteStringMaybeAliased(
        19, this->_internal_card_owner_type(), target);
  }

  // string card_brand = 20;
  if (this->card_brand().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_brand().data(), static_cast<int>(this->_internal_card_brand().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.card_brand");
    target = stream->WriteStringMaybeAliased(
        20, this->_internal_card_brand(), target);
  }

  // string card_credit_type = 21;
  if (this->card_credit_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_credit_type().data(), static_cast<int>(this->_internal_card_credit_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.card_credit_type");
    target = stream->WriteStringMaybeAliased(
        21, this->_internal_card_credit_type(), target);
  }

  // string card_number = 22;
  if (this->card_number().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_number().data(), static_cast<int>(this->_internal_card_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.card_number");
    target = stream->WriteStringMaybeAliased(
        22, this->_internal_card_number(), target);
  }

  // int32 card_installment = 23;
  if (this->card_installment() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(23, this->_internal_card_installment(), target);
  }

  // int32 card_type = 24;
  if (this->card_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(24, this->_internal_card_type(), target);
  }

  // bool cash_receipt_issued = 25;
  if (this->cash_receipt_issued() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(25, this->_internal_cash_receipt_issued(), target);
  }

  // string channel = 26;
  if (this->channel().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_channel().data(), static_cast<int>(this->_internal_channel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.channel");
    target = stream->WriteStringMaybeAliased(
        26, this->_internal_channel(), target);
  }

  // string currency = 27;
  if (this->currency().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_currency().data(), static_cast<int>(this->_internal_currency().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.currency");
    target = stream->WriteStringMaybeAliased(
        27, this->_internal_currency(), target);
  }

  // string custom_data = 28;
  if (this->custom_data().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_custom_data().data(), static_cast<int>(this->_internal_custom_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.custom_data");
    target = stream->WriteStringMaybeAliased(
        28, this->_internal_custom_data(), target);
  }

  // string card_uid = 29;
  if (this->card_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_uid().data(), static_cast<int>(this->_internal_card_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.card_uid");
    target = stream->WriteStringMaybeAliased(
        29, this->_internal_card_uid(), target);
  }

  // string customer_uid_usage = 30;
  if (this->customer_uid_usage().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_uid_usage().data(), static_cast<int>(this->_internal_customer_uid_usage().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.customer_uid_usage");
    target = stream->WriteStringMaybeAliased(
        30, this->_internal_customer_uid_usage(), target);
  }

  // bool escrow = 31;
  if (this->escrow() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(31, this->_internal_escrow(), target);
  }

  // string fail_reason = 32;
  if (this->fail_reason().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fail_reason().data(), static_cast<int>(this->_internal_fail_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.fail_reason");
    target = stream->WriteStringMaybeAliased(
        32, this->_internal_fail_reason(), target);
  }

  // int32 failed_at = 33;
  if (this->failed_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(33, this->_internal_failed_at(), target);
  }

  // string imp_uid = 34;
  if (this->imp_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_imp_uid().data(), static_cast<int>(this->_internal_imp_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.imp_uid");
    target = stream->WriteStringMaybeAliased(
        34, this->_internal_imp_uid(), target);
  }

  // string merchant_uid = 35;
  if (this->merchant_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_merchant_uid().data(), static_cast<int>(this->_internal_merchant_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.merchant_uid");
    target = stream->WriteStringMaybeAliased(
        35, this->_internal_merchant_uid(), target);
  }

  // string order_name = 36;
  if (this->order_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_name().data(), static_cast<int>(this->_internal_order_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.order_name");
    target = stream->WriteStringMaybeAliased(
        36, this->_internal_order_name(), target);
  }

  // int32 paid_at = 37;
  if (this->paid_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(37, this->_internal_paid_at(), target);
  }

  // string pay_method = 38;
  if (this->pay_method().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pay_method().data(), static_cast<int>(this->_internal_pay_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.pay_method");
    target = stream->WriteStringMaybeAliased(
        38, this->_internal_pay_method(), target);
  }

  // string pg_id = 39;
  if (this->pg_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pg_id().data(), static_cast<int>(this->_internal_pg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.pg_id");
    target = stream->WriteStringMaybeAliased(
        39, this->_internal_pg_id(), target);
  }

  // string pg_provider = 40;
  if (this->pg_provider().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pg_provider().data(), static_cast<int>(this->_internal_pg_provider().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.pg_provider");
    target = stream->WriteStringMaybeAliased(
        40, this->_internal_pg_provider(), target);
  }

  // string pg_tid = 41;
  if (this->pg_tid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pg_tid().data(), static_cast<int>(this->_internal_pg_tid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.pg_tid");
    target = stream->WriteStringMaybeAliased(
        41, this->_internal_pg_tid(), target);
  }

  // string receipt_url = 42;
  if (this->receipt_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_receipt_url().data(), static_cast<int>(this->_internal_receipt_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.receipt_url");
    target = stream->WriteStringMaybeAliased(
        42, this->_internal_receipt_url(), target);
  }

  // int32 started_at = 43;
  if (this->started_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(43, this->_internal_started_at(), target);
  }

  // string status = 44;
  if (this->status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.status");
    target = stream->WriteStringMaybeAliased(
        44, this->_internal_status(), target);
  }

  // string user_agent = 45;
  if (this->user_agent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_agent().data(), static_cast<int>(this->_internal_user_agent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.user_agent");
    target = stream->WriteStringMaybeAliased(
        45, this->_internal_user_agent(), target);
  }

  // string vbank_code = 46;
  if (this->vbank_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vbank_code().data(), static_cast<int>(this->_internal_vbank_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.vbank_code");
    target = stream->WriteStringMaybeAliased(
        46, this->_internal_vbank_code(), target);
  }

  // int32 vbank_date = 47;
  if (this->vbank_date() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(47, this->_internal_vbank_date(), target);
  }

  // string vbank_holder = 48;
  if (this->vbank_holder().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vbank_holder().data(), static_cast<int>(this->_internal_vbank_holder().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.vbank_holder");
    target = stream->WriteStringMaybeAliased(
        48, this->_internal_vbank_holder(), target);
  }

  // int32 vbank_issued_at = 49;
  if (this->vbank_issued_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(49, this->_internal_vbank_issued_at(), target);
  }

  // string vbank_name = 50;
  if (this->vbank_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vbank_name().data(), static_cast<int>(this->_internal_vbank_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.vbank_name");
    target = stream->WriteStringMaybeAliased(
        50, this->_internal_vbank_name(), target);
  }

  // string vbank_num = 51;
  if (this->vbank_num().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vbank_num().data(), static_cast<int>(this->_internal_vbank_num().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.vbank_num");
    target = stream->WriteStringMaybeAliased(
        51, this->_internal_vbank_num(), target);
  }

  // string customer_email = 52;
  if (this->customer_email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_email().data(), static_cast<int>(this->_internal_customer_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.customer_email");
    target = stream->WriteStringMaybeAliased(
        52, this->_internal_customer_email(), target);
  }

  // .basis_v2.Promotion promotion = 53;
  if (this->has_promotion()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        53, _Internal::promotion(this), target, stream);
  }

  // string npoint_pay_amount = 54;
  if (this->npoint_pay_amount().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_npoint_pay_amount().data(), static_cast<int>(this->_internal_npoint_pay_amount().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.npoint_pay_amount");
    target = stream->WriteStringMaybeAliased(
        54, this->_internal_npoint_pay_amount(), target);
  }

  // bool sandbox = 55;
  if (this->sandbox() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(55, this->_internal_sandbox(), target);
  }

  // string emb_pg_provider = 56;
  if (this->emb_pg_provider().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_emb_pg_provider().data(), static_cast<int>(this->_internal_emb_pg_provider().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "basis_v2.UnitTx.emb_pg_provider");
    target = stream->WriteStringMaybeAliased(
        56, this->_internal_emb_pg_provider(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:basis_v2.UnitTx)
  return target;
}

size_t UnitTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:basis_v2.UnitTx)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .basis_v2.CancelHistory cancel_history = 11;
  total_size += 1UL * this->_internal_cancel_history_size();
  for (const auto& msg : this->cancel_history_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string cancel_receipt_urls = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(cancel_receipt_urls_.size());
  for (int i = 0, n = cancel_receipt_urls_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      cancel_receipt_urls_.Get(i));
  }

  // string amount = 1;
  if (this->amount().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_amount());
  }

  // string apply_num = 2;
  if (this->apply_num().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_apply_num());
  }

  // string bank_name = 4;
  if (this->bank_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bank_name());
  }

  // string buyer_addr = 5;
  if (this->buyer_addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_addr());
  }

  // string buyer_email = 6;
  if (this->buyer_email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_email());
  }

  // string buyer_name = 7;
  if (this->buyer_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_name());
  }

  // string buyer_postcode = 8;
  if (this->buyer_postcode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_postcode());
  }

  // string buyer_tel = 9;
  if (this->buyer_tel().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_tel());
  }

  // string cancel_amount = 10;
  if (this->cancel_amount().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cancel_amount());
  }

  // string cancel_reason = 12;
  if (this->cancel_reason().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cancel_reason());
  }

  // string card_code = 15;
  if (this->card_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_code());
  }

  // string bin_number = 16;
  if (this->bin_number().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bin_number());
  }

  // string card_name = 17;
  if (this->card_name().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_name());
  }

  // string card_receipe_name = 18;
  if (this->card_receipe_name().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_receipe_name());
  }

  // string card_owner_type = 19;
  if (this->card_owner_type().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_owner_type());
  }

  // string card_brand = 20;
  if (this->card_brand().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_brand());
  }

  // string card_credit_type = 21;
  if (this->card_credit_type().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_credit_type());
  }

  // string card_number = 22;
  if (this->card_number().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_number());
  }

  // string channel = 26;
  if (this->channel().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_channel());
  }

  // string currency = 27;
  if (this->currency().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_currency());
  }

  // string custom_data = 28;
  if (this->custom_data().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_custom_data());
  }

  // string card_uid = 29;
  if (this->card_uid().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_uid());
  }

  // string customer_uid_usage = 30;
  if (this->customer_uid_usage().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_uid_usage());
  }

  // string fail_reason = 32;
  if (this->fail_reason().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fail_reason());
  }

  // string imp_uid = 34;
  if (this->imp_uid().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_imp_uid());
  }

  // string merchant_uid = 35;
  if (this->merchant_uid().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_merchant_uid());
  }

  // string order_name = 36;
  if (this->order_name().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_name());
  }

  // string pay_method = 38;
  if (this->pay_method().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pay_method());
  }

  // string pg_id = 39;
  if (this->pg_id().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pg_id());
  }

  // string pg_provider = 40;
  if (this->pg_provider().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pg_provider());
  }

  // string pg_tid = 41;
  if (this->pg_tid().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pg_tid());
  }

  // string receipt_url = 42;
  if (this->receipt_url().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_receipt_url());
  }

  // string status = 44;
  if (this->status().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string user_agent = 45;
  if (this->user_agent().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_agent());
  }

  // string vbank_code = 46;
  if (this->vbank_code().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vbank_code());
  }

  // string vbank_holder = 48;
  if (this->vbank_holder().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vbank_holder());
  }

  // string vbank_name = 50;
  if (this->vbank_name().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vbank_name());
  }

  // string vbank_num = 51;
  if (this->vbank_num().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vbank_num());
  }

  // string customer_email = 52;
  if (this->customer_email().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_email());
  }

  // string npoint_pay_amount = 54;
  if (this->npoint_pay_amount().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_npoint_pay_amount());
  }

  // string emb_pg_provider = 56;
  if (this->emb_pg_provider().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_emb_pg_provider());
  }

  // .basis_v2.Promotion promotion = 53;
  if (this->has_promotion()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *promotion_);
  }

  // int32 bank_code = 3;
  if (this->bank_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_bank_code());
  }

  // int32 cancelled_at = 14;
  if (this->cancelled_at() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cancelled_at());
  }

  // int32 card_installment = 23;
  if (this->card_installment() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_card_installment());
  }

  // int32 card_type = 24;
  if (this->card_type() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_card_type());
  }

  // int32 failed_at = 33;
  if (this->failed_at() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_failed_at());
  }

  // int32 paid_at = 37;
  if (this->paid_at() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_paid_at());
  }

  // bool cash_receipt_issued = 25;
  if (this->cash_receipt_issued() != 0) {
    total_size += 2 + 1;
  }

  // bool escrow = 31;
  if (this->escrow() != 0) {
    total_size += 2 + 1;
  }

  // bool sandbox = 55;
  if (this->sandbox() != 0) {
    total_size += 2 + 1;
  }

  // int32 started_at = 43;
  if (this->started_at() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_started_at());
  }

  // int32 vbank_date = 47;
  if (this->vbank_date() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_vbank_date());
  }

  // int32 vbank_issued_at = 49;
  if (this->vbank_issued_at() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_vbank_issued_at());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnitTx::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:basis_v2.UnitTx)
  GOOGLE_DCHECK_NE(&from, this);
  const UnitTx* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnitTx>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:basis_v2.UnitTx)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:basis_v2.UnitTx)
    MergeFrom(*source);
  }
}

void UnitTx::MergeFrom(const UnitTx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:basis_v2.UnitTx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cancel_history_.MergeFrom(from.cancel_history_);
  cancel_receipt_urls_.MergeFrom(from.cancel_receipt_urls_);
  if (from.amount().size() > 0) {
    _internal_set_amount(from._internal_amount());
  }
  if (from.apply_num().size() > 0) {
    _internal_set_apply_num(from._internal_apply_num());
  }
  if (from.bank_name().size() > 0) {
    _internal_set_bank_name(from._internal_bank_name());
  }
  if (from.buyer_addr().size() > 0) {
    _internal_set_buyer_addr(from._internal_buyer_addr());
  }
  if (from.buyer_email().size() > 0) {
    _internal_set_buyer_email(from._internal_buyer_email());
  }
  if (from.buyer_name().size() > 0) {
    _internal_set_buyer_name(from._internal_buyer_name());
  }
  if (from.buyer_postcode().size() > 0) {
    _internal_set_buyer_postcode(from._internal_buyer_postcode());
  }
  if (from.buyer_tel().size() > 0) {
    _internal_set_buyer_tel(from._internal_buyer_tel());
  }
  if (from.cancel_amount().size() > 0) {
    _internal_set_cancel_amount(from._internal_cancel_amount());
  }
  if (from.cancel_reason().size() > 0) {
    _internal_set_cancel_reason(from._internal_cancel_reason());
  }
  if (from.card_code().size() > 0) {
    _internal_set_card_code(from._internal_card_code());
  }
  if (from.bin_number().size() > 0) {
    _internal_set_bin_number(from._internal_bin_number());
  }
  if (from.card_name().size() > 0) {
    _internal_set_card_name(from._internal_card_name());
  }
  if (from.card_receipe_name().size() > 0) {
    _internal_set_card_receipe_name(from._internal_card_receipe_name());
  }
  if (from.card_owner_type().size() > 0) {
    _internal_set_card_owner_type(from._internal_card_owner_type());
  }
  if (from.card_brand().size() > 0) {
    _internal_set_card_brand(from._internal_card_brand());
  }
  if (from.card_credit_type().size() > 0) {
    _internal_set_card_credit_type(from._internal_card_credit_type());
  }
  if (from.card_number().size() > 0) {
    _internal_set_card_number(from._internal_card_number());
  }
  if (from.channel().size() > 0) {
    _internal_set_channel(from._internal_channel());
  }
  if (from.currency().size() > 0) {
    _internal_set_currency(from._internal_currency());
  }
  if (from.custom_data().size() > 0) {
    _internal_set_custom_data(from._internal_custom_data());
  }
  if (from.card_uid().size() > 0) {
    _internal_set_card_uid(from._internal_card_uid());
  }
  if (from.customer_uid_usage().size() > 0) {
    _internal_set_customer_uid_usage(from._internal_customer_uid_usage());
  }
  if (from.fail_reason().size() > 0) {
    _internal_set_fail_reason(from._internal_fail_reason());
  }
  if (from.imp_uid().size() > 0) {
    _internal_set_imp_uid(from._internal_imp_uid());
  }
  if (from.merchant_uid().size() > 0) {
    _internal_set_merchant_uid(from._internal_merchant_uid());
  }
  if (from.order_name().size() > 0) {
    _internal_set_order_name(from._internal_order_name());
  }
  if (from.pay_method().size() > 0) {
    _internal_set_pay_method(from._internal_pay_method());
  }
  if (from.pg_id().size() > 0) {
    _internal_set_pg_id(from._internal_pg_id());
  }
  if (from.pg_provider().size() > 0) {
    _internal_set_pg_provider(from._internal_pg_provider());
  }
  if (from.pg_tid().size() > 0) {
    _internal_set_pg_tid(from._internal_pg_tid());
  }
  if (from.receipt_url().size() > 0) {
    _internal_set_receipt_url(from._internal_receipt_url());
  }
  if (from.status().size() > 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.user_agent().size() > 0) {
    _internal_set_user_agent(from._internal_user_agent());
  }
  if (from.vbank_code().size() > 0) {
    _internal_set_vbank_code(from._internal_vbank_code());
  }
  if (from.vbank_holder().size() > 0) {
    _internal_set_vbank_holder(from._internal_vbank_holder());
  }
  if (from.vbank_name().size() > 0) {
    _internal_set_vbank_name(from._internal_vbank_name());
  }
  if (from.vbank_num().size() > 0) {
    _internal_set_vbank_num(from._internal_vbank_num());
  }
  if (from.customer_email().size() > 0) {
    _internal_set_customer_email(from._internal_customer_email());
  }
  if (from.npoint_pay_amount().size() > 0) {
    _internal_set_npoint_pay_amount(from._internal_npoint_pay_amount());
  }
  if (from.emb_pg_provider().size() > 0) {
    _internal_set_emb_pg_provider(from._internal_emb_pg_provider());
  }
  if (from.has_promotion()) {
    _internal_mutable_promotion()->::basis_v2::Promotion::MergeFrom(from._internal_promotion());
  }
  if (from.bank_code() != 0) {
    _internal_set_bank_code(from._internal_bank_code());
  }
  if (from.cancelled_at() != 0) {
    _internal_set_cancelled_at(from._internal_cancelled_at());
  }
  if (from.card_installment() != 0) {
    _internal_set_card_installment(from._internal_card_installment());
  }
  if (from.card_type() != 0) {
    _internal_set_card_type(from._internal_card_type());
  }
  if (from.failed_at() != 0) {
    _internal_set_failed_at(from._internal_failed_at());
  }
  if (from.paid_at() != 0) {
    _internal_set_paid_at(from._internal_paid_at());
  }
  if (from.cash_receipt_issued() != 0) {
    _internal_set_cash_receipt_issued(from._internal_cash_receipt_issued());
  }
  if (from.escrow() != 0) {
    _internal_set_escrow(from._internal_escrow());
  }
  if (from.sandbox() != 0) {
    _internal_set_sandbox(from._internal_sandbox());
  }
  if (from.started_at() != 0) {
    _internal_set_started_at(from._internal_started_at());
  }
  if (from.vbank_date() != 0) {
    _internal_set_vbank_date(from._internal_vbank_date());
  }
  if (from.vbank_issued_at() != 0) {
    _internal_set_vbank_issued_at(from._internal_vbank_issued_at());
  }
}

void UnitTx::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:basis_v2.UnitTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitTx::CopyFrom(const UnitTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:basis_v2.UnitTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitTx::IsInitialized() const {
  return true;
}

void UnitTx::InternalSwap(UnitTx* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cancel_history_.InternalSwap(&other->cancel_history_);
  cancel_receipt_urls_.InternalSwap(&other->cancel_receipt_urls_);
  amount_.Swap(&other->amount_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  apply_num_.Swap(&other->apply_num_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  bank_name_.Swap(&other->bank_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_addr_.Swap(&other->buyer_addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_email_.Swap(&other->buyer_email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_name_.Swap(&other->buyer_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_postcode_.Swap(&other->buyer_postcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_tel_.Swap(&other->buyer_tel_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cancel_amount_.Swap(&other->cancel_amount_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cancel_reason_.Swap(&other->cancel_reason_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  card_code_.Swap(&other->card_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  bin_number_.Swap(&other->bin_number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  card_name_.Swap(&other->card_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  card_receipe_name_.Swap(&other->card_receipe_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  card_owner_type_.Swap(&other->card_owner_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  card_brand_.Swap(&other->card_brand_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  card_credit_type_.Swap(&other->card_credit_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  card_number_.Swap(&other->card_number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  channel_.Swap(&other->channel_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  currency_.Swap(&other->currency_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  custom_data_.Swap(&other->custom_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  card_uid_.Swap(&other->card_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_uid_usage_.Swap(&other->customer_uid_usage_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  fail_reason_.Swap(&other->fail_reason_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  imp_uid_.Swap(&other->imp_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  merchant_uid_.Swap(&other->merchant_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  order_name_.Swap(&other->order_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pay_method_.Swap(&other->pay_method_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pg_id_.Swap(&other->pg_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pg_provider_.Swap(&other->pg_provider_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pg_tid_.Swap(&other->pg_tid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  receipt_url_.Swap(&other->receipt_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  status_.Swap(&other->status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_agent_.Swap(&other->user_agent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  vbank_code_.Swap(&other->vbank_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  vbank_holder_.Swap(&other->vbank_holder_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  vbank_name_.Swap(&other->vbank_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  vbank_num_.Swap(&other->vbank_num_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_email_.Swap(&other->customer_email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  npoint_pay_amount_.Swap(&other->npoint_pay_amount_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  emb_pg_provider_.Swap(&other->emb_pg_provider_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnitTx, vbank_issued_at_)
      + sizeof(UnitTx::vbank_issued_at_)
      - PROTOBUF_FIELD_OFFSET(UnitTx, promotion_)>(
          reinterpret_cast<char*>(&promotion_),
          reinterpret_cast<char*>(&other->promotion_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnitTx::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace basis_v2
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::basis_v2::CancelHistory* Arena::CreateMaybeMessage< ::basis_v2::CancelHistory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::basis_v2::CancelHistory >(arena);
}
template<> PROTOBUF_NOINLINE ::basis_v2::Promotion* Arena::CreateMaybeMessage< ::basis_v2::Promotion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::basis_v2::Promotion >(arena);
}
template<> PROTOBUF_NOINLINE ::basis_v2::UnitTx* Arena::CreateMaybeMessage< ::basis_v2::UnitTx >(Arena* arena) {
  return Arena::CreateMessageInternal< ::basis_v2::UnitTx >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
