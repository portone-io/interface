// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v2/basis/basis.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_v2_2fbasis_2fbasis_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_v2_2fbasis_2fbasis_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_v2_2fbasis_2fbasis_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_v2_2fbasis_2fbasis_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_v2_2fbasis_2fbasis_2eproto;
namespace basis_v2 {
class CancelHistory;
class CancelHistoryDefaultTypeInternal;
extern CancelHistoryDefaultTypeInternal _CancelHistory_default_instance_;
class Promotion;
class PromotionDefaultTypeInternal;
extern PromotionDefaultTypeInternal _Promotion_default_instance_;
class UnitTx;
class UnitTxDefaultTypeInternal;
extern UnitTxDefaultTypeInternal _UnitTx_default_instance_;
}  // namespace basis_v2
PROTOBUF_NAMESPACE_OPEN
template<> ::basis_v2::CancelHistory* Arena::CreateMaybeMessage<::basis_v2::CancelHistory>(Arena*);
template<> ::basis_v2::Promotion* Arena::CreateMaybeMessage<::basis_v2::Promotion>(Arena*);
template<> ::basis_v2::UnitTx* Arena::CreateMaybeMessage<::basis_v2::UnitTx>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace basis_v2 {

// ===================================================================

class CancelHistory PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:basis_v2.CancelHistory) */ {
 public:
  inline CancelHistory() : CancelHistory(nullptr) {}
  virtual ~CancelHistory();

  CancelHistory(const CancelHistory& from);
  CancelHistory(CancelHistory&& from) noexcept
    : CancelHistory() {
    *this = ::std::move(from);
  }

  inline CancelHistory& operator=(const CancelHistory& from) {
    CopyFrom(from);
    return *this;
  }
  inline CancelHistory& operator=(CancelHistory&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CancelHistory& default_instance();

  static inline const CancelHistory* internal_default_instance() {
    return reinterpret_cast<const CancelHistory*>(
               &_CancelHistory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CancelHistory& a, CancelHistory& b) {
    a.Swap(&b);
  }
  inline void Swap(CancelHistory* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CancelHistory* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CancelHistory* New() const final {
    return CreateMaybeMessage<CancelHistory>(nullptr);
  }

  CancelHistory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CancelHistory>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CancelHistory& from);
  void MergeFrom(const CancelHistory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CancelHistory* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "basis_v2.CancelHistory";
  }
  protected:
  explicit CancelHistory(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_v2_2fbasis_2fbasis_2eproto);
    return ::descriptor_table_v2_2fbasis_2fbasis_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPgTidFieldNumber = 1,
    kAmountFieldNumber = 2,
    kReasonFieldNumber = 4,
    kReceiptUrlFieldNumber = 5,
    kCancelledAtFieldNumber = 3,
  };
  // string pg_tid = 1;
  void clear_pg_tid();
  const std::string& pg_tid() const;
  void set_pg_tid(const std::string& value);
  void set_pg_tid(std::string&& value);
  void set_pg_tid(const char* value);
  void set_pg_tid(const char* value, size_t size);
  std::string* mutable_pg_tid();
  std::string* release_pg_tid();
  void set_allocated_pg_tid(std::string* pg_tid);
  private:
  const std::string& _internal_pg_tid() const;
  void _internal_set_pg_tid(const std::string& value);
  std::string* _internal_mutable_pg_tid();
  public:

  // string amount = 2;
  void clear_amount();
  const std::string& amount() const;
  void set_amount(const std::string& value);
  void set_amount(std::string&& value);
  void set_amount(const char* value);
  void set_amount(const char* value, size_t size);
  std::string* mutable_amount();
  std::string* release_amount();
  void set_allocated_amount(std::string* amount);
  private:
  const std::string& _internal_amount() const;
  void _internal_set_amount(const std::string& value);
  std::string* _internal_mutable_amount();
  public:

  // string reason = 4;
  void clear_reason();
  const std::string& reason() const;
  void set_reason(const std::string& value);
  void set_reason(std::string&& value);
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  std::string* mutable_reason();
  std::string* release_reason();
  void set_allocated_reason(std::string* reason);
  private:
  const std::string& _internal_reason() const;
  void _internal_set_reason(const std::string& value);
  std::string* _internal_mutable_reason();
  public:

  // string receipt_url = 5;
  void clear_receipt_url();
  const std::string& receipt_url() const;
  void set_receipt_url(const std::string& value);
  void set_receipt_url(std::string&& value);
  void set_receipt_url(const char* value);
  void set_receipt_url(const char* value, size_t size);
  std::string* mutable_receipt_url();
  std::string* release_receipt_url();
  void set_allocated_receipt_url(std::string* receipt_url);
  private:
  const std::string& _internal_receipt_url() const;
  void _internal_set_receipt_url(const std::string& value);
  std::string* _internal_mutable_receipt_url();
  public:

  // int32 cancelled_at = 3;
  void clear_cancelled_at();
  ::PROTOBUF_NAMESPACE_ID::int32 cancelled_at() const;
  void set_cancelled_at(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cancelled_at() const;
  void _internal_set_cancelled_at(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:basis_v2.CancelHistory)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pg_tid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr amount_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reason_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr receipt_url_;
  ::PROTOBUF_NAMESPACE_ID::int32 cancelled_at_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_v2_2fbasis_2fbasis_2eproto;
};
// -------------------------------------------------------------------

class Promotion PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:basis_v2.Promotion) */ {
 public:
  inline Promotion() : Promotion(nullptr) {}
  virtual ~Promotion();

  Promotion(const Promotion& from);
  Promotion(Promotion&& from) noexcept
    : Promotion() {
    *this = ::std::move(from);
  }

  inline Promotion& operator=(const Promotion& from) {
    CopyFrom(from);
    return *this;
  }
  inline Promotion& operator=(Promotion&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Promotion& default_instance();

  static inline const Promotion* internal_default_instance() {
    return reinterpret_cast<const Promotion*>(
               &_Promotion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Promotion& a, Promotion& b) {
    a.Swap(&b);
  }
  inline void Swap(Promotion* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Promotion* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Promotion* New() const final {
    return CreateMaybeMessage<Promotion>(nullptr);
  }

  Promotion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Promotion>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Promotion& from);
  void MergeFrom(const Promotion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Promotion* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "basis_v2.Promotion";
  }
  protected:
  explicit Promotion(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_v2_2fbasis_2fbasis_2eproto);
    return ::descriptor_table_v2_2fbasis_2fbasis_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kDiscountFieldNumber = 2,
  };
  // string id = 1;
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // int32 discount = 2;
  void clear_discount();
  ::PROTOBUF_NAMESPACE_ID::int32 discount() const;
  void set_discount(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_discount() const;
  void _internal_set_discount(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:basis_v2.Promotion)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::int32 discount_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_v2_2fbasis_2fbasis_2eproto;
};
// -------------------------------------------------------------------

class UnitTx PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:basis_v2.UnitTx) */ {
 public:
  inline UnitTx() : UnitTx(nullptr) {}
  virtual ~UnitTx();

  UnitTx(const UnitTx& from);
  UnitTx(UnitTx&& from) noexcept
    : UnitTx() {
    *this = ::std::move(from);
  }

  inline UnitTx& operator=(const UnitTx& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnitTx& operator=(UnitTx&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnitTx& default_instance();

  static inline const UnitTx* internal_default_instance() {
    return reinterpret_cast<const UnitTx*>(
               &_UnitTx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(UnitTx& a, UnitTx& b) {
    a.Swap(&b);
  }
  inline void Swap(UnitTx* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnitTx* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnitTx* New() const final {
    return CreateMaybeMessage<UnitTx>(nullptr);
  }

  UnitTx* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnitTx>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnitTx& from);
  void MergeFrom(const UnitTx& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnitTx* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "basis_v2.UnitTx";
  }
  protected:
  explicit UnitTx(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_v2_2fbasis_2fbasis_2eproto);
    return ::descriptor_table_v2_2fbasis_2fbasis_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCancelHistoryFieldNumber = 11,
    kCancelReceiptUrlsFieldNumber = 13,
    kAmountFieldNumber = 1,
    kApplyNumFieldNumber = 2,
    kBankNameFieldNumber = 4,
    kBuyerAddrFieldNumber = 5,
    kBuyerEmailFieldNumber = 6,
    kBuyerNameFieldNumber = 7,
    kBuyerPostcodeFieldNumber = 8,
    kBuyerTelFieldNumber = 9,
    kCancelAmountFieldNumber = 10,
    kCancelReasonFieldNumber = 12,
    kCardCodeFieldNumber = 15,
    kBinNumberFieldNumber = 16,
    kCardNameFieldNumber = 17,
    kCardReceipeNameFieldNumber = 18,
    kCardOwnerTypeFieldNumber = 19,
    kCardBrandFieldNumber = 20,
    kCardCreditTypeFieldNumber = 21,
    kCardNumberFieldNumber = 22,
    kChannelFieldNumber = 26,
    kCurrencyFieldNumber = 27,
    kCustomDataFieldNumber = 28,
    kCardUidFieldNumber = 29,
    kCustomerUidUsageFieldNumber = 30,
    kFailReasonFieldNumber = 32,
    kImpUidFieldNumber = 34,
    kMerchantUidFieldNumber = 35,
    kOrderNameFieldNumber = 36,
    kPayMethodFieldNumber = 38,
    kPgIdFieldNumber = 39,
    kPgProviderFieldNumber = 40,
    kPgTidFieldNumber = 41,
    kReceiptUrlFieldNumber = 42,
    kStatusFieldNumber = 44,
    kUserAgentFieldNumber = 45,
    kVbankCodeFieldNumber = 46,
    kVbankHolderFieldNumber = 48,
    kVbankNameFieldNumber = 50,
    kVbankNumFieldNumber = 51,
    kCustomerEmailFieldNumber = 52,
    kNpointPayAmountFieldNumber = 54,
    kEmbPgProviderFieldNumber = 56,
    kPromotionFieldNumber = 53,
    kBankCodeFieldNumber = 3,
    kCancelledAtFieldNumber = 14,
    kCardInstallmentFieldNumber = 23,
    kCardTypeFieldNumber = 24,
    kFailedAtFieldNumber = 33,
    kPaidAtFieldNumber = 37,
    kCashReceiptIssuedFieldNumber = 25,
    kEscrowFieldNumber = 31,
    kSandboxFieldNumber = 55,
    kStartedAtFieldNumber = 43,
    kVbankDateFieldNumber = 47,
    kVbankIssuedAtFieldNumber = 49,
  };
  // repeated .basis_v2.CancelHistory cancel_history = 11;
  int cancel_history_size() const;
  private:
  int _internal_cancel_history_size() const;
  public:
  void clear_cancel_history();
  ::basis_v2::CancelHistory* mutable_cancel_history(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::basis_v2::CancelHistory >*
      mutable_cancel_history();
  private:
  const ::basis_v2::CancelHistory& _internal_cancel_history(int index) const;
  ::basis_v2::CancelHistory* _internal_add_cancel_history();
  public:
  const ::basis_v2::CancelHistory& cancel_history(int index) const;
  ::basis_v2::CancelHistory* add_cancel_history();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::basis_v2::CancelHistory >&
      cancel_history() const;

  // repeated string cancel_receipt_urls = 13;
  int cancel_receipt_urls_size() const;
  private:
  int _internal_cancel_receipt_urls_size() const;
  public:
  void clear_cancel_receipt_urls();
  const std::string& cancel_receipt_urls(int index) const;
  std::string* mutable_cancel_receipt_urls(int index);
  void set_cancel_receipt_urls(int index, const std::string& value);
  void set_cancel_receipt_urls(int index, std::string&& value);
  void set_cancel_receipt_urls(int index, const char* value);
  void set_cancel_receipt_urls(int index, const char* value, size_t size);
  std::string* add_cancel_receipt_urls();
  void add_cancel_receipt_urls(const std::string& value);
  void add_cancel_receipt_urls(std::string&& value);
  void add_cancel_receipt_urls(const char* value);
  void add_cancel_receipt_urls(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& cancel_receipt_urls() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_cancel_receipt_urls();
  private:
  const std::string& _internal_cancel_receipt_urls(int index) const;
  std::string* _internal_add_cancel_receipt_urls();
  public:

  // string amount = 1;
  void clear_amount();
  const std::string& amount() const;
  void set_amount(const std::string& value);
  void set_amount(std::string&& value);
  void set_amount(const char* value);
  void set_amount(const char* value, size_t size);
  std::string* mutable_amount();
  std::string* release_amount();
  void set_allocated_amount(std::string* amount);
  private:
  const std::string& _internal_amount() const;
  void _internal_set_amount(const std::string& value);
  std::string* _internal_mutable_amount();
  public:

  // string apply_num = 2;
  void clear_apply_num();
  const std::string& apply_num() const;
  void set_apply_num(const std::string& value);
  void set_apply_num(std::string&& value);
  void set_apply_num(const char* value);
  void set_apply_num(const char* value, size_t size);
  std::string* mutable_apply_num();
  std::string* release_apply_num();
  void set_allocated_apply_num(std::string* apply_num);
  private:
  const std::string& _internal_apply_num() const;
  void _internal_set_apply_num(const std::string& value);
  std::string* _internal_mutable_apply_num();
  public:

  // string bank_name = 4;
  void clear_bank_name();
  const std::string& bank_name() const;
  void set_bank_name(const std::string& value);
  void set_bank_name(std::string&& value);
  void set_bank_name(const char* value);
  void set_bank_name(const char* value, size_t size);
  std::string* mutable_bank_name();
  std::string* release_bank_name();
  void set_allocated_bank_name(std::string* bank_name);
  private:
  const std::string& _internal_bank_name() const;
  void _internal_set_bank_name(const std::string& value);
  std::string* _internal_mutable_bank_name();
  public:

  // string buyer_addr = 5;
  void clear_buyer_addr();
  const std::string& buyer_addr() const;
  void set_buyer_addr(const std::string& value);
  void set_buyer_addr(std::string&& value);
  void set_buyer_addr(const char* value);
  void set_buyer_addr(const char* value, size_t size);
  std::string* mutable_buyer_addr();
  std::string* release_buyer_addr();
  void set_allocated_buyer_addr(std::string* buyer_addr);
  private:
  const std::string& _internal_buyer_addr() const;
  void _internal_set_buyer_addr(const std::string& value);
  std::string* _internal_mutable_buyer_addr();
  public:

  // string buyer_email = 6;
  void clear_buyer_email();
  const std::string& buyer_email() const;
  void set_buyer_email(const std::string& value);
  void set_buyer_email(std::string&& value);
  void set_buyer_email(const char* value);
  void set_buyer_email(const char* value, size_t size);
  std::string* mutable_buyer_email();
  std::string* release_buyer_email();
  void set_allocated_buyer_email(std::string* buyer_email);
  private:
  const std::string& _internal_buyer_email() const;
  void _internal_set_buyer_email(const std::string& value);
  std::string* _internal_mutable_buyer_email();
  public:

  // string buyer_name = 7;
  void clear_buyer_name();
  const std::string& buyer_name() const;
  void set_buyer_name(const std::string& value);
  void set_buyer_name(std::string&& value);
  void set_buyer_name(const char* value);
  void set_buyer_name(const char* value, size_t size);
  std::string* mutable_buyer_name();
  std::string* release_buyer_name();
  void set_allocated_buyer_name(std::string* buyer_name);
  private:
  const std::string& _internal_buyer_name() const;
  void _internal_set_buyer_name(const std::string& value);
  std::string* _internal_mutable_buyer_name();
  public:

  // string buyer_postcode = 8;
  void clear_buyer_postcode();
  const std::string& buyer_postcode() const;
  void set_buyer_postcode(const std::string& value);
  void set_buyer_postcode(std::string&& value);
  void set_buyer_postcode(const char* value);
  void set_buyer_postcode(const char* value, size_t size);
  std::string* mutable_buyer_postcode();
  std::string* release_buyer_postcode();
  void set_allocated_buyer_postcode(std::string* buyer_postcode);
  private:
  const std::string& _internal_buyer_postcode() const;
  void _internal_set_buyer_postcode(const std::string& value);
  std::string* _internal_mutable_buyer_postcode();
  public:

  // string buyer_tel = 9;
  void clear_buyer_tel();
  const std::string& buyer_tel() const;
  void set_buyer_tel(const std::string& value);
  void set_buyer_tel(std::string&& value);
  void set_buyer_tel(const char* value);
  void set_buyer_tel(const char* value, size_t size);
  std::string* mutable_buyer_tel();
  std::string* release_buyer_tel();
  void set_allocated_buyer_tel(std::string* buyer_tel);
  private:
  const std::string& _internal_buyer_tel() const;
  void _internal_set_buyer_tel(const std::string& value);
  std::string* _internal_mutable_buyer_tel();
  public:

  // string cancel_amount = 10;
  void clear_cancel_amount();
  const std::string& cancel_amount() const;
  void set_cancel_amount(const std::string& value);
  void set_cancel_amount(std::string&& value);
  void set_cancel_amount(const char* value);
  void set_cancel_amount(const char* value, size_t size);
  std::string* mutable_cancel_amount();
  std::string* release_cancel_amount();
  void set_allocated_cancel_amount(std::string* cancel_amount);
  private:
  const std::string& _internal_cancel_amount() const;
  void _internal_set_cancel_amount(const std::string& value);
  std::string* _internal_mutable_cancel_amount();
  public:

  // string cancel_reason = 12;
  void clear_cancel_reason();
  const std::string& cancel_reason() const;
  void set_cancel_reason(const std::string& value);
  void set_cancel_reason(std::string&& value);
  void set_cancel_reason(const char* value);
  void set_cancel_reason(const char* value, size_t size);
  std::string* mutable_cancel_reason();
  std::string* release_cancel_reason();
  void set_allocated_cancel_reason(std::string* cancel_reason);
  private:
  const std::string& _internal_cancel_reason() const;
  void _internal_set_cancel_reason(const std::string& value);
  std::string* _internal_mutable_cancel_reason();
  public:

  // string card_code = 15;
  void clear_card_code();
  const std::string& card_code() const;
  void set_card_code(const std::string& value);
  void set_card_code(std::string&& value);
  void set_card_code(const char* value);
  void set_card_code(const char* value, size_t size);
  std::string* mutable_card_code();
  std::string* release_card_code();
  void set_allocated_card_code(std::string* card_code);
  private:
  const std::string& _internal_card_code() const;
  void _internal_set_card_code(const std::string& value);
  std::string* _internal_mutable_card_code();
  public:

  // string bin_number = 16;
  void clear_bin_number();
  const std::string& bin_number() const;
  void set_bin_number(const std::string& value);
  void set_bin_number(std::string&& value);
  void set_bin_number(const char* value);
  void set_bin_number(const char* value, size_t size);
  std::string* mutable_bin_number();
  std::string* release_bin_number();
  void set_allocated_bin_number(std::string* bin_number);
  private:
  const std::string& _internal_bin_number() const;
  void _internal_set_bin_number(const std::string& value);
  std::string* _internal_mutable_bin_number();
  public:

  // string card_name = 17;
  void clear_card_name();
  const std::string& card_name() const;
  void set_card_name(const std::string& value);
  void set_card_name(std::string&& value);
  void set_card_name(const char* value);
  void set_card_name(const char* value, size_t size);
  std::string* mutable_card_name();
  std::string* release_card_name();
  void set_allocated_card_name(std::string* card_name);
  private:
  const std::string& _internal_card_name() const;
  void _internal_set_card_name(const std::string& value);
  std::string* _internal_mutable_card_name();
  public:

  // string card_receipe_name = 18;
  void clear_card_receipe_name();
  const std::string& card_receipe_name() const;
  void set_card_receipe_name(const std::string& value);
  void set_card_receipe_name(std::string&& value);
  void set_card_receipe_name(const char* value);
  void set_card_receipe_name(const char* value, size_t size);
  std::string* mutable_card_receipe_name();
  std::string* release_card_receipe_name();
  void set_allocated_card_receipe_name(std::string* card_receipe_name);
  private:
  const std::string& _internal_card_receipe_name() const;
  void _internal_set_card_receipe_name(const std::string& value);
  std::string* _internal_mutable_card_receipe_name();
  public:

  // string card_owner_type = 19;
  void clear_card_owner_type();
  const std::string& card_owner_type() const;
  void set_card_owner_type(const std::string& value);
  void set_card_owner_type(std::string&& value);
  void set_card_owner_type(const char* value);
  void set_card_owner_type(const char* value, size_t size);
  std::string* mutable_card_owner_type();
  std::string* release_card_owner_type();
  void set_allocated_card_owner_type(std::string* card_owner_type);
  private:
  const std::string& _internal_card_owner_type() const;
  void _internal_set_card_owner_type(const std::string& value);
  std::string* _internal_mutable_card_owner_type();
  public:

  // string card_brand = 20;
  void clear_card_brand();
  const std::string& card_brand() const;
  void set_card_brand(const std::string& value);
  void set_card_brand(std::string&& value);
  void set_card_brand(const char* value);
  void set_card_brand(const char* value, size_t size);
  std::string* mutable_card_brand();
  std::string* release_card_brand();
  void set_allocated_card_brand(std::string* card_brand);
  private:
  const std::string& _internal_card_brand() const;
  void _internal_set_card_brand(const std::string& value);
  std::string* _internal_mutable_card_brand();
  public:

  // string card_credit_type = 21;
  void clear_card_credit_type();
  const std::string& card_credit_type() const;
  void set_card_credit_type(const std::string& value);
  void set_card_credit_type(std::string&& value);
  void set_card_credit_type(const char* value);
  void set_card_credit_type(const char* value, size_t size);
  std::string* mutable_card_credit_type();
  std::string* release_card_credit_type();
  void set_allocated_card_credit_type(std::string* card_credit_type);
  private:
  const std::string& _internal_card_credit_type() const;
  void _internal_set_card_credit_type(const std::string& value);
  std::string* _internal_mutable_card_credit_type();
  public:

  // string card_number = 22;
  void clear_card_number();
  const std::string& card_number() const;
  void set_card_number(const std::string& value);
  void set_card_number(std::string&& value);
  void set_card_number(const char* value);
  void set_card_number(const char* value, size_t size);
  std::string* mutable_card_number();
  std::string* release_card_number();
  void set_allocated_card_number(std::string* card_number);
  private:
  const std::string& _internal_card_number() const;
  void _internal_set_card_number(const std::string& value);
  std::string* _internal_mutable_card_number();
  public:

  // string channel = 26;
  void clear_channel();
  const std::string& channel() const;
  void set_channel(const std::string& value);
  void set_channel(std::string&& value);
  void set_channel(const char* value);
  void set_channel(const char* value, size_t size);
  std::string* mutable_channel();
  std::string* release_channel();
  void set_allocated_channel(std::string* channel);
  private:
  const std::string& _internal_channel() const;
  void _internal_set_channel(const std::string& value);
  std::string* _internal_mutable_channel();
  public:

  // string currency = 27;
  void clear_currency();
  const std::string& currency() const;
  void set_currency(const std::string& value);
  void set_currency(std::string&& value);
  void set_currency(const char* value);
  void set_currency(const char* value, size_t size);
  std::string* mutable_currency();
  std::string* release_currency();
  void set_allocated_currency(std::string* currency);
  private:
  const std::string& _internal_currency() const;
  void _internal_set_currency(const std::string& value);
  std::string* _internal_mutable_currency();
  public:

  // string custom_data = 28;
  void clear_custom_data();
  const std::string& custom_data() const;
  void set_custom_data(const std::string& value);
  void set_custom_data(std::string&& value);
  void set_custom_data(const char* value);
  void set_custom_data(const char* value, size_t size);
  std::string* mutable_custom_data();
  std::string* release_custom_data();
  void set_allocated_custom_data(std::string* custom_data);
  private:
  const std::string& _internal_custom_data() const;
  void _internal_set_custom_data(const std::string& value);
  std::string* _internal_mutable_custom_data();
  public:

  // string card_uid = 29;
  void clear_card_uid();
  const std::string& card_uid() const;
  void set_card_uid(const std::string& value);
  void set_card_uid(std::string&& value);
  void set_card_uid(const char* value);
  void set_card_uid(const char* value, size_t size);
  std::string* mutable_card_uid();
  std::string* release_card_uid();
  void set_allocated_card_uid(std::string* card_uid);
  private:
  const std::string& _internal_card_uid() const;
  void _internal_set_card_uid(const std::string& value);
  std::string* _internal_mutable_card_uid();
  public:

  // string customer_uid_usage = 30;
  void clear_customer_uid_usage();
  const std::string& customer_uid_usage() const;
  void set_customer_uid_usage(const std::string& value);
  void set_customer_uid_usage(std::string&& value);
  void set_customer_uid_usage(const char* value);
  void set_customer_uid_usage(const char* value, size_t size);
  std::string* mutable_customer_uid_usage();
  std::string* release_customer_uid_usage();
  void set_allocated_customer_uid_usage(std::string* customer_uid_usage);
  private:
  const std::string& _internal_customer_uid_usage() const;
  void _internal_set_customer_uid_usage(const std::string& value);
  std::string* _internal_mutable_customer_uid_usage();
  public:

  // string fail_reason = 32;
  void clear_fail_reason();
  const std::string& fail_reason() const;
  void set_fail_reason(const std::string& value);
  void set_fail_reason(std::string&& value);
  void set_fail_reason(const char* value);
  void set_fail_reason(const char* value, size_t size);
  std::string* mutable_fail_reason();
  std::string* release_fail_reason();
  void set_allocated_fail_reason(std::string* fail_reason);
  private:
  const std::string& _internal_fail_reason() const;
  void _internal_set_fail_reason(const std::string& value);
  std::string* _internal_mutable_fail_reason();
  public:

  // string imp_uid = 34;
  void clear_imp_uid();
  const std::string& imp_uid() const;
  void set_imp_uid(const std::string& value);
  void set_imp_uid(std::string&& value);
  void set_imp_uid(const char* value);
  void set_imp_uid(const char* value, size_t size);
  std::string* mutable_imp_uid();
  std::string* release_imp_uid();
  void set_allocated_imp_uid(std::string* imp_uid);
  private:
  const std::string& _internal_imp_uid() const;
  void _internal_set_imp_uid(const std::string& value);
  std::string* _internal_mutable_imp_uid();
  public:

  // string merchant_uid = 35;
  void clear_merchant_uid();
  const std::string& merchant_uid() const;
  void set_merchant_uid(const std::string& value);
  void set_merchant_uid(std::string&& value);
  void set_merchant_uid(const char* value);
  void set_merchant_uid(const char* value, size_t size);
  std::string* mutable_merchant_uid();
  std::string* release_merchant_uid();
  void set_allocated_merchant_uid(std::string* merchant_uid);
  private:
  const std::string& _internal_merchant_uid() const;
  void _internal_set_merchant_uid(const std::string& value);
  std::string* _internal_mutable_merchant_uid();
  public:

  // string order_name = 36;
  void clear_order_name();
  const std::string& order_name() const;
  void set_order_name(const std::string& value);
  void set_order_name(std::string&& value);
  void set_order_name(const char* value);
  void set_order_name(const char* value, size_t size);
  std::string* mutable_order_name();
  std::string* release_order_name();
  void set_allocated_order_name(std::string* order_name);
  private:
  const std::string& _internal_order_name() const;
  void _internal_set_order_name(const std::string& value);
  std::string* _internal_mutable_order_name();
  public:

  // string pay_method = 38;
  void clear_pay_method();
  const std::string& pay_method() const;
  void set_pay_method(const std::string& value);
  void set_pay_method(std::string&& value);
  void set_pay_method(const char* value);
  void set_pay_method(const char* value, size_t size);
  std::string* mutable_pay_method();
  std::string* release_pay_method();
  void set_allocated_pay_method(std::string* pay_method);
  private:
  const std::string& _internal_pay_method() const;
  void _internal_set_pay_method(const std::string& value);
  std::string* _internal_mutable_pay_method();
  public:

  // string pg_id = 39;
  void clear_pg_id();
  const std::string& pg_id() const;
  void set_pg_id(const std::string& value);
  void set_pg_id(std::string&& value);
  void set_pg_id(const char* value);
  void set_pg_id(const char* value, size_t size);
  std::string* mutable_pg_id();
  std::string* release_pg_id();
  void set_allocated_pg_id(std::string* pg_id);
  private:
  const std::string& _internal_pg_id() const;
  void _internal_set_pg_id(const std::string& value);
  std::string* _internal_mutable_pg_id();
  public:

  // string pg_provider = 40;
  void clear_pg_provider();
  const std::string& pg_provider() const;
  void set_pg_provider(const std::string& value);
  void set_pg_provider(std::string&& value);
  void set_pg_provider(const char* value);
  void set_pg_provider(const char* value, size_t size);
  std::string* mutable_pg_provider();
  std::string* release_pg_provider();
  void set_allocated_pg_provider(std::string* pg_provider);
  private:
  const std::string& _internal_pg_provider() const;
  void _internal_set_pg_provider(const std::string& value);
  std::string* _internal_mutable_pg_provider();
  public:

  // string pg_tid = 41;
  void clear_pg_tid();
  const std::string& pg_tid() const;
  void set_pg_tid(const std::string& value);
  void set_pg_tid(std::string&& value);
  void set_pg_tid(const char* value);
  void set_pg_tid(const char* value, size_t size);
  std::string* mutable_pg_tid();
  std::string* release_pg_tid();
  void set_allocated_pg_tid(std::string* pg_tid);
  private:
  const std::string& _internal_pg_tid() const;
  void _internal_set_pg_tid(const std::string& value);
  std::string* _internal_mutable_pg_tid();
  public:

  // string receipt_url = 42;
  void clear_receipt_url();
  const std::string& receipt_url() const;
  void set_receipt_url(const std::string& value);
  void set_receipt_url(std::string&& value);
  void set_receipt_url(const char* value);
  void set_receipt_url(const char* value, size_t size);
  std::string* mutable_receipt_url();
  std::string* release_receipt_url();
  void set_allocated_receipt_url(std::string* receipt_url);
  private:
  const std::string& _internal_receipt_url() const;
  void _internal_set_receipt_url(const std::string& value);
  std::string* _internal_mutable_receipt_url();
  public:

  // string status = 44;
  void clear_status();
  const std::string& status() const;
  void set_status(const std::string& value);
  void set_status(std::string&& value);
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  std::string* mutable_status();
  std::string* release_status();
  void set_allocated_status(std::string* status);
  private:
  const std::string& _internal_status() const;
  void _internal_set_status(const std::string& value);
  std::string* _internal_mutable_status();
  public:

  // string user_agent = 45;
  void clear_user_agent();
  const std::string& user_agent() const;
  void set_user_agent(const std::string& value);
  void set_user_agent(std::string&& value);
  void set_user_agent(const char* value);
  void set_user_agent(const char* value, size_t size);
  std::string* mutable_user_agent();
  std::string* release_user_agent();
  void set_allocated_user_agent(std::string* user_agent);
  private:
  const std::string& _internal_user_agent() const;
  void _internal_set_user_agent(const std::string& value);
  std::string* _internal_mutable_user_agent();
  public:

  // string vbank_code = 46;
  void clear_vbank_code();
  const std::string& vbank_code() const;
  void set_vbank_code(const std::string& value);
  void set_vbank_code(std::string&& value);
  void set_vbank_code(const char* value);
  void set_vbank_code(const char* value, size_t size);
  std::string* mutable_vbank_code();
  std::string* release_vbank_code();
  void set_allocated_vbank_code(std::string* vbank_code);
  private:
  const std::string& _internal_vbank_code() const;
  void _internal_set_vbank_code(const std::string& value);
  std::string* _internal_mutable_vbank_code();
  public:

  // string vbank_holder = 48;
  void clear_vbank_holder();
  const std::string& vbank_holder() const;
  void set_vbank_holder(const std::string& value);
  void set_vbank_holder(std::string&& value);
  void set_vbank_holder(const char* value);
  void set_vbank_holder(const char* value, size_t size);
  std::string* mutable_vbank_holder();
  std::string* release_vbank_holder();
  void set_allocated_vbank_holder(std::string* vbank_holder);
  private:
  const std::string& _internal_vbank_holder() const;
  void _internal_set_vbank_holder(const std::string& value);
  std::string* _internal_mutable_vbank_holder();
  public:

  // string vbank_name = 50;
  void clear_vbank_name();
  const std::string& vbank_name() const;
  void set_vbank_name(const std::string& value);
  void set_vbank_name(std::string&& value);
  void set_vbank_name(const char* value);
  void set_vbank_name(const char* value, size_t size);
  std::string* mutable_vbank_name();
  std::string* release_vbank_name();
  void set_allocated_vbank_name(std::string* vbank_name);
  private:
  const std::string& _internal_vbank_name() const;
  void _internal_set_vbank_name(const std::string& value);
  std::string* _internal_mutable_vbank_name();
  public:

  // string vbank_num = 51;
  void clear_vbank_num();
  const std::string& vbank_num() const;
  void set_vbank_num(const std::string& value);
  void set_vbank_num(std::string&& value);
  void set_vbank_num(const char* value);
  void set_vbank_num(const char* value, size_t size);
  std::string* mutable_vbank_num();
  std::string* release_vbank_num();
  void set_allocated_vbank_num(std::string* vbank_num);
  private:
  const std::string& _internal_vbank_num() const;
  void _internal_set_vbank_num(const std::string& value);
  std::string* _internal_mutable_vbank_num();
  public:

  // string customer_email = 52;
  void clear_customer_email();
  const std::string& customer_email() const;
  void set_customer_email(const std::string& value);
  void set_customer_email(std::string&& value);
  void set_customer_email(const char* value);
  void set_customer_email(const char* value, size_t size);
  std::string* mutable_customer_email();
  std::string* release_customer_email();
  void set_allocated_customer_email(std::string* customer_email);
  private:
  const std::string& _internal_customer_email() const;
  void _internal_set_customer_email(const std::string& value);
  std::string* _internal_mutable_customer_email();
  public:

  // string npoint_pay_amount = 54;
  void clear_npoint_pay_amount();
  const std::string& npoint_pay_amount() const;
  void set_npoint_pay_amount(const std::string& value);
  void set_npoint_pay_amount(std::string&& value);
  void set_npoint_pay_amount(const char* value);
  void set_npoint_pay_amount(const char* value, size_t size);
  std::string* mutable_npoint_pay_amount();
  std::string* release_npoint_pay_amount();
  void set_allocated_npoint_pay_amount(std::string* npoint_pay_amount);
  private:
  const std::string& _internal_npoint_pay_amount() const;
  void _internal_set_npoint_pay_amount(const std::string& value);
  std::string* _internal_mutable_npoint_pay_amount();
  public:

  // string emb_pg_provider = 56;
  void clear_emb_pg_provider();
  const std::string& emb_pg_provider() const;
  void set_emb_pg_provider(const std::string& value);
  void set_emb_pg_provider(std::string&& value);
  void set_emb_pg_provider(const char* value);
  void set_emb_pg_provider(const char* value, size_t size);
  std::string* mutable_emb_pg_provider();
  std::string* release_emb_pg_provider();
  void set_allocated_emb_pg_provider(std::string* emb_pg_provider);
  private:
  const std::string& _internal_emb_pg_provider() const;
  void _internal_set_emb_pg_provider(const std::string& value);
  std::string* _internal_mutable_emb_pg_provider();
  public:

  // .basis_v2.Promotion promotion = 53;
  bool has_promotion() const;
  private:
  bool _internal_has_promotion() const;
  public:
  void clear_promotion();
  const ::basis_v2::Promotion& promotion() const;
  ::basis_v2::Promotion* release_promotion();
  ::basis_v2::Promotion* mutable_promotion();
  void set_allocated_promotion(::basis_v2::Promotion* promotion);
  private:
  const ::basis_v2::Promotion& _internal_promotion() const;
  ::basis_v2::Promotion* _internal_mutable_promotion();
  public:
  void unsafe_arena_set_allocated_promotion(
      ::basis_v2::Promotion* promotion);
  ::basis_v2::Promotion* unsafe_arena_release_promotion();

  // int32 bank_code = 3;
  void clear_bank_code();
  ::PROTOBUF_NAMESPACE_ID::int32 bank_code() const;
  void set_bank_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bank_code() const;
  void _internal_set_bank_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 cancelled_at = 14;
  void clear_cancelled_at();
  ::PROTOBUF_NAMESPACE_ID::int32 cancelled_at() const;
  void set_cancelled_at(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cancelled_at() const;
  void _internal_set_cancelled_at(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 card_installment = 23;
  void clear_card_installment();
  ::PROTOBUF_NAMESPACE_ID::int32 card_installment() const;
  void set_card_installment(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_card_installment() const;
  void _internal_set_card_installment(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 card_type = 24;
  void clear_card_type();
  ::PROTOBUF_NAMESPACE_ID::int32 card_type() const;
  void set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_card_type() const;
  void _internal_set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 failed_at = 33;
  void clear_failed_at();
  ::PROTOBUF_NAMESPACE_ID::int32 failed_at() const;
  void set_failed_at(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_failed_at() const;
  void _internal_set_failed_at(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 paid_at = 37;
  void clear_paid_at();
  ::PROTOBUF_NAMESPACE_ID::int32 paid_at() const;
  void set_paid_at(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_paid_at() const;
  void _internal_set_paid_at(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool cash_receipt_issued = 25;
  void clear_cash_receipt_issued();
  bool cash_receipt_issued() const;
  void set_cash_receipt_issued(bool value);
  private:
  bool _internal_cash_receipt_issued() const;
  void _internal_set_cash_receipt_issued(bool value);
  public:

  // bool escrow = 31;
  void clear_escrow();
  bool escrow() const;
  void set_escrow(bool value);
  private:
  bool _internal_escrow() const;
  void _internal_set_escrow(bool value);
  public:

  // bool sandbox = 55;
  void clear_sandbox();
  bool sandbox() const;
  void set_sandbox(bool value);
  private:
  bool _internal_sandbox() const;
  void _internal_set_sandbox(bool value);
  public:

  // int32 started_at = 43;
  void clear_started_at();
  ::PROTOBUF_NAMESPACE_ID::int32 started_at() const;
  void set_started_at(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_started_at() const;
  void _internal_set_started_at(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 vbank_date = 47;
  void clear_vbank_date();
  ::PROTOBUF_NAMESPACE_ID::int32 vbank_date() const;
  void set_vbank_date(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vbank_date() const;
  void _internal_set_vbank_date(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 vbank_issued_at = 49;
  void clear_vbank_issued_at();
  ::PROTOBUF_NAMESPACE_ID::int32 vbank_issued_at() const;
  void set_vbank_issued_at(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vbank_issued_at() const;
  void _internal_set_vbank_issued_at(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:basis_v2.UnitTx)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::basis_v2::CancelHistory > cancel_history_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> cancel_receipt_urls_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr amount_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr apply_num_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bank_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr buyer_addr_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr buyer_email_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr buyer_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr buyer_postcode_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr buyer_tel_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cancel_amount_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cancel_reason_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr card_code_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bin_number_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr card_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr card_receipe_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr card_owner_type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr card_brand_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr card_credit_type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr card_number_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr channel_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr currency_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr custom_data_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr card_uid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr customer_uid_usage_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr fail_reason_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr imp_uid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr merchant_uid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr order_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pay_method_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pg_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pg_provider_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pg_tid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr receipt_url_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr status_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr user_agent_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr vbank_code_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr vbank_holder_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr vbank_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr vbank_num_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr customer_email_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr npoint_pay_amount_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr emb_pg_provider_;
  ::basis_v2::Promotion* promotion_;
  ::PROTOBUF_NAMESPACE_ID::int32 bank_code_;
  ::PROTOBUF_NAMESPACE_ID::int32 cancelled_at_;
  ::PROTOBUF_NAMESPACE_ID::int32 card_installment_;
  ::PROTOBUF_NAMESPACE_ID::int32 card_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 failed_at_;
  ::PROTOBUF_NAMESPACE_ID::int32 paid_at_;
  bool cash_receipt_issued_;
  bool escrow_;
  bool sandbox_;
  ::PROTOBUF_NAMESPACE_ID::int32 started_at_;
  ::PROTOBUF_NAMESPACE_ID::int32 vbank_date_;
  ::PROTOBUF_NAMESPACE_ID::int32 vbank_issued_at_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_v2_2fbasis_2fbasis_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CancelHistory

// string pg_tid = 1;
inline void CancelHistory::clear_pg_tid() {
  pg_tid_.ClearToEmpty();
}
inline const std::string& CancelHistory::pg_tid() const {
  // @@protoc_insertion_point(field_get:basis_v2.CancelHistory.pg_tid)
  return _internal_pg_tid();
}
inline void CancelHistory::set_pg_tid(const std::string& value) {
  _internal_set_pg_tid(value);
  // @@protoc_insertion_point(field_set:basis_v2.CancelHistory.pg_tid)
}
inline std::string* CancelHistory::mutable_pg_tid() {
  // @@protoc_insertion_point(field_mutable:basis_v2.CancelHistory.pg_tid)
  return _internal_mutable_pg_tid();
}
inline const std::string& CancelHistory::_internal_pg_tid() const {
  return pg_tid_.Get();
}
inline void CancelHistory::_internal_set_pg_tid(const std::string& value) {
  
  pg_tid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CancelHistory::set_pg_tid(std::string&& value) {
  
  pg_tid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.CancelHistory.pg_tid)
}
inline void CancelHistory::set_pg_tid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pg_tid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.CancelHistory.pg_tid)
}
inline void CancelHistory::set_pg_tid(const char* value,
    size_t size) {
  
  pg_tid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.CancelHistory.pg_tid)
}
inline std::string* CancelHistory::_internal_mutable_pg_tid() {
  
  return pg_tid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CancelHistory::release_pg_tid() {
  // @@protoc_insertion_point(field_release:basis_v2.CancelHistory.pg_tid)
  return pg_tid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CancelHistory::set_allocated_pg_tid(std::string* pg_tid) {
  if (pg_tid != nullptr) {
    
  } else {
    
  }
  pg_tid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pg_tid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.CancelHistory.pg_tid)
}

// string amount = 2;
inline void CancelHistory::clear_amount() {
  amount_.ClearToEmpty();
}
inline const std::string& CancelHistory::amount() const {
  // @@protoc_insertion_point(field_get:basis_v2.CancelHistory.amount)
  return _internal_amount();
}
inline void CancelHistory::set_amount(const std::string& value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:basis_v2.CancelHistory.amount)
}
inline std::string* CancelHistory::mutable_amount() {
  // @@protoc_insertion_point(field_mutable:basis_v2.CancelHistory.amount)
  return _internal_mutable_amount();
}
inline const std::string& CancelHistory::_internal_amount() const {
  return amount_.Get();
}
inline void CancelHistory::_internal_set_amount(const std::string& value) {
  
  amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CancelHistory::set_amount(std::string&& value) {
  
  amount_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.CancelHistory.amount)
}
inline void CancelHistory::set_amount(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.CancelHistory.amount)
}
inline void CancelHistory::set_amount(const char* value,
    size_t size) {
  
  amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.CancelHistory.amount)
}
inline std::string* CancelHistory::_internal_mutable_amount() {
  
  return amount_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CancelHistory::release_amount() {
  // @@protoc_insertion_point(field_release:basis_v2.CancelHistory.amount)
  return amount_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CancelHistory::set_allocated_amount(std::string* amount) {
  if (amount != nullptr) {
    
  } else {
    
  }
  amount_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), amount,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.CancelHistory.amount)
}

// int32 cancelled_at = 3;
inline void CancelHistory::clear_cancelled_at() {
  cancelled_at_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CancelHistory::_internal_cancelled_at() const {
  return cancelled_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CancelHistory::cancelled_at() const {
  // @@protoc_insertion_point(field_get:basis_v2.CancelHistory.cancelled_at)
  return _internal_cancelled_at();
}
inline void CancelHistory::_internal_set_cancelled_at(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cancelled_at_ = value;
}
inline void CancelHistory::set_cancelled_at(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cancelled_at(value);
  // @@protoc_insertion_point(field_set:basis_v2.CancelHistory.cancelled_at)
}

// string reason = 4;
inline void CancelHistory::clear_reason() {
  reason_.ClearToEmpty();
}
inline const std::string& CancelHistory::reason() const {
  // @@protoc_insertion_point(field_get:basis_v2.CancelHistory.reason)
  return _internal_reason();
}
inline void CancelHistory::set_reason(const std::string& value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:basis_v2.CancelHistory.reason)
}
inline std::string* CancelHistory::mutable_reason() {
  // @@protoc_insertion_point(field_mutable:basis_v2.CancelHistory.reason)
  return _internal_mutable_reason();
}
inline const std::string& CancelHistory::_internal_reason() const {
  return reason_.Get();
}
inline void CancelHistory::_internal_set_reason(const std::string& value) {
  
  reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CancelHistory::set_reason(std::string&& value) {
  
  reason_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.CancelHistory.reason)
}
inline void CancelHistory::set_reason(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.CancelHistory.reason)
}
inline void CancelHistory::set_reason(const char* value,
    size_t size) {
  
  reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.CancelHistory.reason)
}
inline std::string* CancelHistory::_internal_mutable_reason() {
  
  return reason_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CancelHistory::release_reason() {
  // @@protoc_insertion_point(field_release:basis_v2.CancelHistory.reason)
  return reason_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CancelHistory::set_allocated_reason(std::string* reason) {
  if (reason != nullptr) {
    
  } else {
    
  }
  reason_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reason,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.CancelHistory.reason)
}

// string receipt_url = 5;
inline void CancelHistory::clear_receipt_url() {
  receipt_url_.ClearToEmpty();
}
inline const std::string& CancelHistory::receipt_url() const {
  // @@protoc_insertion_point(field_get:basis_v2.CancelHistory.receipt_url)
  return _internal_receipt_url();
}
inline void CancelHistory::set_receipt_url(const std::string& value) {
  _internal_set_receipt_url(value);
  // @@protoc_insertion_point(field_set:basis_v2.CancelHistory.receipt_url)
}
inline std::string* CancelHistory::mutable_receipt_url() {
  // @@protoc_insertion_point(field_mutable:basis_v2.CancelHistory.receipt_url)
  return _internal_mutable_receipt_url();
}
inline const std::string& CancelHistory::_internal_receipt_url() const {
  return receipt_url_.Get();
}
inline void CancelHistory::_internal_set_receipt_url(const std::string& value) {
  
  receipt_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CancelHistory::set_receipt_url(std::string&& value) {
  
  receipt_url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.CancelHistory.receipt_url)
}
inline void CancelHistory::set_receipt_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  receipt_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.CancelHistory.receipt_url)
}
inline void CancelHistory::set_receipt_url(const char* value,
    size_t size) {
  
  receipt_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.CancelHistory.receipt_url)
}
inline std::string* CancelHistory::_internal_mutable_receipt_url() {
  
  return receipt_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CancelHistory::release_receipt_url() {
  // @@protoc_insertion_point(field_release:basis_v2.CancelHistory.receipt_url)
  return receipt_url_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CancelHistory::set_allocated_receipt_url(std::string* receipt_url) {
  if (receipt_url != nullptr) {
    
  } else {
    
  }
  receipt_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), receipt_url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.CancelHistory.receipt_url)
}

// -------------------------------------------------------------------

// Promotion

// string id = 1;
inline void Promotion::clear_id() {
  id_.ClearToEmpty();
}
inline const std::string& Promotion::id() const {
  // @@protoc_insertion_point(field_get:basis_v2.Promotion.id)
  return _internal_id();
}
inline void Promotion::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:basis_v2.Promotion.id)
}
inline std::string* Promotion::mutable_id() {
  // @@protoc_insertion_point(field_mutable:basis_v2.Promotion.id)
  return _internal_mutable_id();
}
inline const std::string& Promotion::_internal_id() const {
  return id_.Get();
}
inline void Promotion::_internal_set_id(const std::string& value) {
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Promotion::set_id(std::string&& value) {
  
  id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.Promotion.id)
}
inline void Promotion::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.Promotion.id)
}
inline void Promotion::set_id(const char* value,
    size_t size) {
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.Promotion.id)
}
inline std::string* Promotion::_internal_mutable_id() {
  
  return id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Promotion::release_id() {
  // @@protoc_insertion_point(field_release:basis_v2.Promotion.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Promotion::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.Promotion.id)
}

// int32 discount = 2;
inline void Promotion::clear_discount() {
  discount_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Promotion::_internal_discount() const {
  return discount_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Promotion::discount() const {
  // @@protoc_insertion_point(field_get:basis_v2.Promotion.discount)
  return _internal_discount();
}
inline void Promotion::_internal_set_discount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  discount_ = value;
}
inline void Promotion::set_discount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_discount(value);
  // @@protoc_insertion_point(field_set:basis_v2.Promotion.discount)
}

// -------------------------------------------------------------------

// UnitTx

// string amount = 1;
inline void UnitTx::clear_amount() {
  amount_.ClearToEmpty();
}
inline const std::string& UnitTx::amount() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.amount)
  return _internal_amount();
}
inline void UnitTx::set_amount(const std::string& value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.amount)
}
inline std::string* UnitTx::mutable_amount() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.amount)
  return _internal_mutable_amount();
}
inline const std::string& UnitTx::_internal_amount() const {
  return amount_.Get();
}
inline void UnitTx::_internal_set_amount(const std::string& value) {
  
  amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_amount(std::string&& value) {
  
  amount_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.amount)
}
inline void UnitTx::set_amount(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.amount)
}
inline void UnitTx::set_amount(const char* value,
    size_t size) {
  
  amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.amount)
}
inline std::string* UnitTx::_internal_mutable_amount() {
  
  return amount_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_amount() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.amount)
  return amount_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_amount(std::string* amount) {
  if (amount != nullptr) {
    
  } else {
    
  }
  amount_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), amount,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.amount)
}

// string apply_num = 2;
inline void UnitTx::clear_apply_num() {
  apply_num_.ClearToEmpty();
}
inline const std::string& UnitTx::apply_num() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.apply_num)
  return _internal_apply_num();
}
inline void UnitTx::set_apply_num(const std::string& value) {
  _internal_set_apply_num(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.apply_num)
}
inline std::string* UnitTx::mutable_apply_num() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.apply_num)
  return _internal_mutable_apply_num();
}
inline const std::string& UnitTx::_internal_apply_num() const {
  return apply_num_.Get();
}
inline void UnitTx::_internal_set_apply_num(const std::string& value) {
  
  apply_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_apply_num(std::string&& value) {
  
  apply_num_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.apply_num)
}
inline void UnitTx::set_apply_num(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  apply_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.apply_num)
}
inline void UnitTx::set_apply_num(const char* value,
    size_t size) {
  
  apply_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.apply_num)
}
inline std::string* UnitTx::_internal_mutable_apply_num() {
  
  return apply_num_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_apply_num() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.apply_num)
  return apply_num_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_apply_num(std::string* apply_num) {
  if (apply_num != nullptr) {
    
  } else {
    
  }
  apply_num_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), apply_num,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.apply_num)
}

// int32 bank_code = 3;
inline void UnitTx::clear_bank_code() {
  bank_code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnitTx::_internal_bank_code() const {
  return bank_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnitTx::bank_code() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.bank_code)
  return _internal_bank_code();
}
inline void UnitTx::_internal_set_bank_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bank_code_ = value;
}
inline void UnitTx::set_bank_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bank_code(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.bank_code)
}

// string bank_name = 4;
inline void UnitTx::clear_bank_name() {
  bank_name_.ClearToEmpty();
}
inline const std::string& UnitTx::bank_name() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.bank_name)
  return _internal_bank_name();
}
inline void UnitTx::set_bank_name(const std::string& value) {
  _internal_set_bank_name(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.bank_name)
}
inline std::string* UnitTx::mutable_bank_name() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.bank_name)
  return _internal_mutable_bank_name();
}
inline const std::string& UnitTx::_internal_bank_name() const {
  return bank_name_.Get();
}
inline void UnitTx::_internal_set_bank_name(const std::string& value) {
  
  bank_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_bank_name(std::string&& value) {
  
  bank_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.bank_name)
}
inline void UnitTx::set_bank_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bank_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.bank_name)
}
inline void UnitTx::set_bank_name(const char* value,
    size_t size) {
  
  bank_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.bank_name)
}
inline std::string* UnitTx::_internal_mutable_bank_name() {
  
  return bank_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_bank_name() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.bank_name)
  return bank_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_bank_name(std::string* bank_name) {
  if (bank_name != nullptr) {
    
  } else {
    
  }
  bank_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bank_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.bank_name)
}

// string buyer_addr = 5;
inline void UnitTx::clear_buyer_addr() {
  buyer_addr_.ClearToEmpty();
}
inline const std::string& UnitTx::buyer_addr() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.buyer_addr)
  return _internal_buyer_addr();
}
inline void UnitTx::set_buyer_addr(const std::string& value) {
  _internal_set_buyer_addr(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.buyer_addr)
}
inline std::string* UnitTx::mutable_buyer_addr() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.buyer_addr)
  return _internal_mutable_buyer_addr();
}
inline const std::string& UnitTx::_internal_buyer_addr() const {
  return buyer_addr_.Get();
}
inline void UnitTx::_internal_set_buyer_addr(const std::string& value) {
  
  buyer_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_buyer_addr(std::string&& value) {
  
  buyer_addr_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.buyer_addr)
}
inline void UnitTx::set_buyer_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  buyer_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.buyer_addr)
}
inline void UnitTx::set_buyer_addr(const char* value,
    size_t size) {
  
  buyer_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.buyer_addr)
}
inline std::string* UnitTx::_internal_mutable_buyer_addr() {
  
  return buyer_addr_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_buyer_addr() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.buyer_addr)
  return buyer_addr_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_buyer_addr(std::string* buyer_addr) {
  if (buyer_addr != nullptr) {
    
  } else {
    
  }
  buyer_addr_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), buyer_addr,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.buyer_addr)
}

// string buyer_email = 6;
inline void UnitTx::clear_buyer_email() {
  buyer_email_.ClearToEmpty();
}
inline const std::string& UnitTx::buyer_email() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.buyer_email)
  return _internal_buyer_email();
}
inline void UnitTx::set_buyer_email(const std::string& value) {
  _internal_set_buyer_email(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.buyer_email)
}
inline std::string* UnitTx::mutable_buyer_email() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.buyer_email)
  return _internal_mutable_buyer_email();
}
inline const std::string& UnitTx::_internal_buyer_email() const {
  return buyer_email_.Get();
}
inline void UnitTx::_internal_set_buyer_email(const std::string& value) {
  
  buyer_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_buyer_email(std::string&& value) {
  
  buyer_email_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.buyer_email)
}
inline void UnitTx::set_buyer_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  buyer_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.buyer_email)
}
inline void UnitTx::set_buyer_email(const char* value,
    size_t size) {
  
  buyer_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.buyer_email)
}
inline std::string* UnitTx::_internal_mutable_buyer_email() {
  
  return buyer_email_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_buyer_email() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.buyer_email)
  return buyer_email_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_buyer_email(std::string* buyer_email) {
  if (buyer_email != nullptr) {
    
  } else {
    
  }
  buyer_email_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), buyer_email,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.buyer_email)
}

// string buyer_name = 7;
inline void UnitTx::clear_buyer_name() {
  buyer_name_.ClearToEmpty();
}
inline const std::string& UnitTx::buyer_name() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.buyer_name)
  return _internal_buyer_name();
}
inline void UnitTx::set_buyer_name(const std::string& value) {
  _internal_set_buyer_name(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.buyer_name)
}
inline std::string* UnitTx::mutable_buyer_name() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.buyer_name)
  return _internal_mutable_buyer_name();
}
inline const std::string& UnitTx::_internal_buyer_name() const {
  return buyer_name_.Get();
}
inline void UnitTx::_internal_set_buyer_name(const std::string& value) {
  
  buyer_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_buyer_name(std::string&& value) {
  
  buyer_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.buyer_name)
}
inline void UnitTx::set_buyer_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  buyer_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.buyer_name)
}
inline void UnitTx::set_buyer_name(const char* value,
    size_t size) {
  
  buyer_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.buyer_name)
}
inline std::string* UnitTx::_internal_mutable_buyer_name() {
  
  return buyer_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_buyer_name() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.buyer_name)
  return buyer_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_buyer_name(std::string* buyer_name) {
  if (buyer_name != nullptr) {
    
  } else {
    
  }
  buyer_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), buyer_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.buyer_name)
}

// string buyer_postcode = 8;
inline void UnitTx::clear_buyer_postcode() {
  buyer_postcode_.ClearToEmpty();
}
inline const std::string& UnitTx::buyer_postcode() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.buyer_postcode)
  return _internal_buyer_postcode();
}
inline void UnitTx::set_buyer_postcode(const std::string& value) {
  _internal_set_buyer_postcode(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.buyer_postcode)
}
inline std::string* UnitTx::mutable_buyer_postcode() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.buyer_postcode)
  return _internal_mutable_buyer_postcode();
}
inline const std::string& UnitTx::_internal_buyer_postcode() const {
  return buyer_postcode_.Get();
}
inline void UnitTx::_internal_set_buyer_postcode(const std::string& value) {
  
  buyer_postcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_buyer_postcode(std::string&& value) {
  
  buyer_postcode_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.buyer_postcode)
}
inline void UnitTx::set_buyer_postcode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  buyer_postcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.buyer_postcode)
}
inline void UnitTx::set_buyer_postcode(const char* value,
    size_t size) {
  
  buyer_postcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.buyer_postcode)
}
inline std::string* UnitTx::_internal_mutable_buyer_postcode() {
  
  return buyer_postcode_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_buyer_postcode() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.buyer_postcode)
  return buyer_postcode_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_buyer_postcode(std::string* buyer_postcode) {
  if (buyer_postcode != nullptr) {
    
  } else {
    
  }
  buyer_postcode_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), buyer_postcode,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.buyer_postcode)
}

// string buyer_tel = 9;
inline void UnitTx::clear_buyer_tel() {
  buyer_tel_.ClearToEmpty();
}
inline const std::string& UnitTx::buyer_tel() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.buyer_tel)
  return _internal_buyer_tel();
}
inline void UnitTx::set_buyer_tel(const std::string& value) {
  _internal_set_buyer_tel(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.buyer_tel)
}
inline std::string* UnitTx::mutable_buyer_tel() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.buyer_tel)
  return _internal_mutable_buyer_tel();
}
inline const std::string& UnitTx::_internal_buyer_tel() const {
  return buyer_tel_.Get();
}
inline void UnitTx::_internal_set_buyer_tel(const std::string& value) {
  
  buyer_tel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_buyer_tel(std::string&& value) {
  
  buyer_tel_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.buyer_tel)
}
inline void UnitTx::set_buyer_tel(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  buyer_tel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.buyer_tel)
}
inline void UnitTx::set_buyer_tel(const char* value,
    size_t size) {
  
  buyer_tel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.buyer_tel)
}
inline std::string* UnitTx::_internal_mutable_buyer_tel() {
  
  return buyer_tel_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_buyer_tel() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.buyer_tel)
  return buyer_tel_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_buyer_tel(std::string* buyer_tel) {
  if (buyer_tel != nullptr) {
    
  } else {
    
  }
  buyer_tel_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), buyer_tel,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.buyer_tel)
}

// string cancel_amount = 10;
inline void UnitTx::clear_cancel_amount() {
  cancel_amount_.ClearToEmpty();
}
inline const std::string& UnitTx::cancel_amount() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.cancel_amount)
  return _internal_cancel_amount();
}
inline void UnitTx::set_cancel_amount(const std::string& value) {
  _internal_set_cancel_amount(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.cancel_amount)
}
inline std::string* UnitTx::mutable_cancel_amount() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.cancel_amount)
  return _internal_mutable_cancel_amount();
}
inline const std::string& UnitTx::_internal_cancel_amount() const {
  return cancel_amount_.Get();
}
inline void UnitTx::_internal_set_cancel_amount(const std::string& value) {
  
  cancel_amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_cancel_amount(std::string&& value) {
  
  cancel_amount_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.cancel_amount)
}
inline void UnitTx::set_cancel_amount(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cancel_amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.cancel_amount)
}
inline void UnitTx::set_cancel_amount(const char* value,
    size_t size) {
  
  cancel_amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.cancel_amount)
}
inline std::string* UnitTx::_internal_mutable_cancel_amount() {
  
  return cancel_amount_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_cancel_amount() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.cancel_amount)
  return cancel_amount_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_cancel_amount(std::string* cancel_amount) {
  if (cancel_amount != nullptr) {
    
  } else {
    
  }
  cancel_amount_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cancel_amount,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.cancel_amount)
}

// repeated .basis_v2.CancelHistory cancel_history = 11;
inline int UnitTx::_internal_cancel_history_size() const {
  return cancel_history_.size();
}
inline int UnitTx::cancel_history_size() const {
  return _internal_cancel_history_size();
}
inline void UnitTx::clear_cancel_history() {
  cancel_history_.Clear();
}
inline ::basis_v2::CancelHistory* UnitTx::mutable_cancel_history(int index) {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.cancel_history)
  return cancel_history_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::basis_v2::CancelHistory >*
UnitTx::mutable_cancel_history() {
  // @@protoc_insertion_point(field_mutable_list:basis_v2.UnitTx.cancel_history)
  return &cancel_history_;
}
inline const ::basis_v2::CancelHistory& UnitTx::_internal_cancel_history(int index) const {
  return cancel_history_.Get(index);
}
inline const ::basis_v2::CancelHistory& UnitTx::cancel_history(int index) const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.cancel_history)
  return _internal_cancel_history(index);
}
inline ::basis_v2::CancelHistory* UnitTx::_internal_add_cancel_history() {
  return cancel_history_.Add();
}
inline ::basis_v2::CancelHistory* UnitTx::add_cancel_history() {
  // @@protoc_insertion_point(field_add:basis_v2.UnitTx.cancel_history)
  return _internal_add_cancel_history();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::basis_v2::CancelHistory >&
UnitTx::cancel_history() const {
  // @@protoc_insertion_point(field_list:basis_v2.UnitTx.cancel_history)
  return cancel_history_;
}

// string cancel_reason = 12;
inline void UnitTx::clear_cancel_reason() {
  cancel_reason_.ClearToEmpty();
}
inline const std::string& UnitTx::cancel_reason() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.cancel_reason)
  return _internal_cancel_reason();
}
inline void UnitTx::set_cancel_reason(const std::string& value) {
  _internal_set_cancel_reason(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.cancel_reason)
}
inline std::string* UnitTx::mutable_cancel_reason() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.cancel_reason)
  return _internal_mutable_cancel_reason();
}
inline const std::string& UnitTx::_internal_cancel_reason() const {
  return cancel_reason_.Get();
}
inline void UnitTx::_internal_set_cancel_reason(const std::string& value) {
  
  cancel_reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_cancel_reason(std::string&& value) {
  
  cancel_reason_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.cancel_reason)
}
inline void UnitTx::set_cancel_reason(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cancel_reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.cancel_reason)
}
inline void UnitTx::set_cancel_reason(const char* value,
    size_t size) {
  
  cancel_reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.cancel_reason)
}
inline std::string* UnitTx::_internal_mutable_cancel_reason() {
  
  return cancel_reason_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_cancel_reason() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.cancel_reason)
  return cancel_reason_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_cancel_reason(std::string* cancel_reason) {
  if (cancel_reason != nullptr) {
    
  } else {
    
  }
  cancel_reason_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cancel_reason,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.cancel_reason)
}

// repeated string cancel_receipt_urls = 13;
inline int UnitTx::_internal_cancel_receipt_urls_size() const {
  return cancel_receipt_urls_.size();
}
inline int UnitTx::cancel_receipt_urls_size() const {
  return _internal_cancel_receipt_urls_size();
}
inline void UnitTx::clear_cancel_receipt_urls() {
  cancel_receipt_urls_.Clear();
}
inline std::string* UnitTx::add_cancel_receipt_urls() {
  // @@protoc_insertion_point(field_add_mutable:basis_v2.UnitTx.cancel_receipt_urls)
  return _internal_add_cancel_receipt_urls();
}
inline const std::string& UnitTx::_internal_cancel_receipt_urls(int index) const {
  return cancel_receipt_urls_.Get(index);
}
inline const std::string& UnitTx::cancel_receipt_urls(int index) const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.cancel_receipt_urls)
  return _internal_cancel_receipt_urls(index);
}
inline std::string* UnitTx::mutable_cancel_receipt_urls(int index) {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.cancel_receipt_urls)
  return cancel_receipt_urls_.Mutable(index);
}
inline void UnitTx::set_cancel_receipt_urls(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.cancel_receipt_urls)
  cancel_receipt_urls_.Mutable(index)->assign(value);
}
inline void UnitTx::set_cancel_receipt_urls(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.cancel_receipt_urls)
  cancel_receipt_urls_.Mutable(index)->assign(std::move(value));
}
inline void UnitTx::set_cancel_receipt_urls(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  cancel_receipt_urls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.cancel_receipt_urls)
}
inline void UnitTx::set_cancel_receipt_urls(int index, const char* value, size_t size) {
  cancel_receipt_urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.cancel_receipt_urls)
}
inline std::string* UnitTx::_internal_add_cancel_receipt_urls() {
  return cancel_receipt_urls_.Add();
}
inline void UnitTx::add_cancel_receipt_urls(const std::string& value) {
  cancel_receipt_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:basis_v2.UnitTx.cancel_receipt_urls)
}
inline void UnitTx::add_cancel_receipt_urls(std::string&& value) {
  cancel_receipt_urls_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:basis_v2.UnitTx.cancel_receipt_urls)
}
inline void UnitTx::add_cancel_receipt_urls(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  cancel_receipt_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:basis_v2.UnitTx.cancel_receipt_urls)
}
inline void UnitTx::add_cancel_receipt_urls(const char* value, size_t size) {
  cancel_receipt_urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:basis_v2.UnitTx.cancel_receipt_urls)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
UnitTx::cancel_receipt_urls() const {
  // @@protoc_insertion_point(field_list:basis_v2.UnitTx.cancel_receipt_urls)
  return cancel_receipt_urls_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
UnitTx::mutable_cancel_receipt_urls() {
  // @@protoc_insertion_point(field_mutable_list:basis_v2.UnitTx.cancel_receipt_urls)
  return &cancel_receipt_urls_;
}

// int32 cancelled_at = 14;
inline void UnitTx::clear_cancelled_at() {
  cancelled_at_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnitTx::_internal_cancelled_at() const {
  return cancelled_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnitTx::cancelled_at() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.cancelled_at)
  return _internal_cancelled_at();
}
inline void UnitTx::_internal_set_cancelled_at(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cancelled_at_ = value;
}
inline void UnitTx::set_cancelled_at(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cancelled_at(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.cancelled_at)
}

// string card_code = 15;
inline void UnitTx::clear_card_code() {
  card_code_.ClearToEmpty();
}
inline const std::string& UnitTx::card_code() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.card_code)
  return _internal_card_code();
}
inline void UnitTx::set_card_code(const std::string& value) {
  _internal_set_card_code(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.card_code)
}
inline std::string* UnitTx::mutable_card_code() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.card_code)
  return _internal_mutable_card_code();
}
inline const std::string& UnitTx::_internal_card_code() const {
  return card_code_.Get();
}
inline void UnitTx::_internal_set_card_code(const std::string& value) {
  
  card_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_card_code(std::string&& value) {
  
  card_code_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.card_code)
}
inline void UnitTx::set_card_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  card_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.card_code)
}
inline void UnitTx::set_card_code(const char* value,
    size_t size) {
  
  card_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.card_code)
}
inline std::string* UnitTx::_internal_mutable_card_code() {
  
  return card_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_card_code() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.card_code)
  return card_code_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_card_code(std::string* card_code) {
  if (card_code != nullptr) {
    
  } else {
    
  }
  card_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), card_code,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.card_code)
}

// string bin_number = 16;
inline void UnitTx::clear_bin_number() {
  bin_number_.ClearToEmpty();
}
inline const std::string& UnitTx::bin_number() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.bin_number)
  return _internal_bin_number();
}
inline void UnitTx::set_bin_number(const std::string& value) {
  _internal_set_bin_number(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.bin_number)
}
inline std::string* UnitTx::mutable_bin_number() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.bin_number)
  return _internal_mutable_bin_number();
}
inline const std::string& UnitTx::_internal_bin_number() const {
  return bin_number_.Get();
}
inline void UnitTx::_internal_set_bin_number(const std::string& value) {
  
  bin_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_bin_number(std::string&& value) {
  
  bin_number_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.bin_number)
}
inline void UnitTx::set_bin_number(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bin_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.bin_number)
}
inline void UnitTx::set_bin_number(const char* value,
    size_t size) {
  
  bin_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.bin_number)
}
inline std::string* UnitTx::_internal_mutable_bin_number() {
  
  return bin_number_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_bin_number() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.bin_number)
  return bin_number_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_bin_number(std::string* bin_number) {
  if (bin_number != nullptr) {
    
  } else {
    
  }
  bin_number_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bin_number,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.bin_number)
}

// string card_name = 17;
inline void UnitTx::clear_card_name() {
  card_name_.ClearToEmpty();
}
inline const std::string& UnitTx::card_name() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.card_name)
  return _internal_card_name();
}
inline void UnitTx::set_card_name(const std::string& value) {
  _internal_set_card_name(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.card_name)
}
inline std::string* UnitTx::mutable_card_name() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.card_name)
  return _internal_mutable_card_name();
}
inline const std::string& UnitTx::_internal_card_name() const {
  return card_name_.Get();
}
inline void UnitTx::_internal_set_card_name(const std::string& value) {
  
  card_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_card_name(std::string&& value) {
  
  card_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.card_name)
}
inline void UnitTx::set_card_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  card_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.card_name)
}
inline void UnitTx::set_card_name(const char* value,
    size_t size) {
  
  card_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.card_name)
}
inline std::string* UnitTx::_internal_mutable_card_name() {
  
  return card_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_card_name() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.card_name)
  return card_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_card_name(std::string* card_name) {
  if (card_name != nullptr) {
    
  } else {
    
  }
  card_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), card_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.card_name)
}

// string card_receipe_name = 18;
inline void UnitTx::clear_card_receipe_name() {
  card_receipe_name_.ClearToEmpty();
}
inline const std::string& UnitTx::card_receipe_name() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.card_receipe_name)
  return _internal_card_receipe_name();
}
inline void UnitTx::set_card_receipe_name(const std::string& value) {
  _internal_set_card_receipe_name(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.card_receipe_name)
}
inline std::string* UnitTx::mutable_card_receipe_name() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.card_receipe_name)
  return _internal_mutable_card_receipe_name();
}
inline const std::string& UnitTx::_internal_card_receipe_name() const {
  return card_receipe_name_.Get();
}
inline void UnitTx::_internal_set_card_receipe_name(const std::string& value) {
  
  card_receipe_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_card_receipe_name(std::string&& value) {
  
  card_receipe_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.card_receipe_name)
}
inline void UnitTx::set_card_receipe_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  card_receipe_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.card_receipe_name)
}
inline void UnitTx::set_card_receipe_name(const char* value,
    size_t size) {
  
  card_receipe_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.card_receipe_name)
}
inline std::string* UnitTx::_internal_mutable_card_receipe_name() {
  
  return card_receipe_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_card_receipe_name() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.card_receipe_name)
  return card_receipe_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_card_receipe_name(std::string* card_receipe_name) {
  if (card_receipe_name != nullptr) {
    
  } else {
    
  }
  card_receipe_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), card_receipe_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.card_receipe_name)
}

// string card_owner_type = 19;
inline void UnitTx::clear_card_owner_type() {
  card_owner_type_.ClearToEmpty();
}
inline const std::string& UnitTx::card_owner_type() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.card_owner_type)
  return _internal_card_owner_type();
}
inline void UnitTx::set_card_owner_type(const std::string& value) {
  _internal_set_card_owner_type(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.card_owner_type)
}
inline std::string* UnitTx::mutable_card_owner_type() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.card_owner_type)
  return _internal_mutable_card_owner_type();
}
inline const std::string& UnitTx::_internal_card_owner_type() const {
  return card_owner_type_.Get();
}
inline void UnitTx::_internal_set_card_owner_type(const std::string& value) {
  
  card_owner_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_card_owner_type(std::string&& value) {
  
  card_owner_type_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.card_owner_type)
}
inline void UnitTx::set_card_owner_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  card_owner_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.card_owner_type)
}
inline void UnitTx::set_card_owner_type(const char* value,
    size_t size) {
  
  card_owner_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.card_owner_type)
}
inline std::string* UnitTx::_internal_mutable_card_owner_type() {
  
  return card_owner_type_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_card_owner_type() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.card_owner_type)
  return card_owner_type_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_card_owner_type(std::string* card_owner_type) {
  if (card_owner_type != nullptr) {
    
  } else {
    
  }
  card_owner_type_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), card_owner_type,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.card_owner_type)
}

// string card_brand = 20;
inline void UnitTx::clear_card_brand() {
  card_brand_.ClearToEmpty();
}
inline const std::string& UnitTx::card_brand() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.card_brand)
  return _internal_card_brand();
}
inline void UnitTx::set_card_brand(const std::string& value) {
  _internal_set_card_brand(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.card_brand)
}
inline std::string* UnitTx::mutable_card_brand() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.card_brand)
  return _internal_mutable_card_brand();
}
inline const std::string& UnitTx::_internal_card_brand() const {
  return card_brand_.Get();
}
inline void UnitTx::_internal_set_card_brand(const std::string& value) {
  
  card_brand_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_card_brand(std::string&& value) {
  
  card_brand_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.card_brand)
}
inline void UnitTx::set_card_brand(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  card_brand_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.card_brand)
}
inline void UnitTx::set_card_brand(const char* value,
    size_t size) {
  
  card_brand_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.card_brand)
}
inline std::string* UnitTx::_internal_mutable_card_brand() {
  
  return card_brand_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_card_brand() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.card_brand)
  return card_brand_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_card_brand(std::string* card_brand) {
  if (card_brand != nullptr) {
    
  } else {
    
  }
  card_brand_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), card_brand,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.card_brand)
}

// string card_credit_type = 21;
inline void UnitTx::clear_card_credit_type() {
  card_credit_type_.ClearToEmpty();
}
inline const std::string& UnitTx::card_credit_type() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.card_credit_type)
  return _internal_card_credit_type();
}
inline void UnitTx::set_card_credit_type(const std::string& value) {
  _internal_set_card_credit_type(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.card_credit_type)
}
inline std::string* UnitTx::mutable_card_credit_type() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.card_credit_type)
  return _internal_mutable_card_credit_type();
}
inline const std::string& UnitTx::_internal_card_credit_type() const {
  return card_credit_type_.Get();
}
inline void UnitTx::_internal_set_card_credit_type(const std::string& value) {
  
  card_credit_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_card_credit_type(std::string&& value) {
  
  card_credit_type_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.card_credit_type)
}
inline void UnitTx::set_card_credit_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  card_credit_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.card_credit_type)
}
inline void UnitTx::set_card_credit_type(const char* value,
    size_t size) {
  
  card_credit_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.card_credit_type)
}
inline std::string* UnitTx::_internal_mutable_card_credit_type() {
  
  return card_credit_type_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_card_credit_type() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.card_credit_type)
  return card_credit_type_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_card_credit_type(std::string* card_credit_type) {
  if (card_credit_type != nullptr) {
    
  } else {
    
  }
  card_credit_type_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), card_credit_type,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.card_credit_type)
}

// string card_number = 22;
inline void UnitTx::clear_card_number() {
  card_number_.ClearToEmpty();
}
inline const std::string& UnitTx::card_number() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.card_number)
  return _internal_card_number();
}
inline void UnitTx::set_card_number(const std::string& value) {
  _internal_set_card_number(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.card_number)
}
inline std::string* UnitTx::mutable_card_number() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.card_number)
  return _internal_mutable_card_number();
}
inline const std::string& UnitTx::_internal_card_number() const {
  return card_number_.Get();
}
inline void UnitTx::_internal_set_card_number(const std::string& value) {
  
  card_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_card_number(std::string&& value) {
  
  card_number_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.card_number)
}
inline void UnitTx::set_card_number(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  card_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.card_number)
}
inline void UnitTx::set_card_number(const char* value,
    size_t size) {
  
  card_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.card_number)
}
inline std::string* UnitTx::_internal_mutable_card_number() {
  
  return card_number_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_card_number() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.card_number)
  return card_number_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_card_number(std::string* card_number) {
  if (card_number != nullptr) {
    
  } else {
    
  }
  card_number_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), card_number,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.card_number)
}

// int32 card_installment = 23;
inline void UnitTx::clear_card_installment() {
  card_installment_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnitTx::_internal_card_installment() const {
  return card_installment_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnitTx::card_installment() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.card_installment)
  return _internal_card_installment();
}
inline void UnitTx::_internal_set_card_installment(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  card_installment_ = value;
}
inline void UnitTx::set_card_installment(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_card_installment(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.card_installment)
}

// int32 card_type = 24;
inline void UnitTx::clear_card_type() {
  card_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnitTx::_internal_card_type() const {
  return card_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnitTx::card_type() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.card_type)
  return _internal_card_type();
}
inline void UnitTx::_internal_set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  card_type_ = value;
}
inline void UnitTx::set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_card_type(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.card_type)
}

// bool cash_receipt_issued = 25;
inline void UnitTx::clear_cash_receipt_issued() {
  cash_receipt_issued_ = false;
}
inline bool UnitTx::_internal_cash_receipt_issued() const {
  return cash_receipt_issued_;
}
inline bool UnitTx::cash_receipt_issued() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.cash_receipt_issued)
  return _internal_cash_receipt_issued();
}
inline void UnitTx::_internal_set_cash_receipt_issued(bool value) {
  
  cash_receipt_issued_ = value;
}
inline void UnitTx::set_cash_receipt_issued(bool value) {
  _internal_set_cash_receipt_issued(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.cash_receipt_issued)
}

// string channel = 26;
inline void UnitTx::clear_channel() {
  channel_.ClearToEmpty();
}
inline const std::string& UnitTx::channel() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.channel)
  return _internal_channel();
}
inline void UnitTx::set_channel(const std::string& value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.channel)
}
inline std::string* UnitTx::mutable_channel() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.channel)
  return _internal_mutable_channel();
}
inline const std::string& UnitTx::_internal_channel() const {
  return channel_.Get();
}
inline void UnitTx::_internal_set_channel(const std::string& value) {
  
  channel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_channel(std::string&& value) {
  
  channel_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.channel)
}
inline void UnitTx::set_channel(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  channel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.channel)
}
inline void UnitTx::set_channel(const char* value,
    size_t size) {
  
  channel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.channel)
}
inline std::string* UnitTx::_internal_mutable_channel() {
  
  return channel_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_channel() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.channel)
  return channel_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_channel(std::string* channel) {
  if (channel != nullptr) {
    
  } else {
    
  }
  channel_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), channel,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.channel)
}

// string currency = 27;
inline void UnitTx::clear_currency() {
  currency_.ClearToEmpty();
}
inline const std::string& UnitTx::currency() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.currency)
  return _internal_currency();
}
inline void UnitTx::set_currency(const std::string& value) {
  _internal_set_currency(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.currency)
}
inline std::string* UnitTx::mutable_currency() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.currency)
  return _internal_mutable_currency();
}
inline const std::string& UnitTx::_internal_currency() const {
  return currency_.Get();
}
inline void UnitTx::_internal_set_currency(const std::string& value) {
  
  currency_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_currency(std::string&& value) {
  
  currency_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.currency)
}
inline void UnitTx::set_currency(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  currency_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.currency)
}
inline void UnitTx::set_currency(const char* value,
    size_t size) {
  
  currency_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.currency)
}
inline std::string* UnitTx::_internal_mutable_currency() {
  
  return currency_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_currency() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.currency)
  return currency_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_currency(std::string* currency) {
  if (currency != nullptr) {
    
  } else {
    
  }
  currency_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), currency,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.currency)
}

// string custom_data = 28;
inline void UnitTx::clear_custom_data() {
  custom_data_.ClearToEmpty();
}
inline const std::string& UnitTx::custom_data() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.custom_data)
  return _internal_custom_data();
}
inline void UnitTx::set_custom_data(const std::string& value) {
  _internal_set_custom_data(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.custom_data)
}
inline std::string* UnitTx::mutable_custom_data() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.custom_data)
  return _internal_mutable_custom_data();
}
inline const std::string& UnitTx::_internal_custom_data() const {
  return custom_data_.Get();
}
inline void UnitTx::_internal_set_custom_data(const std::string& value) {
  
  custom_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_custom_data(std::string&& value) {
  
  custom_data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.custom_data)
}
inline void UnitTx::set_custom_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  custom_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.custom_data)
}
inline void UnitTx::set_custom_data(const char* value,
    size_t size) {
  
  custom_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.custom_data)
}
inline std::string* UnitTx::_internal_mutable_custom_data() {
  
  return custom_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_custom_data() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.custom_data)
  return custom_data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_custom_data(std::string* custom_data) {
  if (custom_data != nullptr) {
    
  } else {
    
  }
  custom_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), custom_data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.custom_data)
}

// string card_uid = 29;
inline void UnitTx::clear_card_uid() {
  card_uid_.ClearToEmpty();
}
inline const std::string& UnitTx::card_uid() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.card_uid)
  return _internal_card_uid();
}
inline void UnitTx::set_card_uid(const std::string& value) {
  _internal_set_card_uid(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.card_uid)
}
inline std::string* UnitTx::mutable_card_uid() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.card_uid)
  return _internal_mutable_card_uid();
}
inline const std::string& UnitTx::_internal_card_uid() const {
  return card_uid_.Get();
}
inline void UnitTx::_internal_set_card_uid(const std::string& value) {
  
  card_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_card_uid(std::string&& value) {
  
  card_uid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.card_uid)
}
inline void UnitTx::set_card_uid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  card_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.card_uid)
}
inline void UnitTx::set_card_uid(const char* value,
    size_t size) {
  
  card_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.card_uid)
}
inline std::string* UnitTx::_internal_mutable_card_uid() {
  
  return card_uid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_card_uid() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.card_uid)
  return card_uid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_card_uid(std::string* card_uid) {
  if (card_uid != nullptr) {
    
  } else {
    
  }
  card_uid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), card_uid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.card_uid)
}

// string customer_uid_usage = 30;
inline void UnitTx::clear_customer_uid_usage() {
  customer_uid_usage_.ClearToEmpty();
}
inline const std::string& UnitTx::customer_uid_usage() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.customer_uid_usage)
  return _internal_customer_uid_usage();
}
inline void UnitTx::set_customer_uid_usage(const std::string& value) {
  _internal_set_customer_uid_usage(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.customer_uid_usage)
}
inline std::string* UnitTx::mutable_customer_uid_usage() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.customer_uid_usage)
  return _internal_mutable_customer_uid_usage();
}
inline const std::string& UnitTx::_internal_customer_uid_usage() const {
  return customer_uid_usage_.Get();
}
inline void UnitTx::_internal_set_customer_uid_usage(const std::string& value) {
  
  customer_uid_usage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_customer_uid_usage(std::string&& value) {
  
  customer_uid_usage_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.customer_uid_usage)
}
inline void UnitTx::set_customer_uid_usage(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_uid_usage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.customer_uid_usage)
}
inline void UnitTx::set_customer_uid_usage(const char* value,
    size_t size) {
  
  customer_uid_usage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.customer_uid_usage)
}
inline std::string* UnitTx::_internal_mutable_customer_uid_usage() {
  
  return customer_uid_usage_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_customer_uid_usage() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.customer_uid_usage)
  return customer_uid_usage_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_customer_uid_usage(std::string* customer_uid_usage) {
  if (customer_uid_usage != nullptr) {
    
  } else {
    
  }
  customer_uid_usage_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), customer_uid_usage,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.customer_uid_usage)
}

// bool escrow = 31;
inline void UnitTx::clear_escrow() {
  escrow_ = false;
}
inline bool UnitTx::_internal_escrow() const {
  return escrow_;
}
inline bool UnitTx::escrow() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.escrow)
  return _internal_escrow();
}
inline void UnitTx::_internal_set_escrow(bool value) {
  
  escrow_ = value;
}
inline void UnitTx::set_escrow(bool value) {
  _internal_set_escrow(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.escrow)
}

// string fail_reason = 32;
inline void UnitTx::clear_fail_reason() {
  fail_reason_.ClearToEmpty();
}
inline const std::string& UnitTx::fail_reason() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.fail_reason)
  return _internal_fail_reason();
}
inline void UnitTx::set_fail_reason(const std::string& value) {
  _internal_set_fail_reason(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.fail_reason)
}
inline std::string* UnitTx::mutable_fail_reason() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.fail_reason)
  return _internal_mutable_fail_reason();
}
inline const std::string& UnitTx::_internal_fail_reason() const {
  return fail_reason_.Get();
}
inline void UnitTx::_internal_set_fail_reason(const std::string& value) {
  
  fail_reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_fail_reason(std::string&& value) {
  
  fail_reason_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.fail_reason)
}
inline void UnitTx::set_fail_reason(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  fail_reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.fail_reason)
}
inline void UnitTx::set_fail_reason(const char* value,
    size_t size) {
  
  fail_reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.fail_reason)
}
inline std::string* UnitTx::_internal_mutable_fail_reason() {
  
  return fail_reason_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_fail_reason() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.fail_reason)
  return fail_reason_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_fail_reason(std::string* fail_reason) {
  if (fail_reason != nullptr) {
    
  } else {
    
  }
  fail_reason_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), fail_reason,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.fail_reason)
}

// int32 failed_at = 33;
inline void UnitTx::clear_failed_at() {
  failed_at_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnitTx::_internal_failed_at() const {
  return failed_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnitTx::failed_at() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.failed_at)
  return _internal_failed_at();
}
inline void UnitTx::_internal_set_failed_at(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  failed_at_ = value;
}
inline void UnitTx::set_failed_at(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_failed_at(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.failed_at)
}

// string imp_uid = 34;
inline void UnitTx::clear_imp_uid() {
  imp_uid_.ClearToEmpty();
}
inline const std::string& UnitTx::imp_uid() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.imp_uid)
  return _internal_imp_uid();
}
inline void UnitTx::set_imp_uid(const std::string& value) {
  _internal_set_imp_uid(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.imp_uid)
}
inline std::string* UnitTx::mutable_imp_uid() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.imp_uid)
  return _internal_mutable_imp_uid();
}
inline const std::string& UnitTx::_internal_imp_uid() const {
  return imp_uid_.Get();
}
inline void UnitTx::_internal_set_imp_uid(const std::string& value) {
  
  imp_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_imp_uid(std::string&& value) {
  
  imp_uid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.imp_uid)
}
inline void UnitTx::set_imp_uid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  imp_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.imp_uid)
}
inline void UnitTx::set_imp_uid(const char* value,
    size_t size) {
  
  imp_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.imp_uid)
}
inline std::string* UnitTx::_internal_mutable_imp_uid() {
  
  return imp_uid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_imp_uid() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.imp_uid)
  return imp_uid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_imp_uid(std::string* imp_uid) {
  if (imp_uid != nullptr) {
    
  } else {
    
  }
  imp_uid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), imp_uid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.imp_uid)
}

// string merchant_uid = 35;
inline void UnitTx::clear_merchant_uid() {
  merchant_uid_.ClearToEmpty();
}
inline const std::string& UnitTx::merchant_uid() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.merchant_uid)
  return _internal_merchant_uid();
}
inline void UnitTx::set_merchant_uid(const std::string& value) {
  _internal_set_merchant_uid(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.merchant_uid)
}
inline std::string* UnitTx::mutable_merchant_uid() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.merchant_uid)
  return _internal_mutable_merchant_uid();
}
inline const std::string& UnitTx::_internal_merchant_uid() const {
  return merchant_uid_.Get();
}
inline void UnitTx::_internal_set_merchant_uid(const std::string& value) {
  
  merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_merchant_uid(std::string&& value) {
  
  merchant_uid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.merchant_uid)
}
inline void UnitTx::set_merchant_uid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.merchant_uid)
}
inline void UnitTx::set_merchant_uid(const char* value,
    size_t size) {
  
  merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.merchant_uid)
}
inline std::string* UnitTx::_internal_mutable_merchant_uid() {
  
  return merchant_uid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_merchant_uid() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.merchant_uid)
  return merchant_uid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_merchant_uid(std::string* merchant_uid) {
  if (merchant_uid != nullptr) {
    
  } else {
    
  }
  merchant_uid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), merchant_uid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.merchant_uid)
}

// string order_name = 36;
inline void UnitTx::clear_order_name() {
  order_name_.ClearToEmpty();
}
inline const std::string& UnitTx::order_name() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.order_name)
  return _internal_order_name();
}
inline void UnitTx::set_order_name(const std::string& value) {
  _internal_set_order_name(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.order_name)
}
inline std::string* UnitTx::mutable_order_name() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.order_name)
  return _internal_mutable_order_name();
}
inline const std::string& UnitTx::_internal_order_name() const {
  return order_name_.Get();
}
inline void UnitTx::_internal_set_order_name(const std::string& value) {
  
  order_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_order_name(std::string&& value) {
  
  order_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.order_name)
}
inline void UnitTx::set_order_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  order_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.order_name)
}
inline void UnitTx::set_order_name(const char* value,
    size_t size) {
  
  order_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.order_name)
}
inline std::string* UnitTx::_internal_mutable_order_name() {
  
  return order_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_order_name() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.order_name)
  return order_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_order_name(std::string* order_name) {
  if (order_name != nullptr) {
    
  } else {
    
  }
  order_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), order_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.order_name)
}

// int32 paid_at = 37;
inline void UnitTx::clear_paid_at() {
  paid_at_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnitTx::_internal_paid_at() const {
  return paid_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnitTx::paid_at() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.paid_at)
  return _internal_paid_at();
}
inline void UnitTx::_internal_set_paid_at(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  paid_at_ = value;
}
inline void UnitTx::set_paid_at(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_paid_at(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.paid_at)
}

// string pay_method = 38;
inline void UnitTx::clear_pay_method() {
  pay_method_.ClearToEmpty();
}
inline const std::string& UnitTx::pay_method() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.pay_method)
  return _internal_pay_method();
}
inline void UnitTx::set_pay_method(const std::string& value) {
  _internal_set_pay_method(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.pay_method)
}
inline std::string* UnitTx::mutable_pay_method() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.pay_method)
  return _internal_mutable_pay_method();
}
inline const std::string& UnitTx::_internal_pay_method() const {
  return pay_method_.Get();
}
inline void UnitTx::_internal_set_pay_method(const std::string& value) {
  
  pay_method_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_pay_method(std::string&& value) {
  
  pay_method_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.pay_method)
}
inline void UnitTx::set_pay_method(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pay_method_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.pay_method)
}
inline void UnitTx::set_pay_method(const char* value,
    size_t size) {
  
  pay_method_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.pay_method)
}
inline std::string* UnitTx::_internal_mutable_pay_method() {
  
  return pay_method_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_pay_method() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.pay_method)
  return pay_method_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_pay_method(std::string* pay_method) {
  if (pay_method != nullptr) {
    
  } else {
    
  }
  pay_method_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pay_method,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.pay_method)
}

// string pg_id = 39;
inline void UnitTx::clear_pg_id() {
  pg_id_.ClearToEmpty();
}
inline const std::string& UnitTx::pg_id() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.pg_id)
  return _internal_pg_id();
}
inline void UnitTx::set_pg_id(const std::string& value) {
  _internal_set_pg_id(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.pg_id)
}
inline std::string* UnitTx::mutable_pg_id() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.pg_id)
  return _internal_mutable_pg_id();
}
inline const std::string& UnitTx::_internal_pg_id() const {
  return pg_id_.Get();
}
inline void UnitTx::_internal_set_pg_id(const std::string& value) {
  
  pg_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_pg_id(std::string&& value) {
  
  pg_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.pg_id)
}
inline void UnitTx::set_pg_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pg_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.pg_id)
}
inline void UnitTx::set_pg_id(const char* value,
    size_t size) {
  
  pg_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.pg_id)
}
inline std::string* UnitTx::_internal_mutable_pg_id() {
  
  return pg_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_pg_id() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.pg_id)
  return pg_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_pg_id(std::string* pg_id) {
  if (pg_id != nullptr) {
    
  } else {
    
  }
  pg_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pg_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.pg_id)
}

// string pg_provider = 40;
inline void UnitTx::clear_pg_provider() {
  pg_provider_.ClearToEmpty();
}
inline const std::string& UnitTx::pg_provider() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.pg_provider)
  return _internal_pg_provider();
}
inline void UnitTx::set_pg_provider(const std::string& value) {
  _internal_set_pg_provider(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.pg_provider)
}
inline std::string* UnitTx::mutable_pg_provider() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.pg_provider)
  return _internal_mutable_pg_provider();
}
inline const std::string& UnitTx::_internal_pg_provider() const {
  return pg_provider_.Get();
}
inline void UnitTx::_internal_set_pg_provider(const std::string& value) {
  
  pg_provider_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_pg_provider(std::string&& value) {
  
  pg_provider_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.pg_provider)
}
inline void UnitTx::set_pg_provider(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pg_provider_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.pg_provider)
}
inline void UnitTx::set_pg_provider(const char* value,
    size_t size) {
  
  pg_provider_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.pg_provider)
}
inline std::string* UnitTx::_internal_mutable_pg_provider() {
  
  return pg_provider_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_pg_provider() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.pg_provider)
  return pg_provider_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_pg_provider(std::string* pg_provider) {
  if (pg_provider != nullptr) {
    
  } else {
    
  }
  pg_provider_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pg_provider,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.pg_provider)
}

// string pg_tid = 41;
inline void UnitTx::clear_pg_tid() {
  pg_tid_.ClearToEmpty();
}
inline const std::string& UnitTx::pg_tid() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.pg_tid)
  return _internal_pg_tid();
}
inline void UnitTx::set_pg_tid(const std::string& value) {
  _internal_set_pg_tid(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.pg_tid)
}
inline std::string* UnitTx::mutable_pg_tid() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.pg_tid)
  return _internal_mutable_pg_tid();
}
inline const std::string& UnitTx::_internal_pg_tid() const {
  return pg_tid_.Get();
}
inline void UnitTx::_internal_set_pg_tid(const std::string& value) {
  
  pg_tid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_pg_tid(std::string&& value) {
  
  pg_tid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.pg_tid)
}
inline void UnitTx::set_pg_tid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pg_tid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.pg_tid)
}
inline void UnitTx::set_pg_tid(const char* value,
    size_t size) {
  
  pg_tid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.pg_tid)
}
inline std::string* UnitTx::_internal_mutable_pg_tid() {
  
  return pg_tid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_pg_tid() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.pg_tid)
  return pg_tid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_pg_tid(std::string* pg_tid) {
  if (pg_tid != nullptr) {
    
  } else {
    
  }
  pg_tid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pg_tid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.pg_tid)
}

// string receipt_url = 42;
inline void UnitTx::clear_receipt_url() {
  receipt_url_.ClearToEmpty();
}
inline const std::string& UnitTx::receipt_url() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.receipt_url)
  return _internal_receipt_url();
}
inline void UnitTx::set_receipt_url(const std::string& value) {
  _internal_set_receipt_url(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.receipt_url)
}
inline std::string* UnitTx::mutable_receipt_url() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.receipt_url)
  return _internal_mutable_receipt_url();
}
inline const std::string& UnitTx::_internal_receipt_url() const {
  return receipt_url_.Get();
}
inline void UnitTx::_internal_set_receipt_url(const std::string& value) {
  
  receipt_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_receipt_url(std::string&& value) {
  
  receipt_url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.receipt_url)
}
inline void UnitTx::set_receipt_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  receipt_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.receipt_url)
}
inline void UnitTx::set_receipt_url(const char* value,
    size_t size) {
  
  receipt_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.receipt_url)
}
inline std::string* UnitTx::_internal_mutable_receipt_url() {
  
  return receipt_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_receipt_url() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.receipt_url)
  return receipt_url_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_receipt_url(std::string* receipt_url) {
  if (receipt_url != nullptr) {
    
  } else {
    
  }
  receipt_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), receipt_url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.receipt_url)
}

// int32 started_at = 43;
inline void UnitTx::clear_started_at() {
  started_at_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnitTx::_internal_started_at() const {
  return started_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnitTx::started_at() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.started_at)
  return _internal_started_at();
}
inline void UnitTx::_internal_set_started_at(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  started_at_ = value;
}
inline void UnitTx::set_started_at(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_started_at(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.started_at)
}

// string status = 44;
inline void UnitTx::clear_status() {
  status_.ClearToEmpty();
}
inline const std::string& UnitTx::status() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.status)
  return _internal_status();
}
inline void UnitTx::set_status(const std::string& value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.status)
}
inline std::string* UnitTx::mutable_status() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.status)
  return _internal_mutable_status();
}
inline const std::string& UnitTx::_internal_status() const {
  return status_.Get();
}
inline void UnitTx::_internal_set_status(const std::string& value) {
  
  status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_status(std::string&& value) {
  
  status_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.status)
}
inline void UnitTx::set_status(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.status)
}
inline void UnitTx::set_status(const char* value,
    size_t size) {
  
  status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.status)
}
inline std::string* UnitTx::_internal_mutable_status() {
  
  return status_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_status() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.status)
  return status_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_status(std::string* status) {
  if (status != nullptr) {
    
  } else {
    
  }
  status_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), status,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.status)
}

// string user_agent = 45;
inline void UnitTx::clear_user_agent() {
  user_agent_.ClearToEmpty();
}
inline const std::string& UnitTx::user_agent() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.user_agent)
  return _internal_user_agent();
}
inline void UnitTx::set_user_agent(const std::string& value) {
  _internal_set_user_agent(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.user_agent)
}
inline std::string* UnitTx::mutable_user_agent() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.user_agent)
  return _internal_mutable_user_agent();
}
inline const std::string& UnitTx::_internal_user_agent() const {
  return user_agent_.Get();
}
inline void UnitTx::_internal_set_user_agent(const std::string& value) {
  
  user_agent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_user_agent(std::string&& value) {
  
  user_agent_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.user_agent)
}
inline void UnitTx::set_user_agent(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  user_agent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.user_agent)
}
inline void UnitTx::set_user_agent(const char* value,
    size_t size) {
  
  user_agent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.user_agent)
}
inline std::string* UnitTx::_internal_mutable_user_agent() {
  
  return user_agent_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_user_agent() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.user_agent)
  return user_agent_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_user_agent(std::string* user_agent) {
  if (user_agent != nullptr) {
    
  } else {
    
  }
  user_agent_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), user_agent,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.user_agent)
}

// string vbank_code = 46;
inline void UnitTx::clear_vbank_code() {
  vbank_code_.ClearToEmpty();
}
inline const std::string& UnitTx::vbank_code() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.vbank_code)
  return _internal_vbank_code();
}
inline void UnitTx::set_vbank_code(const std::string& value) {
  _internal_set_vbank_code(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.vbank_code)
}
inline std::string* UnitTx::mutable_vbank_code() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.vbank_code)
  return _internal_mutable_vbank_code();
}
inline const std::string& UnitTx::_internal_vbank_code() const {
  return vbank_code_.Get();
}
inline void UnitTx::_internal_set_vbank_code(const std::string& value) {
  
  vbank_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_vbank_code(std::string&& value) {
  
  vbank_code_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.vbank_code)
}
inline void UnitTx::set_vbank_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  vbank_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.vbank_code)
}
inline void UnitTx::set_vbank_code(const char* value,
    size_t size) {
  
  vbank_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.vbank_code)
}
inline std::string* UnitTx::_internal_mutable_vbank_code() {
  
  return vbank_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_vbank_code() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.vbank_code)
  return vbank_code_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_vbank_code(std::string* vbank_code) {
  if (vbank_code != nullptr) {
    
  } else {
    
  }
  vbank_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), vbank_code,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.vbank_code)
}

// int32 vbank_date = 47;
inline void UnitTx::clear_vbank_date() {
  vbank_date_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnitTx::_internal_vbank_date() const {
  return vbank_date_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnitTx::vbank_date() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.vbank_date)
  return _internal_vbank_date();
}
inline void UnitTx::_internal_set_vbank_date(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vbank_date_ = value;
}
inline void UnitTx::set_vbank_date(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vbank_date(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.vbank_date)
}

// string vbank_holder = 48;
inline void UnitTx::clear_vbank_holder() {
  vbank_holder_.ClearToEmpty();
}
inline const std::string& UnitTx::vbank_holder() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.vbank_holder)
  return _internal_vbank_holder();
}
inline void UnitTx::set_vbank_holder(const std::string& value) {
  _internal_set_vbank_holder(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.vbank_holder)
}
inline std::string* UnitTx::mutable_vbank_holder() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.vbank_holder)
  return _internal_mutable_vbank_holder();
}
inline const std::string& UnitTx::_internal_vbank_holder() const {
  return vbank_holder_.Get();
}
inline void UnitTx::_internal_set_vbank_holder(const std::string& value) {
  
  vbank_holder_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_vbank_holder(std::string&& value) {
  
  vbank_holder_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.vbank_holder)
}
inline void UnitTx::set_vbank_holder(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  vbank_holder_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.vbank_holder)
}
inline void UnitTx::set_vbank_holder(const char* value,
    size_t size) {
  
  vbank_holder_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.vbank_holder)
}
inline std::string* UnitTx::_internal_mutable_vbank_holder() {
  
  return vbank_holder_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_vbank_holder() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.vbank_holder)
  return vbank_holder_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_vbank_holder(std::string* vbank_holder) {
  if (vbank_holder != nullptr) {
    
  } else {
    
  }
  vbank_holder_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), vbank_holder,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.vbank_holder)
}

// int32 vbank_issued_at = 49;
inline void UnitTx::clear_vbank_issued_at() {
  vbank_issued_at_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnitTx::_internal_vbank_issued_at() const {
  return vbank_issued_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnitTx::vbank_issued_at() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.vbank_issued_at)
  return _internal_vbank_issued_at();
}
inline void UnitTx::_internal_set_vbank_issued_at(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vbank_issued_at_ = value;
}
inline void UnitTx::set_vbank_issued_at(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vbank_issued_at(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.vbank_issued_at)
}

// string vbank_name = 50;
inline void UnitTx::clear_vbank_name() {
  vbank_name_.ClearToEmpty();
}
inline const std::string& UnitTx::vbank_name() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.vbank_name)
  return _internal_vbank_name();
}
inline void UnitTx::set_vbank_name(const std::string& value) {
  _internal_set_vbank_name(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.vbank_name)
}
inline std::string* UnitTx::mutable_vbank_name() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.vbank_name)
  return _internal_mutable_vbank_name();
}
inline const std::string& UnitTx::_internal_vbank_name() const {
  return vbank_name_.Get();
}
inline void UnitTx::_internal_set_vbank_name(const std::string& value) {
  
  vbank_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_vbank_name(std::string&& value) {
  
  vbank_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.vbank_name)
}
inline void UnitTx::set_vbank_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  vbank_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.vbank_name)
}
inline void UnitTx::set_vbank_name(const char* value,
    size_t size) {
  
  vbank_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.vbank_name)
}
inline std::string* UnitTx::_internal_mutable_vbank_name() {
  
  return vbank_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_vbank_name() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.vbank_name)
  return vbank_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_vbank_name(std::string* vbank_name) {
  if (vbank_name != nullptr) {
    
  } else {
    
  }
  vbank_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), vbank_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.vbank_name)
}

// string vbank_num = 51;
inline void UnitTx::clear_vbank_num() {
  vbank_num_.ClearToEmpty();
}
inline const std::string& UnitTx::vbank_num() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.vbank_num)
  return _internal_vbank_num();
}
inline void UnitTx::set_vbank_num(const std::string& value) {
  _internal_set_vbank_num(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.vbank_num)
}
inline std::string* UnitTx::mutable_vbank_num() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.vbank_num)
  return _internal_mutable_vbank_num();
}
inline const std::string& UnitTx::_internal_vbank_num() const {
  return vbank_num_.Get();
}
inline void UnitTx::_internal_set_vbank_num(const std::string& value) {
  
  vbank_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_vbank_num(std::string&& value) {
  
  vbank_num_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.vbank_num)
}
inline void UnitTx::set_vbank_num(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  vbank_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.vbank_num)
}
inline void UnitTx::set_vbank_num(const char* value,
    size_t size) {
  
  vbank_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.vbank_num)
}
inline std::string* UnitTx::_internal_mutable_vbank_num() {
  
  return vbank_num_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_vbank_num() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.vbank_num)
  return vbank_num_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_vbank_num(std::string* vbank_num) {
  if (vbank_num != nullptr) {
    
  } else {
    
  }
  vbank_num_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), vbank_num,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.vbank_num)
}

// string customer_email = 52;
inline void UnitTx::clear_customer_email() {
  customer_email_.ClearToEmpty();
}
inline const std::string& UnitTx::customer_email() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.customer_email)
  return _internal_customer_email();
}
inline void UnitTx::set_customer_email(const std::string& value) {
  _internal_set_customer_email(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.customer_email)
}
inline std::string* UnitTx::mutable_customer_email() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.customer_email)
  return _internal_mutable_customer_email();
}
inline const std::string& UnitTx::_internal_customer_email() const {
  return customer_email_.Get();
}
inline void UnitTx::_internal_set_customer_email(const std::string& value) {
  
  customer_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_customer_email(std::string&& value) {
  
  customer_email_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.customer_email)
}
inline void UnitTx::set_customer_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.customer_email)
}
inline void UnitTx::set_customer_email(const char* value,
    size_t size) {
  
  customer_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.customer_email)
}
inline std::string* UnitTx::_internal_mutable_customer_email() {
  
  return customer_email_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_customer_email() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.customer_email)
  return customer_email_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_customer_email(std::string* customer_email) {
  if (customer_email != nullptr) {
    
  } else {
    
  }
  customer_email_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), customer_email,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.customer_email)
}

// .basis_v2.Promotion promotion = 53;
inline bool UnitTx::_internal_has_promotion() const {
  return this != internal_default_instance() && promotion_ != nullptr;
}
inline bool UnitTx::has_promotion() const {
  return _internal_has_promotion();
}
inline void UnitTx::clear_promotion() {
  if (GetArena() == nullptr && promotion_ != nullptr) {
    delete promotion_;
  }
  promotion_ = nullptr;
}
inline const ::basis_v2::Promotion& UnitTx::_internal_promotion() const {
  const ::basis_v2::Promotion* p = promotion_;
  return p != nullptr ? *p : reinterpret_cast<const ::basis_v2::Promotion&>(
      ::basis_v2::_Promotion_default_instance_);
}
inline const ::basis_v2::Promotion& UnitTx::promotion() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.promotion)
  return _internal_promotion();
}
inline void UnitTx::unsafe_arena_set_allocated_promotion(
    ::basis_v2::Promotion* promotion) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(promotion_);
  }
  promotion_ = promotion;
  if (promotion) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:basis_v2.UnitTx.promotion)
}
inline ::basis_v2::Promotion* UnitTx::release_promotion() {
  
  ::basis_v2::Promotion* temp = promotion_;
  promotion_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::basis_v2::Promotion* UnitTx::unsafe_arena_release_promotion() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.promotion)
  
  ::basis_v2::Promotion* temp = promotion_;
  promotion_ = nullptr;
  return temp;
}
inline ::basis_v2::Promotion* UnitTx::_internal_mutable_promotion() {
  
  if (promotion_ == nullptr) {
    auto* p = CreateMaybeMessage<::basis_v2::Promotion>(GetArena());
    promotion_ = p;
  }
  return promotion_;
}
inline ::basis_v2::Promotion* UnitTx::mutable_promotion() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.promotion)
  return _internal_mutable_promotion();
}
inline void UnitTx::set_allocated_promotion(::basis_v2::Promotion* promotion) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete promotion_;
  }
  if (promotion) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(promotion);
    if (message_arena != submessage_arena) {
      promotion = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, promotion, submessage_arena);
    }
    
  } else {
    
  }
  promotion_ = promotion;
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.promotion)
}

// string npoint_pay_amount = 54;
inline void UnitTx::clear_npoint_pay_amount() {
  npoint_pay_amount_.ClearToEmpty();
}
inline const std::string& UnitTx::npoint_pay_amount() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.npoint_pay_amount)
  return _internal_npoint_pay_amount();
}
inline void UnitTx::set_npoint_pay_amount(const std::string& value) {
  _internal_set_npoint_pay_amount(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.npoint_pay_amount)
}
inline std::string* UnitTx::mutable_npoint_pay_amount() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.npoint_pay_amount)
  return _internal_mutable_npoint_pay_amount();
}
inline const std::string& UnitTx::_internal_npoint_pay_amount() const {
  return npoint_pay_amount_.Get();
}
inline void UnitTx::_internal_set_npoint_pay_amount(const std::string& value) {
  
  npoint_pay_amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_npoint_pay_amount(std::string&& value) {
  
  npoint_pay_amount_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.npoint_pay_amount)
}
inline void UnitTx::set_npoint_pay_amount(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  npoint_pay_amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.npoint_pay_amount)
}
inline void UnitTx::set_npoint_pay_amount(const char* value,
    size_t size) {
  
  npoint_pay_amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.npoint_pay_amount)
}
inline std::string* UnitTx::_internal_mutable_npoint_pay_amount() {
  
  return npoint_pay_amount_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_npoint_pay_amount() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.npoint_pay_amount)
  return npoint_pay_amount_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_npoint_pay_amount(std::string* npoint_pay_amount) {
  if (npoint_pay_amount != nullptr) {
    
  } else {
    
  }
  npoint_pay_amount_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), npoint_pay_amount,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.npoint_pay_amount)
}

// bool sandbox = 55;
inline void UnitTx::clear_sandbox() {
  sandbox_ = false;
}
inline bool UnitTx::_internal_sandbox() const {
  return sandbox_;
}
inline bool UnitTx::sandbox() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.sandbox)
  return _internal_sandbox();
}
inline void UnitTx::_internal_set_sandbox(bool value) {
  
  sandbox_ = value;
}
inline void UnitTx::set_sandbox(bool value) {
  _internal_set_sandbox(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.sandbox)
}

// string emb_pg_provider = 56;
inline void UnitTx::clear_emb_pg_provider() {
  emb_pg_provider_.ClearToEmpty();
}
inline const std::string& UnitTx::emb_pg_provider() const {
  // @@protoc_insertion_point(field_get:basis_v2.UnitTx.emb_pg_provider)
  return _internal_emb_pg_provider();
}
inline void UnitTx::set_emb_pg_provider(const std::string& value) {
  _internal_set_emb_pg_provider(value);
  // @@protoc_insertion_point(field_set:basis_v2.UnitTx.emb_pg_provider)
}
inline std::string* UnitTx::mutable_emb_pg_provider() {
  // @@protoc_insertion_point(field_mutable:basis_v2.UnitTx.emb_pg_provider)
  return _internal_mutable_emb_pg_provider();
}
inline const std::string& UnitTx::_internal_emb_pg_provider() const {
  return emb_pg_provider_.Get();
}
inline void UnitTx::_internal_set_emb_pg_provider(const std::string& value) {
  
  emb_pg_provider_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UnitTx::set_emb_pg_provider(std::string&& value) {
  
  emb_pg_provider_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:basis_v2.UnitTx.emb_pg_provider)
}
inline void UnitTx::set_emb_pg_provider(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  emb_pg_provider_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:basis_v2.UnitTx.emb_pg_provider)
}
inline void UnitTx::set_emb_pg_provider(const char* value,
    size_t size) {
  
  emb_pg_provider_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:basis_v2.UnitTx.emb_pg_provider)
}
inline std::string* UnitTx::_internal_mutable_emb_pg_provider() {
  
  return emb_pg_provider_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UnitTx::release_emb_pg_provider() {
  // @@protoc_insertion_point(field_release:basis_v2.UnitTx.emb_pg_provider)
  return emb_pg_provider_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UnitTx::set_allocated_emb_pg_provider(std::string* emb_pg_provider) {
  if (emb_pg_provider != nullptr) {
    
  } else {
    
  }
  emb_pg_provider_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), emb_pg_provider,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:basis_v2.UnitTx.emb_pg_provider)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace basis_v2

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_v2_2fbasis_2fbasis_2eproto
