// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v2/payments/card/card.proto

#include "v2/payments/card/card.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace card_v2 {
constexpr CardRegisterRequest::CardRegisterRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : card_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_number_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , expiry_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , birth_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pwd_2digit_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_tel_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_addr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_postcode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CardRegisterRequestDefaultTypeInternal {
  constexpr CardRegisterRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CardRegisterRequestDefaultTypeInternal() {}
  union {
    CardRegisterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CardRegisterRequestDefaultTypeInternal _CardRegisterRequest_default_instance_;
constexpr CardRegisterResultData::CardRegisterResultData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : card_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , bin_numbrer_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_tel_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_addr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_postcode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pg_provider_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pg_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_type_(0)
  , inserted_(0)
  , updated_(0){}
struct CardRegisterResultDataDefaultTypeInternal {
  constexpr CardRegisterResultDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CardRegisterResultDataDefaultTypeInternal() {}
  union {
    CardRegisterResultData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CardRegisterResultDataDefaultTypeInternal _CardRegisterResultData_default_instance_;
constexpr CardRegisterResponse::CardRegisterResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , response_(nullptr)
  , code_(0){}
struct CardRegisterResponseDefaultTypeInternal {
  constexpr CardRegisterResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CardRegisterResponseDefaultTypeInternal() {}
  union {
    CardRegisterResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CardRegisterResponseDefaultTypeInternal _CardRegisterResponse_default_instance_;
constexpr GetCardInfoRequest::GetCardInfoRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : card_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetCardInfoRequestDefaultTypeInternal {
  constexpr GetCardInfoRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetCardInfoRequestDefaultTypeInternal() {}
  union {
    GetCardInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetCardInfoRequestDefaultTypeInternal _GetCardInfoRequest_default_instance_;
constexpr GetCardInfoData::GetCardInfoData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : card_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_provider_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , bin_number_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_tel_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_addr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_postcode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_type_(0)
  , inserted_(0)
  , updated_(0){}
struct GetCardInfoDataDefaultTypeInternal {
  constexpr GetCardInfoDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetCardInfoDataDefaultTypeInternal() {}
  union {
    GetCardInfoData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetCardInfoDataDefaultTypeInternal _GetCardInfoData_default_instance_;
constexpr GetCardInfoResponse::GetCardInfoResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , response_(nullptr)
  , code_(0){}
struct GetCardInfoResponseDefaultTypeInternal {
  constexpr GetCardInfoResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetCardInfoResponseDefaultTypeInternal() {}
  union {
    GetCardInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetCardInfoResponseDefaultTypeInternal _GetCardInfoResponse_default_instance_;
constexpr DeleteCardInfoRequest::DeleteCardInfoRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : card_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteCardInfoRequestDefaultTypeInternal {
  constexpr DeleteCardInfoRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteCardInfoRequestDefaultTypeInternal() {}
  union {
    DeleteCardInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteCardInfoRequestDefaultTypeInternal _DeleteCardInfoRequest_default_instance_;
constexpr DeleteCardInfoResponse::DeleteCardInfoResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , code_(0){}
struct DeleteCardInfoResponseDefaultTypeInternal {
  constexpr DeleteCardInfoResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteCardInfoResponseDefaultTypeInternal() {}
  union {
    DeleteCardInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteCardInfoResponseDefaultTypeInternal _DeleteCardInfoResponse_default_instance_;
constexpr PayByRegisteredCardRequest::PayByRegisteredCardRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : card_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , merchant_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tax_free_amount_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , custom_data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , callback_url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_addr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_postcode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_tel_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_installment_(0)
  , interest_free_by_merchant_(false){}
struct PayByRegisteredCardRequestDefaultTypeInternal {
  constexpr PayByRegisteredCardRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PayByRegisteredCardRequestDefaultTypeInternal() {}
  union {
    PayByRegisteredCardRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PayByRegisteredCardRequestDefaultTypeInternal _PayByRegisteredCardRequest_default_instance_;
constexpr PayByRegisteredCardData::PayByRegisteredCardData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : cancel_history_()
  , cancel_receipt_urls_()
  , amount_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , apply_num_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_addr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_postcode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buyer_tel_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , cancel_amount_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , cancel_reason_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , bin_number_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , channel_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , currency_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , custom_data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_uid_usage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , fail_reason_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , imp_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , merchant_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pay_method_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pg_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pg_provider_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pg_tid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , receipt_url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_agent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , cancelled_at_(0)
  , card_installment_(0)
  , card_type_(0)
  , cash_receipt_issued_(false)
  , failed_at_(0)
  , paid_at_(0)
  , started_at_(0){}
struct PayByRegisteredCardDataDefaultTypeInternal {
  constexpr PayByRegisteredCardDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PayByRegisteredCardDataDefaultTypeInternal() {}
  union {
    PayByRegisteredCardData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PayByRegisteredCardDataDefaultTypeInternal _PayByRegisteredCardData_default_instance_;
constexpr PayByRegisteredCardResponse::PayByRegisteredCardResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , response_(nullptr)
  , code_(0){}
struct PayByRegisteredCardResponseDefaultTypeInternal {
  constexpr PayByRegisteredCardResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PayByRegisteredCardResponseDefaultTypeInternal() {}
  union {
    PayByRegisteredCardResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PayByRegisteredCardResponseDefaultTypeInternal _PayByRegisteredCardResponse_default_instance_;
constexpr CancelHistory::CancelHistory(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pg_tid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , reason_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , receipt_url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , cancelled_at_(0){}
struct CancelHistoryDefaultTypeInternal {
  constexpr CancelHistoryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CancelHistoryDefaultTypeInternal() {}
  union {
    CancelHistory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CancelHistoryDefaultTypeInternal _CancelHistory_default_instance_;
constexpr CancelCardPaymentRequest::CancelCardPaymentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : imp_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , merchant_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tax_free_amount_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , reason_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CancelCardPaymentRequestDefaultTypeInternal {
  constexpr CancelCardPaymentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CancelCardPaymentRequestDefaultTypeInternal() {}
  union {
    CancelCardPaymentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CancelCardPaymentRequestDefaultTypeInternal _CancelCardPaymentRequest_default_instance_;
constexpr CancelCardPaymenttResponse::CancelCardPaymenttResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , response_(nullptr)
  , code_(0){}
struct CancelCardPaymenttResponseDefaultTypeInternal {
  constexpr CancelCardPaymenttResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CancelCardPaymenttResponseDefaultTypeInternal() {}
  union {
    CancelCardPaymenttResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CancelCardPaymenttResponseDefaultTypeInternal _CancelCardPaymenttResponse_default_instance_;
}  // namespace card_v2
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_v2_2fpayments_2fcard_2fcard_2eproto[14];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_v2_2fpayments_2fcard_2fcard_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_v2_2fpayments_2fcard_2fcard_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_v2_2fpayments_2fcard_2fcard_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterRequest, card_uid_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterRequest, card_number_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterRequest, expiry_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterRequest, birth_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterRequest, pwd_2digit_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterRequest, customer_name_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterRequest, customer_tel_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterRequest, customer_email_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterRequest, customer_addr_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterRequest, customer_postcode_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterRequest, pg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResultData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResultData, card_uid_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResultData, card_name_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResultData, card_code_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResultData, bin_numbrer_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResultData, card_type_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResultData, customer_name_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResultData, customer_tel_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResultData, customer_email_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResultData, customer_addr_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResultData, customer_postcode_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResultData, inserted_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResultData, updated_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResultData, pg_provider_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResultData, pg_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResponse, code_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResponse, message_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CardRegisterResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoRequest, card_uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoData, card_uid_),
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoData, card_provider_),
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoData, card_code_),
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoData, bin_number_),
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoData, card_type_),
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoData, customer_name_),
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoData, customer_tel_),
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoData, customer_email_),
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoData, customer_addr_),
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoData, customer_postcode_),
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoData, inserted_),
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoData, updated_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoResponse, code_),
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoResponse, message_),
  PROTOBUF_FIELD_OFFSET(::card_v2::GetCardInfoResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::card_v2::DeleteCardInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::card_v2::DeleteCardInfoRequest, card_uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::card_v2::DeleteCardInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::card_v2::DeleteCardInfoResponse, code_),
  PROTOBUF_FIELD_OFFSET(::card_v2::DeleteCardInfoResponse, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardRequest, card_uid_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardRequest, merchant_uid_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardRequest, amount_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardRequest, tax_free_amount_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardRequest, order_name_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardRequest, card_installment_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardRequest, interest_free_by_merchant_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardRequest, custom_data_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardRequest, callback_url_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardRequest, buyer_addr_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardRequest, buyer_email_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardRequest, buyer_name_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardRequest, buyer_postcode_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardRequest, buyer_tel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, amount_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, apply_num_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, buyer_addr_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, buyer_email_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, buyer_name_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, buyer_postcode_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, buyer_tel_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, cancel_amount_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, cancel_history_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, cancel_reason_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, cancel_receipt_urls_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, cancelled_at_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, card_code_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, card_name_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, bin_number_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, card_installment_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, card_type_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, cash_receipt_issued_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, channel_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, currency_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, custom_data_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, card_uid_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, customer_uid_usage_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, fail_reason_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, failed_at_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, imp_uid_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, merchant_uid_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, order_name_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, paid_at_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, pay_method_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, pg_id_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, pg_provider_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, pg_tid_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, receipt_url_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, started_at_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, status_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardData, user_agent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardResponse, code_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardResponse, message_),
  PROTOBUF_FIELD_OFFSET(::card_v2::PayByRegisteredCardResponse, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::card_v2::CancelHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::card_v2::CancelHistory, pg_tid_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CancelHistory, amount_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CancelHistory, cancelled_at_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CancelHistory, reason_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CancelHistory, receipt_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::card_v2::CancelCardPaymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::card_v2::CancelCardPaymentRequest, imp_uid_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CancelCardPaymentRequest, amount_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CancelCardPaymentRequest, merchant_uid_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CancelCardPaymentRequest, tax_free_amount_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CancelCardPaymentRequest, reason_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::card_v2::CancelCardPaymenttResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::card_v2::CancelCardPaymenttResponse, code_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CancelCardPaymenttResponse, message_),
  PROTOBUF_FIELD_OFFSET(::card_v2::CancelCardPaymenttResponse, response_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::card_v2::CardRegisterRequest)},
  { 16, -1, sizeof(::card_v2::CardRegisterResultData)},
  { 35, -1, sizeof(::card_v2::CardRegisterResponse)},
  { 43, -1, sizeof(::card_v2::GetCardInfoRequest)},
  { 49, -1, sizeof(::card_v2::GetCardInfoData)},
  { 66, -1, sizeof(::card_v2::GetCardInfoResponse)},
  { 74, -1, sizeof(::card_v2::DeleteCardInfoRequest)},
  { 80, -1, sizeof(::card_v2::DeleteCardInfoResponse)},
  { 87, -1, sizeof(::card_v2::PayByRegisteredCardRequest)},
  { 106, -1, sizeof(::card_v2::PayByRegisteredCardData)},
  { 148, -1, sizeof(::card_v2::PayByRegisteredCardResponse)},
  { 156, -1, sizeof(::card_v2::CancelHistory)},
  { 166, -1, sizeof(::card_v2::CancelCardPaymentRequest)},
  { 176, -1, sizeof(::card_v2::CancelCardPaymenttResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::card_v2::_CardRegisterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::card_v2::_CardRegisterResultData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::card_v2::_CardRegisterResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::card_v2::_GetCardInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::card_v2::_GetCardInfoData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::card_v2::_GetCardInfoResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::card_v2::_DeleteCardInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::card_v2::_DeleteCardInfoResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::card_v2::_PayByRegisteredCardRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::card_v2::_PayByRegisteredCardData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::card_v2::_PayByRegisteredCardResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::card_v2::_CancelHistory_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::card_v2::_CancelCardPaymentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::card_v2::_CancelCardPaymenttResponse_default_instance_),
};

const char descriptor_table_protodef_v2_2fpayments_2fcard_2fcard_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033v2/payments/card/card.proto\022\007card_v2\032\034"
  "google/api/annotations.proto\"\362\001\n\023CardReg"
  "isterRequest\022\020\n\010card_uid\030\001 \001(\t\022\023\n\013card_n"
  "umber\030\002 \001(\t\022\016\n\006expiry\030\003 \001(\t\022\r\n\005birth\030\004 \001"
  "(\t\022\022\n\npwd_2digit\030\005 \001(\t\022\025\n\rcustomer_name\030"
  "\006 \001(\t\022\024\n\014customer_tel\030\007 \001(\t\022\026\n\016customer_"
  "email\030\010 \001(\t\022\025\n\rcustomer_addr\030\t \001(\t\022\031\n\021cu"
  "stomer_postcode\030\n \001(\t\022\n\n\002pg\030\013 \001(\t\"\266\002\n\026Ca"
  "rdRegisterResultData\022\020\n\010card_uid\030\001 \001(\t\022\021"
  "\n\tcard_name\030\002 \001(\t\022\021\n\tcard_code\030\003 \001(\t\022\023\n\013"
  "bin_numbrer\030\004 \001(\t\022\021\n\tcard_type\030\005 \001(\005\022\025\n\r"
  "customer_name\030\006 \001(\t\022\024\n\014customer_tel\030\007 \001("
  "\t\022\026\n\016customer_email\030\010 \001(\t\022\025\n\rcustomer_ad"
  "dr\030\t \001(\t\022\031\n\021customer_postcode\030\n \001(\t\022\020\n\010i"
  "nserted\030\013 \001(\005\022\017\n\007updated\030\014 \001(\005\022\023\n\013pg_pro"
  "vider\030\r \001(\t\022\r\n\005pg_id\030\016 \001(\t\"h\n\024CardRegist"
  "erResponse\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001("
  "\t\0221\n\010response\030\003 \001(\0132\037.card_v2.CardRegist"
  "erResultData\"&\n\022GetCardInfoRequest\022\020\n\010ca"
  "rd_uid\030\001 \001(\t\"\216\002\n\017GetCardInfoData\022\020\n\010card"
  "_uid\030\001 \001(\t\022\025\n\rcard_provider\030\002 \001(\t\022\021\n\tcar"
  "d_code\030\003 \001(\t\022\022\n\nbin_number\030\004 \001(\t\022\021\n\tcard"
  "_type\030\005 \001(\005\022\025\n\rcustomer_name\030\006 \001(\t\022\024\n\014cu"
  "stomer_tel\030\007 \001(\t\022\026\n\016customer_email\030\010 \001(\t"
  "\022\025\n\rcustomer_addr\030\t \001(\t\022\031\n\021customer_post"
  "code\030\n \001(\t\022\020\n\010inserted\030\013 \001(\005\022\017\n\007updated\030"
  "\014 \001(\005\"`\n\023GetCardInfoResponse\022\014\n\004code\030\001 \001"
  "(\005\022\017\n\007message\030\002 \001(\t\022*\n\010response\030\003 \001(\0132\030."
  "card_v2.GetCardInfoData\")\n\025DeleteCardInf"
  "oRequest\022\020\n\010card_uid\030\001 \001(\t\"7\n\026DeleteCard"
  "InfoResponse\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 "
  "\001(\t\"\321\002\n\032PayByRegisteredCardRequest\022\020\n\010ca"
  "rd_uid\030\001 \001(\t\022\024\n\014merchant_uid\030\002 \001(\t\022\016\n\006am"
  "ount\030\003 \001(\t\022\027\n\017tax_free_amount\030\004 \001(\t\022\022\n\no"
  "rder_name\030\005 \001(\t\022\030\n\020card_installment\030\006 \001("
  "\005\022!\n\031interest_free_by_merchant\030\007 \001(\010\022\023\n\013"
  "custom_data\030\010 \001(\t\022\024\n\014callback_url\030\t \001(\t\022"
  "\022\n\nbuyer_addr\030\n \001(\t\022\023\n\013buyer_email\030\013 \001(\t"
  "\022\022\n\nbuyer_name\030\014 \001(\t\022\026\n\016buyer_postcode\030\r"
  " \001(\t\022\021\n\tbuyer_tel\030\016 \001(\t\"\250\006\n\027PayByRegiste"
  "redCardData\022\016\n\006amount\030\001 \001(\t\022\021\n\tapply_num"
  "\030\002 \001(\t\022\022\n\nbuyer_addr\030\003 \001(\t\022\023\n\013buyer_emai"
  "l\030\004 \001(\t\022\022\n\nbuyer_name\030\005 \001(\t\022\026\n\016buyer_pos"
  "tcode\030\006 \001(\t\022\021\n\tbuyer_tel\030\007 \001(\t\022\025\n\rcancel"
  "_amount\030\010 \001(\t\022.\n\016cancel_history\030\t \003(\0132\026."
  "card_v2.CancelHistory\022\025\n\rcancel_reason\030\n"
  " \001(\t\022\033\n\023cancel_receipt_urls\030\013 \003(\t\022\024\n\014can"
  "celled_at\030\014 \001(\005\022\021\n\tcard_code\030\r \001(\t\022\021\n\tca"
  "rd_name\030\016 \001(\t\022\022\n\nbin_number\030\017 \001(\t\022\030\n\020car"
  "d_installment\030\020 \001(\005\022\021\n\tcard_type\030\021 \001(\005\022\033"
  "\n\023cash_receipt_issued\030\022 \001(\010\022\017\n\007channel\030\023"
  " \001(\t\022\020\n\010currency\030\024 \001(\t\022\023\n\013custom_data\030\025 "
  "\001(\t\022\020\n\010card_uid\030\026 \001(\t\022\032\n\022customer_uid_us"
  "age\030\027 \001(\t\022\023\n\013fail_reason\030\030 \001(\t\022\021\n\tfailed"
  "_at\030\031 \001(\005\022\017\n\007imp_uid\030\032 \001(\t\022\024\n\014merchant_u"
  "id\030\033 \001(\t\022\022\n\norder_name\030\034 \001(\t\022\017\n\007paid_at\030"
  "\035 \001(\005\022\022\n\npay_method\030\036 \001(\t\022\r\n\005pg_id\030\037 \001(\t"
  "\022\023\n\013pg_provider\030  \001(\t\022\016\n\006pg_tid\030! \001(\t\022\023\n"
  "\013receipt_url\030\" \001(\t\022\022\n\nstarted_at\030# \001(\005\022\016"
  "\n\006status\030$ \001(\t\022\022\n\nuser_agent\030% \001(\t\"p\n\033Pa"
  "yByRegisteredCardResponse\022\014\n\004code\030\001 \001(\005\022"
  "\017\n\007message\030\002 \001(\t\0222\n\010response\030\003 \001(\0132 .car"
  "d_v2.PayByRegisteredCardData\"j\n\rCancelHi"
  "story\022\016\n\006pg_tid\030\001 \001(\t\022\016\n\006amount\030\002 \001(\t\022\024\n"
  "\014cancelled_at\030\003 \001(\005\022\016\n\006reason\030\004 \001(\t\022\023\n\013r"
  "eceipt_url\030\005 \001(\t\"z\n\030CancelCardPaymentReq"
  "uest\022\017\n\007imp_uid\030\001 \001(\t\022\016\n\006amount\030\002 \001(\t\022\024\n"
  "\014merchant_uid\030\003 \001(\t\022\027\n\017tax_free_amount\030\004"
  " \001(\t\022\016\n\006reason\030\005 \001(\t\"o\n\032CancelCardPaymen"
  "ttResponse\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001("
  "\t\0222\n\010response\030\003 \001(\0132 .card_v2.PayByRegis"
  "teredCardData2\314\005\n\022PaymentCardService\022w\n\021"
  "CardRegisterV2RPC\022\034.card_v2.CardRegister"
  "Request\032\035.card_v2.CardRegisterResponse\"%"
  "\202\323\344\223\002\037\"\032/api/payments/v2/card/info:\001*\022|\n"
  "\020GetCardInfoV2RPC\022\033.card_v2.GetCardInfoR"
  "equest\032\034.card_v2.GetCardInfoResponse\"-\202\323"
  "\344\223\002\'\022%/api/payments/v2/card/info/{card_u"
  "id}\022\205\001\n\023DeleteCardInfoV2RPC\022\036.card_v2.De"
  "leteCardInfoRequest\032\037.card_v2.DeleteCard"
  "InfoResponse\"-\202\323\344\223\002\'*%/api/payments/v2/c"
  "ard/info/{card_uid}\022\224\001\n\031PayByRegisetered"
  "CardV2RPC\022#.card_v2.PayByRegisteredCardR"
  "equest\032$.card_v2.PayByRegisteredCardResp"
  "onse\",\202\323\344\223\002&\"$/api/payments/v2/card/pay/"
  "registered\022\237\001\n\032CancelRegiseteredCardV2RP"
  "C\022!.card_v2.CancelCardPaymentRequest\032#.c"
  "ard_v2.CancelCardPaymenttResponse\"9\202\323\344\223\002"
  "3\"1/api/payments/v2/card/cancel/register"
  "ed/{imp_uid}BMZ8github.com/iamport/inter"
  "face/gen_src/go/v2/payments/card\252\002\020V2.Pa"
  "yments.Cardb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_v2_2fpayments_2fcard_2fcard_2eproto_deps[1] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_v2_2fpayments_2fcard_2fcard_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_v2_2fpayments_2fcard_2fcard_2eproto = {
  false, false, 3659, descriptor_table_protodef_v2_2fpayments_2fcard_2fcard_2eproto, "v2/payments/card/card.proto", 
  &descriptor_table_v2_2fpayments_2fcard_2fcard_2eproto_once, descriptor_table_v2_2fpayments_2fcard_2fcard_2eproto_deps, 1, 14,
  schemas, file_default_instances, TableStruct_v2_2fpayments_2fcard_2fcard_2eproto::offsets,
  file_level_metadata_v2_2fpayments_2fcard_2fcard_2eproto, file_level_enum_descriptors_v2_2fpayments_2fcard_2fcard_2eproto, file_level_service_descriptors_v2_2fpayments_2fcard_2fcard_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_v2_2fpayments_2fcard_2fcard_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_v2_2fpayments_2fcard_2fcard_2eproto);
  return descriptor_table_v2_2fpayments_2fcard_2fcard_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_v2_2fpayments_2fcard_2fcard_2eproto(&descriptor_table_v2_2fpayments_2fcard_2fcard_2eproto);
namespace card_v2 {

// ===================================================================

class CardRegisterRequest::_Internal {
 public:
};

CardRegisterRequest::CardRegisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:card_v2.CardRegisterRequest)
}
CardRegisterRequest::CardRegisterRequest(const CardRegisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  card_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_uid().empty()) {
    card_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_uid(), 
      GetArena());
  }
  card_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_number().empty()) {
    card_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_number(), 
      GetArena());
  }
  expiry_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_expiry().empty()) {
    expiry_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_expiry(), 
      GetArena());
  }
  birth_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_birth().empty()) {
    birth_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_birth(), 
      GetArena());
  }
  pwd_2digit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pwd_2digit().empty()) {
    pwd_2digit_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pwd_2digit(), 
      GetArena());
  }
  customer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_name().empty()) {
    customer_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_name(), 
      GetArena());
  }
  customer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_tel().empty()) {
    customer_tel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_tel(), 
      GetArena());
  }
  customer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_email().empty()) {
    customer_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_email(), 
      GetArena());
  }
  customer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_addr().empty()) {
    customer_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_addr(), 
      GetArena());
  }
  customer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_postcode().empty()) {
    customer_postcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_postcode(), 
      GetArena());
  }
  pg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pg().empty()) {
    pg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pg(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:card_v2.CardRegisterRequest)
}

void CardRegisterRequest::SharedCtor() {
card_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
expiry_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
birth_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pwd_2digit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CardRegisterRequest::~CardRegisterRequest() {
  // @@protoc_insertion_point(destructor:card_v2.CardRegisterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CardRegisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  card_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  expiry_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  birth_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pwd_2digit_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_tel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_postcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CardRegisterRequest::ArenaDtor(void* object) {
  CardRegisterRequest* _this = reinterpret_cast< CardRegisterRequest* >(object);
  (void)_this;
}
void CardRegisterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CardRegisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CardRegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:card_v2.CardRegisterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  card_uid_.ClearToEmpty();
  card_number_.ClearToEmpty();
  expiry_.ClearToEmpty();
  birth_.ClearToEmpty();
  pwd_2digit_.ClearToEmpty();
  customer_name_.ClearToEmpty();
  customer_tel_.ClearToEmpty();
  customer_email_.ClearToEmpty();
  customer_addr_.ClearToEmpty();
  customer_postcode_.ClearToEmpty();
  pg_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CardRegisterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string card_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_card_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterRequest.card_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_card_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterRequest.card_number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string expiry = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_expiry();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterRequest.expiry"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string birth = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_birth();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterRequest.birth"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pwd_2digit = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_pwd_2digit();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterRequest.pwd_2digit"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_customer_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterRequest.customer_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_tel = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_customer_tel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterRequest.customer_tel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_email = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_customer_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterRequest.customer_email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_addr = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_customer_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterRequest.customer_addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_postcode = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_customer_postcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterRequest.customer_postcode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pg = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_pg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterRequest.pg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CardRegisterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:card_v2.CardRegisterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string card_uid = 1;
  if (this->card_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_uid().data(), static_cast<int>(this->_internal_card_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterRequest.card_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_card_uid(), target);
  }

  // string card_number = 2;
  if (this->card_number().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_number().data(), static_cast<int>(this->_internal_card_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterRequest.card_number");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_card_number(), target);
  }

  // string expiry = 3;
  if (this->expiry().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_expiry().data(), static_cast<int>(this->_internal_expiry().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterRequest.expiry");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_expiry(), target);
  }

  // string birth = 4;
  if (this->birth().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_birth().data(), static_cast<int>(this->_internal_birth().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterRequest.birth");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_birth(), target);
  }

  // string pwd_2digit = 5;
  if (this->pwd_2digit().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pwd_2digit().data(), static_cast<int>(this->_internal_pwd_2digit().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterRequest.pwd_2digit");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_pwd_2digit(), target);
  }

  // string customer_name = 6;
  if (this->customer_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_name().data(), static_cast<int>(this->_internal_customer_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterRequest.customer_name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_customer_name(), target);
  }

  // string customer_tel = 7;
  if (this->customer_tel().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_tel().data(), static_cast<int>(this->_internal_customer_tel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterRequest.customer_tel");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_customer_tel(), target);
  }

  // string customer_email = 8;
  if (this->customer_email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_email().data(), static_cast<int>(this->_internal_customer_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterRequest.customer_email");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_customer_email(), target);
  }

  // string customer_addr = 9;
  if (this->customer_addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_addr().data(), static_cast<int>(this->_internal_customer_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterRequest.customer_addr");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_customer_addr(), target);
  }

  // string customer_postcode = 10;
  if (this->customer_postcode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_postcode().data(), static_cast<int>(this->_internal_customer_postcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterRequest.customer_postcode");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_customer_postcode(), target);
  }

  // string pg = 11;
  if (this->pg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pg().data(), static_cast<int>(this->_internal_pg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterRequest.pg");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_pg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:card_v2.CardRegisterRequest)
  return target;
}

size_t CardRegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:card_v2.CardRegisterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string card_uid = 1;
  if (this->card_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_uid());
  }

  // string card_number = 2;
  if (this->card_number().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_number());
  }

  // string expiry = 3;
  if (this->expiry().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_expiry());
  }

  // string birth = 4;
  if (this->birth().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_birth());
  }

  // string pwd_2digit = 5;
  if (this->pwd_2digit().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pwd_2digit());
  }

  // string customer_name = 6;
  if (this->customer_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_name());
  }

  // string customer_tel = 7;
  if (this->customer_tel().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_tel());
  }

  // string customer_email = 8;
  if (this->customer_email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_email());
  }

  // string customer_addr = 9;
  if (this->customer_addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_addr());
  }

  // string customer_postcode = 10;
  if (this->customer_postcode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_postcode());
  }

  // string pg = 11;
  if (this->pg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pg());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardRegisterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:card_v2.CardRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CardRegisterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CardRegisterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:card_v2.CardRegisterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:card_v2.CardRegisterRequest)
    MergeFrom(*source);
  }
}

void CardRegisterRequest::MergeFrom(const CardRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:card_v2.CardRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.card_uid().size() > 0) {
    _internal_set_card_uid(from._internal_card_uid());
  }
  if (from.card_number().size() > 0) {
    _internal_set_card_number(from._internal_card_number());
  }
  if (from.expiry().size() > 0) {
    _internal_set_expiry(from._internal_expiry());
  }
  if (from.birth().size() > 0) {
    _internal_set_birth(from._internal_birth());
  }
  if (from.pwd_2digit().size() > 0) {
    _internal_set_pwd_2digit(from._internal_pwd_2digit());
  }
  if (from.customer_name().size() > 0) {
    _internal_set_customer_name(from._internal_customer_name());
  }
  if (from.customer_tel().size() > 0) {
    _internal_set_customer_tel(from._internal_customer_tel());
  }
  if (from.customer_email().size() > 0) {
    _internal_set_customer_email(from._internal_customer_email());
  }
  if (from.customer_addr().size() > 0) {
    _internal_set_customer_addr(from._internal_customer_addr());
  }
  if (from.customer_postcode().size() > 0) {
    _internal_set_customer_postcode(from._internal_customer_postcode());
  }
  if (from.pg().size() > 0) {
    _internal_set_pg(from._internal_pg());
  }
}

void CardRegisterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:card_v2.CardRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardRegisterRequest::CopyFrom(const CardRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:card_v2.CardRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardRegisterRequest::IsInitialized() const {
  return true;
}

void CardRegisterRequest::InternalSwap(CardRegisterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  card_uid_.Swap(&other->card_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  card_number_.Swap(&other->card_number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  expiry_.Swap(&other->expiry_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  birth_.Swap(&other->birth_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pwd_2digit_.Swap(&other->pwd_2digit_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_name_.Swap(&other->customer_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_tel_.Swap(&other->customer_tel_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_email_.Swap(&other->customer_email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_addr_.Swap(&other->customer_addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_postcode_.Swap(&other->customer_postcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pg_.Swap(&other->pg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CardRegisterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CardRegisterResultData::_Internal {
 public:
};

CardRegisterResultData::CardRegisterResultData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:card_v2.CardRegisterResultData)
}
CardRegisterResultData::CardRegisterResultData(const CardRegisterResultData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  card_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_uid().empty()) {
    card_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_uid(), 
      GetArena());
  }
  card_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_name().empty()) {
    card_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_name(), 
      GetArena());
  }
  card_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_code().empty()) {
    card_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_code(), 
      GetArena());
  }
  bin_numbrer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bin_numbrer().empty()) {
    bin_numbrer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bin_numbrer(), 
      GetArena());
  }
  customer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_name().empty()) {
    customer_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_name(), 
      GetArena());
  }
  customer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_tel().empty()) {
    customer_tel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_tel(), 
      GetArena());
  }
  customer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_email().empty()) {
    customer_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_email(), 
      GetArena());
  }
  customer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_addr().empty()) {
    customer_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_addr(), 
      GetArena());
  }
  customer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_postcode().empty()) {
    customer_postcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_postcode(), 
      GetArena());
  }
  pg_provider_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pg_provider().empty()) {
    pg_provider_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pg_provider(), 
      GetArena());
  }
  pg_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pg_id().empty()) {
    pg_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pg_id(), 
      GetArena());
  }
  ::memcpy(&card_type_, &from.card_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&updated_) -
    reinterpret_cast<char*>(&card_type_)) + sizeof(updated_));
  // @@protoc_insertion_point(copy_constructor:card_v2.CardRegisterResultData)
}

void CardRegisterResultData::SharedCtor() {
card_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
bin_numbrer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pg_provider_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pg_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&card_type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&updated_) -
    reinterpret_cast<char*>(&card_type_)) + sizeof(updated_));
}

CardRegisterResultData::~CardRegisterResultData() {
  // @@protoc_insertion_point(destructor:card_v2.CardRegisterResultData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CardRegisterResultData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  card_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bin_numbrer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_tel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_postcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pg_provider_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pg_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CardRegisterResultData::ArenaDtor(void* object) {
  CardRegisterResultData* _this = reinterpret_cast< CardRegisterResultData* >(object);
  (void)_this;
}
void CardRegisterResultData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CardRegisterResultData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CardRegisterResultData::Clear() {
// @@protoc_insertion_point(message_clear_start:card_v2.CardRegisterResultData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  card_uid_.ClearToEmpty();
  card_name_.ClearToEmpty();
  card_code_.ClearToEmpty();
  bin_numbrer_.ClearToEmpty();
  customer_name_.ClearToEmpty();
  customer_tel_.ClearToEmpty();
  customer_email_.ClearToEmpty();
  customer_addr_.ClearToEmpty();
  customer_postcode_.ClearToEmpty();
  pg_provider_.ClearToEmpty();
  pg_id_.ClearToEmpty();
  ::memset(&card_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updated_) -
      reinterpret_cast<char*>(&card_type_)) + sizeof(updated_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CardRegisterResultData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string card_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_card_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterResultData.card_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_card_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterResultData.card_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_card_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterResultData.card_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string bin_numbrer = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_bin_numbrer();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterResultData.bin_numbrer"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 card_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          card_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_customer_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterResultData.customer_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_tel = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_customer_tel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterResultData.customer_tel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_email = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_customer_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterResultData.customer_email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_addr = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_customer_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterResultData.customer_addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_postcode = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_customer_postcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterResultData.customer_postcode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 inserted = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          inserted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 updated = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          updated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pg_provider = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_pg_provider();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterResultData.pg_provider"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pg_id = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_pg_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterResultData.pg_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CardRegisterResultData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:card_v2.CardRegisterResultData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string card_uid = 1;
  if (this->card_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_uid().data(), static_cast<int>(this->_internal_card_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterResultData.card_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_card_uid(), target);
  }

  // string card_name = 2;
  if (this->card_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_name().data(), static_cast<int>(this->_internal_card_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterResultData.card_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_card_name(), target);
  }

  // string card_code = 3;
  if (this->card_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_code().data(), static_cast<int>(this->_internal_card_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterResultData.card_code");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_card_code(), target);
  }

  // string bin_numbrer = 4;
  if (this->bin_numbrer().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bin_numbrer().data(), static_cast<int>(this->_internal_bin_numbrer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterResultData.bin_numbrer");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_bin_numbrer(), target);
  }

  // int32 card_type = 5;
  if (this->card_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_card_type(), target);
  }

  // string customer_name = 6;
  if (this->customer_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_name().data(), static_cast<int>(this->_internal_customer_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterResultData.customer_name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_customer_name(), target);
  }

  // string customer_tel = 7;
  if (this->customer_tel().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_tel().data(), static_cast<int>(this->_internal_customer_tel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterResultData.customer_tel");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_customer_tel(), target);
  }

  // string customer_email = 8;
  if (this->customer_email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_email().data(), static_cast<int>(this->_internal_customer_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterResultData.customer_email");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_customer_email(), target);
  }

  // string customer_addr = 9;
  if (this->customer_addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_addr().data(), static_cast<int>(this->_internal_customer_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterResultData.customer_addr");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_customer_addr(), target);
  }

  // string customer_postcode = 10;
  if (this->customer_postcode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_postcode().data(), static_cast<int>(this->_internal_customer_postcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterResultData.customer_postcode");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_customer_postcode(), target);
  }

  // int32 inserted = 11;
  if (this->inserted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_inserted(), target);
  }

  // int32 updated = 12;
  if (this->updated() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_updated(), target);
  }

  // string pg_provider = 13;
  if (this->pg_provider().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pg_provider().data(), static_cast<int>(this->_internal_pg_provider().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterResultData.pg_provider");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_pg_provider(), target);
  }

  // string pg_id = 14;
  if (this->pg_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pg_id().data(), static_cast<int>(this->_internal_pg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterResultData.pg_id");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_pg_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:card_v2.CardRegisterResultData)
  return target;
}

size_t CardRegisterResultData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:card_v2.CardRegisterResultData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string card_uid = 1;
  if (this->card_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_uid());
  }

  // string card_name = 2;
  if (this->card_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_name());
  }

  // string card_code = 3;
  if (this->card_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_code());
  }

  // string bin_numbrer = 4;
  if (this->bin_numbrer().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bin_numbrer());
  }

  // string customer_name = 6;
  if (this->customer_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_name());
  }

  // string customer_tel = 7;
  if (this->customer_tel().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_tel());
  }

  // string customer_email = 8;
  if (this->customer_email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_email());
  }

  // string customer_addr = 9;
  if (this->customer_addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_addr());
  }

  // string customer_postcode = 10;
  if (this->customer_postcode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_postcode());
  }

  // string pg_provider = 13;
  if (this->pg_provider().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pg_provider());
  }

  // string pg_id = 14;
  if (this->pg_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pg_id());
  }

  // int32 card_type = 5;
  if (this->card_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_card_type());
  }

  // int32 inserted = 11;
  if (this->inserted() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_inserted());
  }

  // int32 updated = 12;
  if (this->updated() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_updated());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardRegisterResultData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:card_v2.CardRegisterResultData)
  GOOGLE_DCHECK_NE(&from, this);
  const CardRegisterResultData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CardRegisterResultData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:card_v2.CardRegisterResultData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:card_v2.CardRegisterResultData)
    MergeFrom(*source);
  }
}

void CardRegisterResultData::MergeFrom(const CardRegisterResultData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:card_v2.CardRegisterResultData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.card_uid().size() > 0) {
    _internal_set_card_uid(from._internal_card_uid());
  }
  if (from.card_name().size() > 0) {
    _internal_set_card_name(from._internal_card_name());
  }
  if (from.card_code().size() > 0) {
    _internal_set_card_code(from._internal_card_code());
  }
  if (from.bin_numbrer().size() > 0) {
    _internal_set_bin_numbrer(from._internal_bin_numbrer());
  }
  if (from.customer_name().size() > 0) {
    _internal_set_customer_name(from._internal_customer_name());
  }
  if (from.customer_tel().size() > 0) {
    _internal_set_customer_tel(from._internal_customer_tel());
  }
  if (from.customer_email().size() > 0) {
    _internal_set_customer_email(from._internal_customer_email());
  }
  if (from.customer_addr().size() > 0) {
    _internal_set_customer_addr(from._internal_customer_addr());
  }
  if (from.customer_postcode().size() > 0) {
    _internal_set_customer_postcode(from._internal_customer_postcode());
  }
  if (from.pg_provider().size() > 0) {
    _internal_set_pg_provider(from._internal_pg_provider());
  }
  if (from.pg_id().size() > 0) {
    _internal_set_pg_id(from._internal_pg_id());
  }
  if (from.card_type() != 0) {
    _internal_set_card_type(from._internal_card_type());
  }
  if (from.inserted() != 0) {
    _internal_set_inserted(from._internal_inserted());
  }
  if (from.updated() != 0) {
    _internal_set_updated(from._internal_updated());
  }
}

void CardRegisterResultData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:card_v2.CardRegisterResultData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardRegisterResultData::CopyFrom(const CardRegisterResultData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:card_v2.CardRegisterResultData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardRegisterResultData::IsInitialized() const {
  return true;
}

void CardRegisterResultData::InternalSwap(CardRegisterResultData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  card_uid_.Swap(&other->card_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  card_name_.Swap(&other->card_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  card_code_.Swap(&other->card_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  bin_numbrer_.Swap(&other->bin_numbrer_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_name_.Swap(&other->customer_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_tel_.Swap(&other->customer_tel_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_email_.Swap(&other->customer_email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_addr_.Swap(&other->customer_addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_postcode_.Swap(&other->customer_postcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pg_provider_.Swap(&other->pg_provider_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pg_id_.Swap(&other->pg_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CardRegisterResultData, updated_)
      + sizeof(CardRegisterResultData::updated_)
      - PROTOBUF_FIELD_OFFSET(CardRegisterResultData, card_type_)>(
          reinterpret_cast<char*>(&card_type_),
          reinterpret_cast<char*>(&other->card_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CardRegisterResultData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CardRegisterResponse::_Internal {
 public:
  static const ::card_v2::CardRegisterResultData& response(const CardRegisterResponse* msg);
};

const ::card_v2::CardRegisterResultData&
CardRegisterResponse::_Internal::response(const CardRegisterResponse* msg) {
  return *msg->response_;
}
CardRegisterResponse::CardRegisterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:card_v2.CardRegisterResponse)
}
CardRegisterResponse::CardRegisterResponse(const CardRegisterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  if (from._internal_has_response()) {
    response_ = new ::card_v2::CardRegisterResultData(*from.response_);
  } else {
    response_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:card_v2.CardRegisterResponse)
}

void CardRegisterResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&response_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&response_)) + sizeof(code_));
}

CardRegisterResponse::~CardRegisterResponse() {
  // @@protoc_insertion_point(destructor:card_v2.CardRegisterResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CardRegisterResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete response_;
}

void CardRegisterResponse::ArenaDtor(void* object) {
  CardRegisterResponse* _this = reinterpret_cast< CardRegisterResponse* >(object);
  (void)_this;
}
void CardRegisterResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CardRegisterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CardRegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:card_v2.CardRegisterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  if (GetArena() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CardRegisterResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CardRegisterResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .card_v2.CardRegisterResultData response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CardRegisterResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:card_v2.CardRegisterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CardRegisterResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .card_v2.CardRegisterResultData response = 3;
  if (this->has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:card_v2.CardRegisterResponse)
  return target;
}

size_t CardRegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:card_v2.CardRegisterResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .card_v2.CardRegisterResultData response = 3;
  if (this->has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardRegisterResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:card_v2.CardRegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CardRegisterResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CardRegisterResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:card_v2.CardRegisterResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:card_v2.CardRegisterResponse)
    MergeFrom(*source);
  }
}

void CardRegisterResponse::MergeFrom(const CardRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:card_v2.CardRegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.has_response()) {
    _internal_mutable_response()->::card_v2::CardRegisterResultData::MergeFrom(from._internal_response());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void CardRegisterResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:card_v2.CardRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardRegisterResponse::CopyFrom(const CardRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:card_v2.CardRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardRegisterResponse::IsInitialized() const {
  return true;
}

void CardRegisterResponse::InternalSwap(CardRegisterResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CardRegisterResponse, code_)
      + sizeof(CardRegisterResponse::code_)
      - PROTOBUF_FIELD_OFFSET(CardRegisterResponse, response_)>(
          reinterpret_cast<char*>(&response_),
          reinterpret_cast<char*>(&other->response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CardRegisterResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetCardInfoRequest::_Internal {
 public:
};

GetCardInfoRequest::GetCardInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:card_v2.GetCardInfoRequest)
}
GetCardInfoRequest::GetCardInfoRequest(const GetCardInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  card_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_uid().empty()) {
    card_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_uid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:card_v2.GetCardInfoRequest)
}

void GetCardInfoRequest::SharedCtor() {
card_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetCardInfoRequest::~GetCardInfoRequest() {
  // @@protoc_insertion_point(destructor:card_v2.GetCardInfoRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCardInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  card_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetCardInfoRequest::ArenaDtor(void* object) {
  GetCardInfoRequest* _this = reinterpret_cast< GetCardInfoRequest* >(object);
  (void)_this;
}
void GetCardInfoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCardInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetCardInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:card_v2.GetCardInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  card_uid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCardInfoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string card_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_card_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.GetCardInfoRequest.card_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCardInfoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:card_v2.GetCardInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string card_uid = 1;
  if (this->card_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_uid().data(), static_cast<int>(this->_internal_card_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.GetCardInfoRequest.card_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_card_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:card_v2.GetCardInfoRequest)
  return target;
}

size_t GetCardInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:card_v2.GetCardInfoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string card_uid = 1;
  if (this->card_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_uid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCardInfoRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:card_v2.GetCardInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCardInfoRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCardInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:card_v2.GetCardInfoRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:card_v2.GetCardInfoRequest)
    MergeFrom(*source);
  }
}

void GetCardInfoRequest::MergeFrom(const GetCardInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:card_v2.GetCardInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.card_uid().size() > 0) {
    _internal_set_card_uid(from._internal_card_uid());
  }
}

void GetCardInfoRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:card_v2.GetCardInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCardInfoRequest::CopyFrom(const GetCardInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:card_v2.GetCardInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCardInfoRequest::IsInitialized() const {
  return true;
}

void GetCardInfoRequest::InternalSwap(GetCardInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  card_uid_.Swap(&other->card_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCardInfoRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetCardInfoData::_Internal {
 public:
};

GetCardInfoData::GetCardInfoData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:card_v2.GetCardInfoData)
}
GetCardInfoData::GetCardInfoData(const GetCardInfoData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  card_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_uid().empty()) {
    card_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_uid(), 
      GetArena());
  }
  card_provider_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_provider().empty()) {
    card_provider_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_provider(), 
      GetArena());
  }
  card_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_code().empty()) {
    card_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_code(), 
      GetArena());
  }
  bin_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bin_number().empty()) {
    bin_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bin_number(), 
      GetArena());
  }
  customer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_name().empty()) {
    customer_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_name(), 
      GetArena());
  }
  customer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_tel().empty()) {
    customer_tel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_tel(), 
      GetArena());
  }
  customer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_email().empty()) {
    customer_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_email(), 
      GetArena());
  }
  customer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_addr().empty()) {
    customer_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_addr(), 
      GetArena());
  }
  customer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_postcode().empty()) {
    customer_postcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_postcode(), 
      GetArena());
  }
  ::memcpy(&card_type_, &from.card_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&updated_) -
    reinterpret_cast<char*>(&card_type_)) + sizeof(updated_));
  // @@protoc_insertion_point(copy_constructor:card_v2.GetCardInfoData)
}

void GetCardInfoData::SharedCtor() {
card_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_provider_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
bin_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&card_type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&updated_) -
    reinterpret_cast<char*>(&card_type_)) + sizeof(updated_));
}

GetCardInfoData::~GetCardInfoData() {
  // @@protoc_insertion_point(destructor:card_v2.GetCardInfoData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCardInfoData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  card_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_provider_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bin_number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_tel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_postcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetCardInfoData::ArenaDtor(void* object) {
  GetCardInfoData* _this = reinterpret_cast< GetCardInfoData* >(object);
  (void)_this;
}
void GetCardInfoData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCardInfoData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetCardInfoData::Clear() {
// @@protoc_insertion_point(message_clear_start:card_v2.GetCardInfoData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  card_uid_.ClearToEmpty();
  card_provider_.ClearToEmpty();
  card_code_.ClearToEmpty();
  bin_number_.ClearToEmpty();
  customer_name_.ClearToEmpty();
  customer_tel_.ClearToEmpty();
  customer_email_.ClearToEmpty();
  customer_addr_.ClearToEmpty();
  customer_postcode_.ClearToEmpty();
  ::memset(&card_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updated_) -
      reinterpret_cast<char*>(&card_type_)) + sizeof(updated_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCardInfoData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string card_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_card_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.GetCardInfoData.card_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_provider = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_card_provider();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.GetCardInfoData.card_provider"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_card_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.GetCardInfoData.card_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string bin_number = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_bin_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.GetCardInfoData.bin_number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 card_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          card_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_customer_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.GetCardInfoData.customer_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_tel = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_customer_tel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.GetCardInfoData.customer_tel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_email = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_customer_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.GetCardInfoData.customer_email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_addr = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_customer_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.GetCardInfoData.customer_addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_postcode = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_customer_postcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.GetCardInfoData.customer_postcode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 inserted = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          inserted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 updated = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          updated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCardInfoData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:card_v2.GetCardInfoData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string card_uid = 1;
  if (this->card_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_uid().data(), static_cast<int>(this->_internal_card_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.GetCardInfoData.card_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_card_uid(), target);
  }

  // string card_provider = 2;
  if (this->card_provider().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_provider().data(), static_cast<int>(this->_internal_card_provider().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.GetCardInfoData.card_provider");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_card_provider(), target);
  }

  // string card_code = 3;
  if (this->card_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_code().data(), static_cast<int>(this->_internal_card_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.GetCardInfoData.card_code");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_card_code(), target);
  }

  // string bin_number = 4;
  if (this->bin_number().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bin_number().data(), static_cast<int>(this->_internal_bin_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.GetCardInfoData.bin_number");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_bin_number(), target);
  }

  // int32 card_type = 5;
  if (this->card_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_card_type(), target);
  }

  // string customer_name = 6;
  if (this->customer_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_name().data(), static_cast<int>(this->_internal_customer_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.GetCardInfoData.customer_name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_customer_name(), target);
  }

  // string customer_tel = 7;
  if (this->customer_tel().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_tel().data(), static_cast<int>(this->_internal_customer_tel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.GetCardInfoData.customer_tel");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_customer_tel(), target);
  }

  // string customer_email = 8;
  if (this->customer_email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_email().data(), static_cast<int>(this->_internal_customer_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.GetCardInfoData.customer_email");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_customer_email(), target);
  }

  // string customer_addr = 9;
  if (this->customer_addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_addr().data(), static_cast<int>(this->_internal_customer_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.GetCardInfoData.customer_addr");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_customer_addr(), target);
  }

  // string customer_postcode = 10;
  if (this->customer_postcode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_postcode().data(), static_cast<int>(this->_internal_customer_postcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.GetCardInfoData.customer_postcode");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_customer_postcode(), target);
  }

  // int32 inserted = 11;
  if (this->inserted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_inserted(), target);
  }

  // int32 updated = 12;
  if (this->updated() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_updated(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:card_v2.GetCardInfoData)
  return target;
}

size_t GetCardInfoData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:card_v2.GetCardInfoData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string card_uid = 1;
  if (this->card_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_uid());
  }

  // string card_provider = 2;
  if (this->card_provider().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_provider());
  }

  // string card_code = 3;
  if (this->card_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_code());
  }

  // string bin_number = 4;
  if (this->bin_number().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bin_number());
  }

  // string customer_name = 6;
  if (this->customer_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_name());
  }

  // string customer_tel = 7;
  if (this->customer_tel().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_tel());
  }

  // string customer_email = 8;
  if (this->customer_email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_email());
  }

  // string customer_addr = 9;
  if (this->customer_addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_addr());
  }

  // string customer_postcode = 10;
  if (this->customer_postcode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_postcode());
  }

  // int32 card_type = 5;
  if (this->card_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_card_type());
  }

  // int32 inserted = 11;
  if (this->inserted() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_inserted());
  }

  // int32 updated = 12;
  if (this->updated() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_updated());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCardInfoData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:card_v2.GetCardInfoData)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCardInfoData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCardInfoData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:card_v2.GetCardInfoData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:card_v2.GetCardInfoData)
    MergeFrom(*source);
  }
}

void GetCardInfoData::MergeFrom(const GetCardInfoData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:card_v2.GetCardInfoData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.card_uid().size() > 0) {
    _internal_set_card_uid(from._internal_card_uid());
  }
  if (from.card_provider().size() > 0) {
    _internal_set_card_provider(from._internal_card_provider());
  }
  if (from.card_code().size() > 0) {
    _internal_set_card_code(from._internal_card_code());
  }
  if (from.bin_number().size() > 0) {
    _internal_set_bin_number(from._internal_bin_number());
  }
  if (from.customer_name().size() > 0) {
    _internal_set_customer_name(from._internal_customer_name());
  }
  if (from.customer_tel().size() > 0) {
    _internal_set_customer_tel(from._internal_customer_tel());
  }
  if (from.customer_email().size() > 0) {
    _internal_set_customer_email(from._internal_customer_email());
  }
  if (from.customer_addr().size() > 0) {
    _internal_set_customer_addr(from._internal_customer_addr());
  }
  if (from.customer_postcode().size() > 0) {
    _internal_set_customer_postcode(from._internal_customer_postcode());
  }
  if (from.card_type() != 0) {
    _internal_set_card_type(from._internal_card_type());
  }
  if (from.inserted() != 0) {
    _internal_set_inserted(from._internal_inserted());
  }
  if (from.updated() != 0) {
    _internal_set_updated(from._internal_updated());
  }
}

void GetCardInfoData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:card_v2.GetCardInfoData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCardInfoData::CopyFrom(const GetCardInfoData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:card_v2.GetCardInfoData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCardInfoData::IsInitialized() const {
  return true;
}

void GetCardInfoData::InternalSwap(GetCardInfoData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  card_uid_.Swap(&other->card_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  card_provider_.Swap(&other->card_provider_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  card_code_.Swap(&other->card_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  bin_number_.Swap(&other->bin_number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_name_.Swap(&other->customer_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_tel_.Swap(&other->customer_tel_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_email_.Swap(&other->customer_email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_addr_.Swap(&other->customer_addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_postcode_.Swap(&other->customer_postcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetCardInfoData, updated_)
      + sizeof(GetCardInfoData::updated_)
      - PROTOBUF_FIELD_OFFSET(GetCardInfoData, card_type_)>(
          reinterpret_cast<char*>(&card_type_),
          reinterpret_cast<char*>(&other->card_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCardInfoData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetCardInfoResponse::_Internal {
 public:
  static const ::card_v2::GetCardInfoData& response(const GetCardInfoResponse* msg);
};

const ::card_v2::GetCardInfoData&
GetCardInfoResponse::_Internal::response(const GetCardInfoResponse* msg) {
  return *msg->response_;
}
GetCardInfoResponse::GetCardInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:card_v2.GetCardInfoResponse)
}
GetCardInfoResponse::GetCardInfoResponse(const GetCardInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  if (from._internal_has_response()) {
    response_ = new ::card_v2::GetCardInfoData(*from.response_);
  } else {
    response_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:card_v2.GetCardInfoResponse)
}

void GetCardInfoResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&response_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&response_)) + sizeof(code_));
}

GetCardInfoResponse::~GetCardInfoResponse() {
  // @@protoc_insertion_point(destructor:card_v2.GetCardInfoResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCardInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete response_;
}

void GetCardInfoResponse::ArenaDtor(void* object) {
  GetCardInfoResponse* _this = reinterpret_cast< GetCardInfoResponse* >(object);
  (void)_this;
}
void GetCardInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCardInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetCardInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:card_v2.GetCardInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  if (GetArena() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCardInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.GetCardInfoResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .card_v2.GetCardInfoData response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCardInfoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:card_v2.GetCardInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.GetCardInfoResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .card_v2.GetCardInfoData response = 3;
  if (this->has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:card_v2.GetCardInfoResponse)
  return target;
}

size_t GetCardInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:card_v2.GetCardInfoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .card_v2.GetCardInfoData response = 3;
  if (this->has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCardInfoResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:card_v2.GetCardInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCardInfoResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCardInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:card_v2.GetCardInfoResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:card_v2.GetCardInfoResponse)
    MergeFrom(*source);
  }
}

void GetCardInfoResponse::MergeFrom(const GetCardInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:card_v2.GetCardInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.has_response()) {
    _internal_mutable_response()->::card_v2::GetCardInfoData::MergeFrom(from._internal_response());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GetCardInfoResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:card_v2.GetCardInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCardInfoResponse::CopyFrom(const GetCardInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:card_v2.GetCardInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCardInfoResponse::IsInitialized() const {
  return true;
}

void GetCardInfoResponse::InternalSwap(GetCardInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetCardInfoResponse, code_)
      + sizeof(GetCardInfoResponse::code_)
      - PROTOBUF_FIELD_OFFSET(GetCardInfoResponse, response_)>(
          reinterpret_cast<char*>(&response_),
          reinterpret_cast<char*>(&other->response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCardInfoResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteCardInfoRequest::_Internal {
 public:
};

DeleteCardInfoRequest::DeleteCardInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:card_v2.DeleteCardInfoRequest)
}
DeleteCardInfoRequest::DeleteCardInfoRequest(const DeleteCardInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  card_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_uid().empty()) {
    card_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_uid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:card_v2.DeleteCardInfoRequest)
}

void DeleteCardInfoRequest::SharedCtor() {
card_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteCardInfoRequest::~DeleteCardInfoRequest() {
  // @@protoc_insertion_point(destructor:card_v2.DeleteCardInfoRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteCardInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  card_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteCardInfoRequest::ArenaDtor(void* object) {
  DeleteCardInfoRequest* _this = reinterpret_cast< DeleteCardInfoRequest* >(object);
  (void)_this;
}
void DeleteCardInfoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteCardInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteCardInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:card_v2.DeleteCardInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  card_uid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteCardInfoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string card_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_card_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.DeleteCardInfoRequest.card_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteCardInfoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:card_v2.DeleteCardInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string card_uid = 1;
  if (this->card_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_uid().data(), static_cast<int>(this->_internal_card_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.DeleteCardInfoRequest.card_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_card_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:card_v2.DeleteCardInfoRequest)
  return target;
}

size_t DeleteCardInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:card_v2.DeleteCardInfoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string card_uid = 1;
  if (this->card_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_uid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteCardInfoRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:card_v2.DeleteCardInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteCardInfoRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteCardInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:card_v2.DeleteCardInfoRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:card_v2.DeleteCardInfoRequest)
    MergeFrom(*source);
  }
}

void DeleteCardInfoRequest::MergeFrom(const DeleteCardInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:card_v2.DeleteCardInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.card_uid().size() > 0) {
    _internal_set_card_uid(from._internal_card_uid());
  }
}

void DeleteCardInfoRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:card_v2.DeleteCardInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCardInfoRequest::CopyFrom(const DeleteCardInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:card_v2.DeleteCardInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCardInfoRequest::IsInitialized() const {
  return true;
}

void DeleteCardInfoRequest::InternalSwap(DeleteCardInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  card_uid_.Swap(&other->card_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteCardInfoRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteCardInfoResponse::_Internal {
 public:
};

DeleteCardInfoResponse::DeleteCardInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:card_v2.DeleteCardInfoResponse)
}
DeleteCardInfoResponse::DeleteCardInfoResponse(const DeleteCardInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:card_v2.DeleteCardInfoResponse)
}

void DeleteCardInfoResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
code_ = 0;
}

DeleteCardInfoResponse::~DeleteCardInfoResponse() {
  // @@protoc_insertion_point(destructor:card_v2.DeleteCardInfoResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteCardInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteCardInfoResponse::ArenaDtor(void* object) {
  DeleteCardInfoResponse* _this = reinterpret_cast< DeleteCardInfoResponse* >(object);
  (void)_this;
}
void DeleteCardInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteCardInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteCardInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:card_v2.DeleteCardInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteCardInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.DeleteCardInfoResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteCardInfoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:card_v2.DeleteCardInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.DeleteCardInfoResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:card_v2.DeleteCardInfoResponse)
  return target;
}

size_t DeleteCardInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:card_v2.DeleteCardInfoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteCardInfoResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:card_v2.DeleteCardInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteCardInfoResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteCardInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:card_v2.DeleteCardInfoResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:card_v2.DeleteCardInfoResponse)
    MergeFrom(*source);
  }
}

void DeleteCardInfoResponse::MergeFrom(const DeleteCardInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:card_v2.DeleteCardInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void DeleteCardInfoResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:card_v2.DeleteCardInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCardInfoResponse::CopyFrom(const DeleteCardInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:card_v2.DeleteCardInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCardInfoResponse::IsInitialized() const {
  return true;
}

void DeleteCardInfoResponse::InternalSwap(DeleteCardInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteCardInfoResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PayByRegisteredCardRequest::_Internal {
 public:
};

PayByRegisteredCardRequest::PayByRegisteredCardRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:card_v2.PayByRegisteredCardRequest)
}
PayByRegisteredCardRequest::PayByRegisteredCardRequest(const PayByRegisteredCardRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  card_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_uid().empty()) {
    card_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_uid(), 
      GetArena());
  }
  merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_merchant_uid().empty()) {
    merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_merchant_uid(), 
      GetArena());
  }
  amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_amount().empty()) {
    amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_amount(), 
      GetArena());
  }
  tax_free_amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tax_free_amount().empty()) {
    tax_free_amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tax_free_amount(), 
      GetArena());
  }
  order_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_order_name().empty()) {
    order_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order_name(), 
      GetArena());
  }
  custom_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_custom_data().empty()) {
    custom_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_custom_data(), 
      GetArena());
  }
  callback_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_callback_url().empty()) {
    callback_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_callback_url(), 
      GetArena());
  }
  buyer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_addr().empty()) {
    buyer_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_addr(), 
      GetArena());
  }
  buyer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_email().empty()) {
    buyer_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_email(), 
      GetArena());
  }
  buyer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_name().empty()) {
    buyer_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_name(), 
      GetArena());
  }
  buyer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_postcode().empty()) {
    buyer_postcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_postcode(), 
      GetArena());
  }
  buyer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_tel().empty()) {
    buyer_tel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_tel(), 
      GetArena());
  }
  ::memcpy(&card_installment_, &from.card_installment_,
    static_cast<size_t>(reinterpret_cast<char*>(&interest_free_by_merchant_) -
    reinterpret_cast<char*>(&card_installment_)) + sizeof(interest_free_by_merchant_));
  // @@protoc_insertion_point(copy_constructor:card_v2.PayByRegisteredCardRequest)
}

void PayByRegisteredCardRequest::SharedCtor() {
card_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
tax_free_amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
order_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
custom_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
callback_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&card_installment_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&interest_free_by_merchant_) -
    reinterpret_cast<char*>(&card_installment_)) + sizeof(interest_free_by_merchant_));
}

PayByRegisteredCardRequest::~PayByRegisteredCardRequest() {
  // @@protoc_insertion_point(destructor:card_v2.PayByRegisteredCardRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PayByRegisteredCardRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  card_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  merchant_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tax_free_amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  custom_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  callback_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_postcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_tel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PayByRegisteredCardRequest::ArenaDtor(void* object) {
  PayByRegisteredCardRequest* _this = reinterpret_cast< PayByRegisteredCardRequest* >(object);
  (void)_this;
}
void PayByRegisteredCardRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PayByRegisteredCardRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PayByRegisteredCardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:card_v2.PayByRegisteredCardRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  card_uid_.ClearToEmpty();
  merchant_uid_.ClearToEmpty();
  amount_.ClearToEmpty();
  tax_free_amount_.ClearToEmpty();
  order_name_.ClearToEmpty();
  custom_data_.ClearToEmpty();
  callback_url_.ClearToEmpty();
  buyer_addr_.ClearToEmpty();
  buyer_email_.ClearToEmpty();
  buyer_name_.ClearToEmpty();
  buyer_postcode_.ClearToEmpty();
  buyer_tel_.ClearToEmpty();
  ::memset(&card_installment_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interest_free_by_merchant_) -
      reinterpret_cast<char*>(&card_installment_)) + sizeof(interest_free_by_merchant_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PayByRegisteredCardRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string card_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_card_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardRequest.card_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string merchant_uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_merchant_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardRequest.merchant_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string amount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardRequest.amount"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string tax_free_amount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_tax_free_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardRequest.tax_free_amount"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string order_name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_order_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardRequest.order_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 card_installment = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          card_installment_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool interest_free_by_merchant = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          interest_free_by_merchant_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string custom_data = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_custom_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardRequest.custom_data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string callback_url = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_callback_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardRequest.callback_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_addr = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_buyer_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardRequest.buyer_addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_email = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_buyer_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardRequest.buyer_email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_name = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_buyer_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardRequest.buyer_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_postcode = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_buyer_postcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardRequest.buyer_postcode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_tel = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_buyer_tel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardRequest.buyer_tel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PayByRegisteredCardRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:card_v2.PayByRegisteredCardRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string card_uid = 1;
  if (this->card_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_uid().data(), static_cast<int>(this->_internal_card_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardRequest.card_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_card_uid(), target);
  }

  // string merchant_uid = 2;
  if (this->merchant_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_merchant_uid().data(), static_cast<int>(this->_internal_merchant_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardRequest.merchant_uid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_merchant_uid(), target);
  }

  // string amount = 3;
  if (this->amount().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_amount().data(), static_cast<int>(this->_internal_amount().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardRequest.amount");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_amount(), target);
  }

  // string tax_free_amount = 4;
  if (this->tax_free_amount().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tax_free_amount().data(), static_cast<int>(this->_internal_tax_free_amount().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardRequest.tax_free_amount");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_tax_free_amount(), target);
  }

  // string order_name = 5;
  if (this->order_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_name().data(), static_cast<int>(this->_internal_order_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardRequest.order_name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_order_name(), target);
  }

  // int32 card_installment = 6;
  if (this->card_installment() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_card_installment(), target);
  }

  // bool interest_free_by_merchant = 7;
  if (this->interest_free_by_merchant() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_interest_free_by_merchant(), target);
  }

  // string custom_data = 8;
  if (this->custom_data().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_custom_data().data(), static_cast<int>(this->_internal_custom_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardRequest.custom_data");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_custom_data(), target);
  }

  // string callback_url = 9;
  if (this->callback_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_callback_url().data(), static_cast<int>(this->_internal_callback_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardRequest.callback_url");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_callback_url(), target);
  }

  // string buyer_addr = 10;
  if (this->buyer_addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_addr().data(), static_cast<int>(this->_internal_buyer_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardRequest.buyer_addr");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_buyer_addr(), target);
  }

  // string buyer_email = 11;
  if (this->buyer_email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_email().data(), static_cast<int>(this->_internal_buyer_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardRequest.buyer_email");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_buyer_email(), target);
  }

  // string buyer_name = 12;
  if (this->buyer_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_name().data(), static_cast<int>(this->_internal_buyer_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardRequest.buyer_name");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_buyer_name(), target);
  }

  // string buyer_postcode = 13;
  if (this->buyer_postcode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_postcode().data(), static_cast<int>(this->_internal_buyer_postcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardRequest.buyer_postcode");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_buyer_postcode(), target);
  }

  // string buyer_tel = 14;
  if (this->buyer_tel().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_tel().data(), static_cast<int>(this->_internal_buyer_tel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardRequest.buyer_tel");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_buyer_tel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:card_v2.PayByRegisteredCardRequest)
  return target;
}

size_t PayByRegisteredCardRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:card_v2.PayByRegisteredCardRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string card_uid = 1;
  if (this->card_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_uid());
  }

  // string merchant_uid = 2;
  if (this->merchant_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_merchant_uid());
  }

  // string amount = 3;
  if (this->amount().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_amount());
  }

  // string tax_free_amount = 4;
  if (this->tax_free_amount().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tax_free_amount());
  }

  // string order_name = 5;
  if (this->order_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_name());
  }

  // string custom_data = 8;
  if (this->custom_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_custom_data());
  }

  // string callback_url = 9;
  if (this->callback_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_callback_url());
  }

  // string buyer_addr = 10;
  if (this->buyer_addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_addr());
  }

  // string buyer_email = 11;
  if (this->buyer_email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_email());
  }

  // string buyer_name = 12;
  if (this->buyer_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_name());
  }

  // string buyer_postcode = 13;
  if (this->buyer_postcode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_postcode());
  }

  // string buyer_tel = 14;
  if (this->buyer_tel().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_tel());
  }

  // int32 card_installment = 6;
  if (this->card_installment() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_card_installment());
  }

  // bool interest_free_by_merchant = 7;
  if (this->interest_free_by_merchant() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PayByRegisteredCardRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:card_v2.PayByRegisteredCardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PayByRegisteredCardRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PayByRegisteredCardRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:card_v2.PayByRegisteredCardRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:card_v2.PayByRegisteredCardRequest)
    MergeFrom(*source);
  }
}

void PayByRegisteredCardRequest::MergeFrom(const PayByRegisteredCardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:card_v2.PayByRegisteredCardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.card_uid().size() > 0) {
    _internal_set_card_uid(from._internal_card_uid());
  }
  if (from.merchant_uid().size() > 0) {
    _internal_set_merchant_uid(from._internal_merchant_uid());
  }
  if (from.amount().size() > 0) {
    _internal_set_amount(from._internal_amount());
  }
  if (from.tax_free_amount().size() > 0) {
    _internal_set_tax_free_amount(from._internal_tax_free_amount());
  }
  if (from.order_name().size() > 0) {
    _internal_set_order_name(from._internal_order_name());
  }
  if (from.custom_data().size() > 0) {
    _internal_set_custom_data(from._internal_custom_data());
  }
  if (from.callback_url().size() > 0) {
    _internal_set_callback_url(from._internal_callback_url());
  }
  if (from.buyer_addr().size() > 0) {
    _internal_set_buyer_addr(from._internal_buyer_addr());
  }
  if (from.buyer_email().size() > 0) {
    _internal_set_buyer_email(from._internal_buyer_email());
  }
  if (from.buyer_name().size() > 0) {
    _internal_set_buyer_name(from._internal_buyer_name());
  }
  if (from.buyer_postcode().size() > 0) {
    _internal_set_buyer_postcode(from._internal_buyer_postcode());
  }
  if (from.buyer_tel().size() > 0) {
    _internal_set_buyer_tel(from._internal_buyer_tel());
  }
  if (from.card_installment() != 0) {
    _internal_set_card_installment(from._internal_card_installment());
  }
  if (from.interest_free_by_merchant() != 0) {
    _internal_set_interest_free_by_merchant(from._internal_interest_free_by_merchant());
  }
}

void PayByRegisteredCardRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:card_v2.PayByRegisteredCardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PayByRegisteredCardRequest::CopyFrom(const PayByRegisteredCardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:card_v2.PayByRegisteredCardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PayByRegisteredCardRequest::IsInitialized() const {
  return true;
}

void PayByRegisteredCardRequest::InternalSwap(PayByRegisteredCardRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  card_uid_.Swap(&other->card_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  merchant_uid_.Swap(&other->merchant_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  amount_.Swap(&other->amount_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tax_free_amount_.Swap(&other->tax_free_amount_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  order_name_.Swap(&other->order_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  custom_data_.Swap(&other->custom_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  callback_url_.Swap(&other->callback_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_addr_.Swap(&other->buyer_addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_email_.Swap(&other->buyer_email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_name_.Swap(&other->buyer_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_postcode_.Swap(&other->buyer_postcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_tel_.Swap(&other->buyer_tel_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PayByRegisteredCardRequest, interest_free_by_merchant_)
      + sizeof(PayByRegisteredCardRequest::interest_free_by_merchant_)
      - PROTOBUF_FIELD_OFFSET(PayByRegisteredCardRequest, card_installment_)>(
          reinterpret_cast<char*>(&card_installment_),
          reinterpret_cast<char*>(&other->card_installment_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PayByRegisteredCardRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PayByRegisteredCardData::_Internal {
 public:
};

PayByRegisteredCardData::PayByRegisteredCardData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  cancel_history_(arena),
  cancel_receipt_urls_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:card_v2.PayByRegisteredCardData)
}
PayByRegisteredCardData::PayByRegisteredCardData(const PayByRegisteredCardData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      cancel_history_(from.cancel_history_),
      cancel_receipt_urls_(from.cancel_receipt_urls_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_amount().empty()) {
    amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_amount(), 
      GetArena());
  }
  apply_num_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_apply_num().empty()) {
    apply_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_apply_num(), 
      GetArena());
  }
  buyer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_addr().empty()) {
    buyer_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_addr(), 
      GetArena());
  }
  buyer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_email().empty()) {
    buyer_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_email(), 
      GetArena());
  }
  buyer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_name().empty()) {
    buyer_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_name(), 
      GetArena());
  }
  buyer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_postcode().empty()) {
    buyer_postcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_postcode(), 
      GetArena());
  }
  buyer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buyer_tel().empty()) {
    buyer_tel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buyer_tel(), 
      GetArena());
  }
  cancel_amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cancel_amount().empty()) {
    cancel_amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cancel_amount(), 
      GetArena());
  }
  cancel_reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cancel_reason().empty()) {
    cancel_reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cancel_reason(), 
      GetArena());
  }
  card_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_code().empty()) {
    card_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_code(), 
      GetArena());
  }
  card_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_name().empty()) {
    card_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_name(), 
      GetArena());
  }
  bin_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bin_number().empty()) {
    bin_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bin_number(), 
      GetArena());
  }
  channel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_channel().empty()) {
    channel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_channel(), 
      GetArena());
  }
  currency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_currency().empty()) {
    currency_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_currency(), 
      GetArena());
  }
  custom_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_custom_data().empty()) {
    custom_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_custom_data(), 
      GetArena());
  }
  card_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_uid().empty()) {
    card_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_uid(), 
      GetArena());
  }
  customer_uid_usage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_uid_usage().empty()) {
    customer_uid_usage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_uid_usage(), 
      GetArena());
  }
  fail_reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_fail_reason().empty()) {
    fail_reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_fail_reason(), 
      GetArena());
  }
  imp_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imp_uid().empty()) {
    imp_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imp_uid(), 
      GetArena());
  }
  merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_merchant_uid().empty()) {
    merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_merchant_uid(), 
      GetArena());
  }
  order_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_order_name().empty()) {
    order_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order_name(), 
      GetArena());
  }
  pay_method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pay_method().empty()) {
    pay_method_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pay_method(), 
      GetArena());
  }
  pg_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pg_id().empty()) {
    pg_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pg_id(), 
      GetArena());
  }
  pg_provider_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pg_provider().empty()) {
    pg_provider_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pg_provider(), 
      GetArena());
  }
  pg_tid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pg_tid().empty()) {
    pg_tid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pg_tid(), 
      GetArena());
  }
  receipt_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_receipt_url().empty()) {
    receipt_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_receipt_url(), 
      GetArena());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArena());
  }
  user_agent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_agent().empty()) {
    user_agent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user_agent(), 
      GetArena());
  }
  ::memcpy(&cancelled_at_, &from.cancelled_at_,
    static_cast<size_t>(reinterpret_cast<char*>(&started_at_) -
    reinterpret_cast<char*>(&cancelled_at_)) + sizeof(started_at_));
  // @@protoc_insertion_point(copy_constructor:card_v2.PayByRegisteredCardData)
}

void PayByRegisteredCardData::SharedCtor() {
amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
apply_num_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_postcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
buyer_tel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
cancel_amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
cancel_reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
bin_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
channel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
currency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
custom_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_uid_usage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
fail_reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
imp_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
order_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pay_method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pg_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pg_provider_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pg_tid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
receipt_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
user_agent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&cancelled_at_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&started_at_) -
    reinterpret_cast<char*>(&cancelled_at_)) + sizeof(started_at_));
}

PayByRegisteredCardData::~PayByRegisteredCardData() {
  // @@protoc_insertion_point(destructor:card_v2.PayByRegisteredCardData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PayByRegisteredCardData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  apply_num_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_postcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buyer_tel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cancel_amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cancel_reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bin_number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  currency_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  custom_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  customer_uid_usage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fail_reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  imp_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  merchant_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pay_method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pg_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pg_provider_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pg_tid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receipt_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_agent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PayByRegisteredCardData::ArenaDtor(void* object) {
  PayByRegisteredCardData* _this = reinterpret_cast< PayByRegisteredCardData* >(object);
  (void)_this;
}
void PayByRegisteredCardData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PayByRegisteredCardData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PayByRegisteredCardData::Clear() {
// @@protoc_insertion_point(message_clear_start:card_v2.PayByRegisteredCardData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cancel_history_.Clear();
  cancel_receipt_urls_.Clear();
  amount_.ClearToEmpty();
  apply_num_.ClearToEmpty();
  buyer_addr_.ClearToEmpty();
  buyer_email_.ClearToEmpty();
  buyer_name_.ClearToEmpty();
  buyer_postcode_.ClearToEmpty();
  buyer_tel_.ClearToEmpty();
  cancel_amount_.ClearToEmpty();
  cancel_reason_.ClearToEmpty();
  card_code_.ClearToEmpty();
  card_name_.ClearToEmpty();
  bin_number_.ClearToEmpty();
  channel_.ClearToEmpty();
  currency_.ClearToEmpty();
  custom_data_.ClearToEmpty();
  card_uid_.ClearToEmpty();
  customer_uid_usage_.ClearToEmpty();
  fail_reason_.ClearToEmpty();
  imp_uid_.ClearToEmpty();
  merchant_uid_.ClearToEmpty();
  order_name_.ClearToEmpty();
  pay_method_.ClearToEmpty();
  pg_id_.ClearToEmpty();
  pg_provider_.ClearToEmpty();
  pg_tid_.ClearToEmpty();
  receipt_url_.ClearToEmpty();
  status_.ClearToEmpty();
  user_agent_.ClearToEmpty();
  ::memset(&cancelled_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&started_at_) -
      reinterpret_cast<char*>(&cancelled_at_)) + sizeof(started_at_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PayByRegisteredCardData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string amount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.amount"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string apply_num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_apply_num();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.apply_num"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_addr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_buyer_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.buyer_addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_email = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_buyer_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.buyer_email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_buyer_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.buyer_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_postcode = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_buyer_postcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.buyer_postcode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string buyer_tel = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_buyer_tel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.buyer_tel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string cancel_amount = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_cancel_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.cancel_amount"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .card_v2.CancelHistory cancel_history = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_cancel_history(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // string cancel_reason = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_cancel_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.cancel_reason"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string cancel_receipt_urls = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_cancel_receipt_urls();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.cancel_receipt_urls"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 cancelled_at = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          cancelled_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_code = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_card_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.card_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_name = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_card_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.card_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string bin_number = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_bin_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.bin_number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 card_installment = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          card_installment_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 card_type = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          card_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool cash_receipt_issued = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          cash_receipt_issued_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string channel = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          auto str = _internal_mutable_channel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.channel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string currency = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          auto str = _internal_mutable_currency();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.currency"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string custom_data = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          auto str = _internal_mutable_custom_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.custom_data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_uid = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          auto str = _internal_mutable_card_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.card_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_uid_usage = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          auto str = _internal_mutable_customer_uid_usage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.customer_uid_usage"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string fail_reason = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          auto str = _internal_mutable_fail_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.fail_reason"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 failed_at = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 200)) {
          failed_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string imp_uid = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          auto str = _internal_mutable_imp_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.imp_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string merchant_uid = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          auto str = _internal_mutable_merchant_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.merchant_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string order_name = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          auto str = _internal_mutable_order_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.order_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 paid_at = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 232)) {
          paid_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pay_method = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          auto str = _internal_mutable_pay_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.pay_method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pg_id = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          auto str = _internal_mutable_pg_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.pg_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pg_provider = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 2)) {
          auto str = _internal_mutable_pg_provider();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.pg_provider"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pg_tid = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pg_tid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.pg_tid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string receipt_url = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_receipt_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.receipt_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 started_at = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          started_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user_agent = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_user_agent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardData.user_agent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PayByRegisteredCardData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:card_v2.PayByRegisteredCardData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string amount = 1;
  if (this->amount().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_amount().data(), static_cast<int>(this->_internal_amount().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.amount");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_amount(), target);
  }

  // string apply_num = 2;
  if (this->apply_num().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_apply_num().data(), static_cast<int>(this->_internal_apply_num().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.apply_num");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_apply_num(), target);
  }

  // string buyer_addr = 3;
  if (this->buyer_addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_addr().data(), static_cast<int>(this->_internal_buyer_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.buyer_addr");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_buyer_addr(), target);
  }

  // string buyer_email = 4;
  if (this->buyer_email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_email().data(), static_cast<int>(this->_internal_buyer_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.buyer_email");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_buyer_email(), target);
  }

  // string buyer_name = 5;
  if (this->buyer_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_name().data(), static_cast<int>(this->_internal_buyer_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.buyer_name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_buyer_name(), target);
  }

  // string buyer_postcode = 6;
  if (this->buyer_postcode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_postcode().data(), static_cast<int>(this->_internal_buyer_postcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.buyer_postcode");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_buyer_postcode(), target);
  }

  // string buyer_tel = 7;
  if (this->buyer_tel().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buyer_tel().data(), static_cast<int>(this->_internal_buyer_tel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.buyer_tel");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_buyer_tel(), target);
  }

  // string cancel_amount = 8;
  if (this->cancel_amount().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cancel_amount().data(), static_cast<int>(this->_internal_cancel_amount().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.cancel_amount");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_cancel_amount(), target);
  }

  // repeated .card_v2.CancelHistory cancel_history = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_cancel_history_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, this->_internal_cancel_history(i), target, stream);
  }

  // string cancel_reason = 10;
  if (this->cancel_reason().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cancel_reason().data(), static_cast<int>(this->_internal_cancel_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.cancel_reason");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_cancel_reason(), target);
  }

  // repeated string cancel_receipt_urls = 11;
  for (int i = 0, n = this->_internal_cancel_receipt_urls_size(); i < n; i++) {
    const auto& s = this->_internal_cancel_receipt_urls(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.cancel_receipt_urls");
    target = stream->WriteString(11, s, target);
  }

  // int32 cancelled_at = 12;
  if (this->cancelled_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_cancelled_at(), target);
  }

  // string card_code = 13;
  if (this->card_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_code().data(), static_cast<int>(this->_internal_card_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.card_code");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_card_code(), target);
  }

  // string card_name = 14;
  if (this->card_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_name().data(), static_cast<int>(this->_internal_card_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.card_name");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_card_name(), target);
  }

  // string bin_number = 15;
  if (this->bin_number().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bin_number().data(), static_cast<int>(this->_internal_bin_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.bin_number");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_bin_number(), target);
  }

  // int32 card_installment = 16;
  if (this->card_installment() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(16, this->_internal_card_installment(), target);
  }

  // int32 card_type = 17;
  if (this->card_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(17, this->_internal_card_type(), target);
  }

  // bool cash_receipt_issued = 18;
  if (this->cash_receipt_issued() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(18, this->_internal_cash_receipt_issued(), target);
  }

  // string channel = 19;
  if (this->channel().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_channel().data(), static_cast<int>(this->_internal_channel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.channel");
    target = stream->WriteStringMaybeAliased(
        19, this->_internal_channel(), target);
  }

  // string currency = 20;
  if (this->currency().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_currency().data(), static_cast<int>(this->_internal_currency().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.currency");
    target = stream->WriteStringMaybeAliased(
        20, this->_internal_currency(), target);
  }

  // string custom_data = 21;
  if (this->custom_data().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_custom_data().data(), static_cast<int>(this->_internal_custom_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.custom_data");
    target = stream->WriteStringMaybeAliased(
        21, this->_internal_custom_data(), target);
  }

  // string card_uid = 22;
  if (this->card_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_uid().data(), static_cast<int>(this->_internal_card_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.card_uid");
    target = stream->WriteStringMaybeAliased(
        22, this->_internal_card_uid(), target);
  }

  // string customer_uid_usage = 23;
  if (this->customer_uid_usage().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_uid_usage().data(), static_cast<int>(this->_internal_customer_uid_usage().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.customer_uid_usage");
    target = stream->WriteStringMaybeAliased(
        23, this->_internal_customer_uid_usage(), target);
  }

  // string fail_reason = 24;
  if (this->fail_reason().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fail_reason().data(), static_cast<int>(this->_internal_fail_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.fail_reason");
    target = stream->WriteStringMaybeAliased(
        24, this->_internal_fail_reason(), target);
  }

  // int32 failed_at = 25;
  if (this->failed_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(25, this->_internal_failed_at(), target);
  }

  // string imp_uid = 26;
  if (this->imp_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_imp_uid().data(), static_cast<int>(this->_internal_imp_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.imp_uid");
    target = stream->WriteStringMaybeAliased(
        26, this->_internal_imp_uid(), target);
  }

  // string merchant_uid = 27;
  if (this->merchant_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_merchant_uid().data(), static_cast<int>(this->_internal_merchant_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.merchant_uid");
    target = stream->WriteStringMaybeAliased(
        27, this->_internal_merchant_uid(), target);
  }

  // string order_name = 28;
  if (this->order_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_name().data(), static_cast<int>(this->_internal_order_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.order_name");
    target = stream->WriteStringMaybeAliased(
        28, this->_internal_order_name(), target);
  }

  // int32 paid_at = 29;
  if (this->paid_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(29, this->_internal_paid_at(), target);
  }

  // string pay_method = 30;
  if (this->pay_method().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pay_method().data(), static_cast<int>(this->_internal_pay_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.pay_method");
    target = stream->WriteStringMaybeAliased(
        30, this->_internal_pay_method(), target);
  }

  // string pg_id = 31;
  if (this->pg_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pg_id().data(), static_cast<int>(this->_internal_pg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.pg_id");
    target = stream->WriteStringMaybeAliased(
        31, this->_internal_pg_id(), target);
  }

  // string pg_provider = 32;
  if (this->pg_provider().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pg_provider().data(), static_cast<int>(this->_internal_pg_provider().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.pg_provider");
    target = stream->WriteStringMaybeAliased(
        32, this->_internal_pg_provider(), target);
  }

  // string pg_tid = 33;
  if (this->pg_tid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pg_tid().data(), static_cast<int>(this->_internal_pg_tid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.pg_tid");
    target = stream->WriteStringMaybeAliased(
        33, this->_internal_pg_tid(), target);
  }

  // string receipt_url = 34;
  if (this->receipt_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_receipt_url().data(), static_cast<int>(this->_internal_receipt_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.receipt_url");
    target = stream->WriteStringMaybeAliased(
        34, this->_internal_receipt_url(), target);
  }

  // int32 started_at = 35;
  if (this->started_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(35, this->_internal_started_at(), target);
  }

  // string status = 36;
  if (this->status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.status");
    target = stream->WriteStringMaybeAliased(
        36, this->_internal_status(), target);
  }

  // string user_agent = 37;
  if (this->user_agent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_agent().data(), static_cast<int>(this->_internal_user_agent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardData.user_agent");
    target = stream->WriteStringMaybeAliased(
        37, this->_internal_user_agent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:card_v2.PayByRegisteredCardData)
  return target;
}

size_t PayByRegisteredCardData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:card_v2.PayByRegisteredCardData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .card_v2.CancelHistory cancel_history = 9;
  total_size += 1UL * this->_internal_cancel_history_size();
  for (const auto& msg : this->cancel_history_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string cancel_receipt_urls = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(cancel_receipt_urls_.size());
  for (int i = 0, n = cancel_receipt_urls_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      cancel_receipt_urls_.Get(i));
  }

  // string amount = 1;
  if (this->amount().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_amount());
  }

  // string apply_num = 2;
  if (this->apply_num().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_apply_num());
  }

  // string buyer_addr = 3;
  if (this->buyer_addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_addr());
  }

  // string buyer_email = 4;
  if (this->buyer_email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_email());
  }

  // string buyer_name = 5;
  if (this->buyer_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_name());
  }

  // string buyer_postcode = 6;
  if (this->buyer_postcode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_postcode());
  }

  // string buyer_tel = 7;
  if (this->buyer_tel().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buyer_tel());
  }

  // string cancel_amount = 8;
  if (this->cancel_amount().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cancel_amount());
  }

  // string cancel_reason = 10;
  if (this->cancel_reason().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cancel_reason());
  }

  // string card_code = 13;
  if (this->card_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_code());
  }

  // string card_name = 14;
  if (this->card_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_name());
  }

  // string bin_number = 15;
  if (this->bin_number().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bin_number());
  }

  // string channel = 19;
  if (this->channel().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_channel());
  }

  // string currency = 20;
  if (this->currency().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_currency());
  }

  // string custom_data = 21;
  if (this->custom_data().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_custom_data());
  }

  // string card_uid = 22;
  if (this->card_uid().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_uid());
  }

  // string customer_uid_usage = 23;
  if (this->customer_uid_usage().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_uid_usage());
  }

  // string fail_reason = 24;
  if (this->fail_reason().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fail_reason());
  }

  // string imp_uid = 26;
  if (this->imp_uid().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_imp_uid());
  }

  // string merchant_uid = 27;
  if (this->merchant_uid().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_merchant_uid());
  }

  // string order_name = 28;
  if (this->order_name().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_name());
  }

  // string pay_method = 30;
  if (this->pay_method().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pay_method());
  }

  // string pg_id = 31;
  if (this->pg_id().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pg_id());
  }

  // string pg_provider = 32;
  if (this->pg_provider().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pg_provider());
  }

  // string pg_tid = 33;
  if (this->pg_tid().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pg_tid());
  }

  // string receipt_url = 34;
  if (this->receipt_url().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_receipt_url());
  }

  // string status = 36;
  if (this->status().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string user_agent = 37;
  if (this->user_agent().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_agent());
  }

  // int32 cancelled_at = 12;
  if (this->cancelled_at() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cancelled_at());
  }

  // int32 card_installment = 16;
  if (this->card_installment() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_card_installment());
  }

  // int32 card_type = 17;
  if (this->card_type() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_card_type());
  }

  // bool cash_receipt_issued = 18;
  if (this->cash_receipt_issued() != 0) {
    total_size += 2 + 1;
  }

  // int32 failed_at = 25;
  if (this->failed_at() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_failed_at());
  }

  // int32 paid_at = 29;
  if (this->paid_at() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_paid_at());
  }

  // int32 started_at = 35;
  if (this->started_at() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_started_at());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PayByRegisteredCardData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:card_v2.PayByRegisteredCardData)
  GOOGLE_DCHECK_NE(&from, this);
  const PayByRegisteredCardData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PayByRegisteredCardData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:card_v2.PayByRegisteredCardData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:card_v2.PayByRegisteredCardData)
    MergeFrom(*source);
  }
}

void PayByRegisteredCardData::MergeFrom(const PayByRegisteredCardData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:card_v2.PayByRegisteredCardData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cancel_history_.MergeFrom(from.cancel_history_);
  cancel_receipt_urls_.MergeFrom(from.cancel_receipt_urls_);
  if (from.amount().size() > 0) {
    _internal_set_amount(from._internal_amount());
  }
  if (from.apply_num().size() > 0) {
    _internal_set_apply_num(from._internal_apply_num());
  }
  if (from.buyer_addr().size() > 0) {
    _internal_set_buyer_addr(from._internal_buyer_addr());
  }
  if (from.buyer_email().size() > 0) {
    _internal_set_buyer_email(from._internal_buyer_email());
  }
  if (from.buyer_name().size() > 0) {
    _internal_set_buyer_name(from._internal_buyer_name());
  }
  if (from.buyer_postcode().size() > 0) {
    _internal_set_buyer_postcode(from._internal_buyer_postcode());
  }
  if (from.buyer_tel().size() > 0) {
    _internal_set_buyer_tel(from._internal_buyer_tel());
  }
  if (from.cancel_amount().size() > 0) {
    _internal_set_cancel_amount(from._internal_cancel_amount());
  }
  if (from.cancel_reason().size() > 0) {
    _internal_set_cancel_reason(from._internal_cancel_reason());
  }
  if (from.card_code().size() > 0) {
    _internal_set_card_code(from._internal_card_code());
  }
  if (from.card_name().size() > 0) {
    _internal_set_card_name(from._internal_card_name());
  }
  if (from.bin_number().size() > 0) {
    _internal_set_bin_number(from._internal_bin_number());
  }
  if (from.channel().size() > 0) {
    _internal_set_channel(from._internal_channel());
  }
  if (from.currency().size() > 0) {
    _internal_set_currency(from._internal_currency());
  }
  if (from.custom_data().size() > 0) {
    _internal_set_custom_data(from._internal_custom_data());
  }
  if (from.card_uid().size() > 0) {
    _internal_set_card_uid(from._internal_card_uid());
  }
  if (from.customer_uid_usage().size() > 0) {
    _internal_set_customer_uid_usage(from._internal_customer_uid_usage());
  }
  if (from.fail_reason().size() > 0) {
    _internal_set_fail_reason(from._internal_fail_reason());
  }
  if (from.imp_uid().size() > 0) {
    _internal_set_imp_uid(from._internal_imp_uid());
  }
  if (from.merchant_uid().size() > 0) {
    _internal_set_merchant_uid(from._internal_merchant_uid());
  }
  if (from.order_name().size() > 0) {
    _internal_set_order_name(from._internal_order_name());
  }
  if (from.pay_method().size() > 0) {
    _internal_set_pay_method(from._internal_pay_method());
  }
  if (from.pg_id().size() > 0) {
    _internal_set_pg_id(from._internal_pg_id());
  }
  if (from.pg_provider().size() > 0) {
    _internal_set_pg_provider(from._internal_pg_provider());
  }
  if (from.pg_tid().size() > 0) {
    _internal_set_pg_tid(from._internal_pg_tid());
  }
  if (from.receipt_url().size() > 0) {
    _internal_set_receipt_url(from._internal_receipt_url());
  }
  if (from.status().size() > 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.user_agent().size() > 0) {
    _internal_set_user_agent(from._internal_user_agent());
  }
  if (from.cancelled_at() != 0) {
    _internal_set_cancelled_at(from._internal_cancelled_at());
  }
  if (from.card_installment() != 0) {
    _internal_set_card_installment(from._internal_card_installment());
  }
  if (from.card_type() != 0) {
    _internal_set_card_type(from._internal_card_type());
  }
  if (from.cash_receipt_issued() != 0) {
    _internal_set_cash_receipt_issued(from._internal_cash_receipt_issued());
  }
  if (from.failed_at() != 0) {
    _internal_set_failed_at(from._internal_failed_at());
  }
  if (from.paid_at() != 0) {
    _internal_set_paid_at(from._internal_paid_at());
  }
  if (from.started_at() != 0) {
    _internal_set_started_at(from._internal_started_at());
  }
}

void PayByRegisteredCardData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:card_v2.PayByRegisteredCardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PayByRegisteredCardData::CopyFrom(const PayByRegisteredCardData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:card_v2.PayByRegisteredCardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PayByRegisteredCardData::IsInitialized() const {
  return true;
}

void PayByRegisteredCardData::InternalSwap(PayByRegisteredCardData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cancel_history_.InternalSwap(&other->cancel_history_);
  cancel_receipt_urls_.InternalSwap(&other->cancel_receipt_urls_);
  amount_.Swap(&other->amount_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  apply_num_.Swap(&other->apply_num_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_addr_.Swap(&other->buyer_addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_email_.Swap(&other->buyer_email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_name_.Swap(&other->buyer_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_postcode_.Swap(&other->buyer_postcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  buyer_tel_.Swap(&other->buyer_tel_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cancel_amount_.Swap(&other->cancel_amount_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cancel_reason_.Swap(&other->cancel_reason_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  card_code_.Swap(&other->card_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  card_name_.Swap(&other->card_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  bin_number_.Swap(&other->bin_number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  channel_.Swap(&other->channel_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  currency_.Swap(&other->currency_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  custom_data_.Swap(&other->custom_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  card_uid_.Swap(&other->card_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  customer_uid_usage_.Swap(&other->customer_uid_usage_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  fail_reason_.Swap(&other->fail_reason_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  imp_uid_.Swap(&other->imp_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  merchant_uid_.Swap(&other->merchant_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  order_name_.Swap(&other->order_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pay_method_.Swap(&other->pay_method_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pg_id_.Swap(&other->pg_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pg_provider_.Swap(&other->pg_provider_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pg_tid_.Swap(&other->pg_tid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  receipt_url_.Swap(&other->receipt_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  status_.Swap(&other->status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_agent_.Swap(&other->user_agent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PayByRegisteredCardData, started_at_)
      + sizeof(PayByRegisteredCardData::started_at_)
      - PROTOBUF_FIELD_OFFSET(PayByRegisteredCardData, cancelled_at_)>(
          reinterpret_cast<char*>(&cancelled_at_),
          reinterpret_cast<char*>(&other->cancelled_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PayByRegisteredCardData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PayByRegisteredCardResponse::_Internal {
 public:
  static const ::card_v2::PayByRegisteredCardData& response(const PayByRegisteredCardResponse* msg);
};

const ::card_v2::PayByRegisteredCardData&
PayByRegisteredCardResponse::_Internal::response(const PayByRegisteredCardResponse* msg) {
  return *msg->response_;
}
PayByRegisteredCardResponse::PayByRegisteredCardResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:card_v2.PayByRegisteredCardResponse)
}
PayByRegisteredCardResponse::PayByRegisteredCardResponse(const PayByRegisteredCardResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  if (from._internal_has_response()) {
    response_ = new ::card_v2::PayByRegisteredCardData(*from.response_);
  } else {
    response_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:card_v2.PayByRegisteredCardResponse)
}

void PayByRegisteredCardResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&response_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&response_)) + sizeof(code_));
}

PayByRegisteredCardResponse::~PayByRegisteredCardResponse() {
  // @@protoc_insertion_point(destructor:card_v2.PayByRegisteredCardResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PayByRegisteredCardResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete response_;
}

void PayByRegisteredCardResponse::ArenaDtor(void* object) {
  PayByRegisteredCardResponse* _this = reinterpret_cast< PayByRegisteredCardResponse* >(object);
  (void)_this;
}
void PayByRegisteredCardResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PayByRegisteredCardResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PayByRegisteredCardResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:card_v2.PayByRegisteredCardResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  if (GetArena() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PayByRegisteredCardResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.PayByRegisteredCardResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .card_v2.PayByRegisteredCardData response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PayByRegisteredCardResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:card_v2.PayByRegisteredCardResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.PayByRegisteredCardResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .card_v2.PayByRegisteredCardData response = 3;
  if (this->has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:card_v2.PayByRegisteredCardResponse)
  return target;
}

size_t PayByRegisteredCardResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:card_v2.PayByRegisteredCardResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .card_v2.PayByRegisteredCardData response = 3;
  if (this->has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PayByRegisteredCardResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:card_v2.PayByRegisteredCardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PayByRegisteredCardResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PayByRegisteredCardResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:card_v2.PayByRegisteredCardResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:card_v2.PayByRegisteredCardResponse)
    MergeFrom(*source);
  }
}

void PayByRegisteredCardResponse::MergeFrom(const PayByRegisteredCardResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:card_v2.PayByRegisteredCardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.has_response()) {
    _internal_mutable_response()->::card_v2::PayByRegisteredCardData::MergeFrom(from._internal_response());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PayByRegisteredCardResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:card_v2.PayByRegisteredCardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PayByRegisteredCardResponse::CopyFrom(const PayByRegisteredCardResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:card_v2.PayByRegisteredCardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PayByRegisteredCardResponse::IsInitialized() const {
  return true;
}

void PayByRegisteredCardResponse::InternalSwap(PayByRegisteredCardResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PayByRegisteredCardResponse, code_)
      + sizeof(PayByRegisteredCardResponse::code_)
      - PROTOBUF_FIELD_OFFSET(PayByRegisteredCardResponse, response_)>(
          reinterpret_cast<char*>(&response_),
          reinterpret_cast<char*>(&other->response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PayByRegisteredCardResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CancelHistory::_Internal {
 public:
};

CancelHistory::CancelHistory(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:card_v2.CancelHistory)
}
CancelHistory::CancelHistory(const CancelHistory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pg_tid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pg_tid().empty()) {
    pg_tid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pg_tid(), 
      GetArena());
  }
  amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_amount().empty()) {
    amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_amount(), 
      GetArena());
  }
  reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reason().empty()) {
    reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reason(), 
      GetArena());
  }
  receipt_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_receipt_url().empty()) {
    receipt_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_receipt_url(), 
      GetArena());
  }
  cancelled_at_ = from.cancelled_at_;
  // @@protoc_insertion_point(copy_constructor:card_v2.CancelHistory)
}

void CancelHistory::SharedCtor() {
pg_tid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
receipt_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
cancelled_at_ = 0;
}

CancelHistory::~CancelHistory() {
  // @@protoc_insertion_point(destructor:card_v2.CancelHistory)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CancelHistory::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  pg_tid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  receipt_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CancelHistory::ArenaDtor(void* object) {
  CancelHistory* _this = reinterpret_cast< CancelHistory* >(object);
  (void)_this;
}
void CancelHistory::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CancelHistory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CancelHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:card_v2.CancelHistory)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pg_tid_.ClearToEmpty();
  amount_.ClearToEmpty();
  reason_.ClearToEmpty();
  receipt_url_.ClearToEmpty();
  cancelled_at_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelHistory::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string pg_tid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pg_tid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CancelHistory.pg_tid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CancelHistory.amount"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cancelled_at = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          cancelled_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string reason = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CancelHistory.reason"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string receipt_url = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_receipt_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CancelHistory.receipt_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelHistory::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:card_v2.CancelHistory)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pg_tid = 1;
  if (this->pg_tid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pg_tid().data(), static_cast<int>(this->_internal_pg_tid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CancelHistory.pg_tid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pg_tid(), target);
  }

  // string amount = 2;
  if (this->amount().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_amount().data(), static_cast<int>(this->_internal_amount().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CancelHistory.amount");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_amount(), target);
  }

  // int32 cancelled_at = 3;
  if (this->cancelled_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_cancelled_at(), target);
  }

  // string reason = 4;
  if (this->reason().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CancelHistory.reason");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_reason(), target);
  }

  // string receipt_url = 5;
  if (this->receipt_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_receipt_url().data(), static_cast<int>(this->_internal_receipt_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CancelHistory.receipt_url");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_receipt_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:card_v2.CancelHistory)
  return target;
}

size_t CancelHistory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:card_v2.CancelHistory)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pg_tid = 1;
  if (this->pg_tid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pg_tid());
  }

  // string amount = 2;
  if (this->amount().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_amount());
  }

  // string reason = 4;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reason());
  }

  // string receipt_url = 5;
  if (this->receipt_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_receipt_url());
  }

  // int32 cancelled_at = 3;
  if (this->cancelled_at() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cancelled_at());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelHistory::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:card_v2.CancelHistory)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelHistory* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CancelHistory>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:card_v2.CancelHistory)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:card_v2.CancelHistory)
    MergeFrom(*source);
  }
}

void CancelHistory::MergeFrom(const CancelHistory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:card_v2.CancelHistory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pg_tid().size() > 0) {
    _internal_set_pg_tid(from._internal_pg_tid());
  }
  if (from.amount().size() > 0) {
    _internal_set_amount(from._internal_amount());
  }
  if (from.reason().size() > 0) {
    _internal_set_reason(from._internal_reason());
  }
  if (from.receipt_url().size() > 0) {
    _internal_set_receipt_url(from._internal_receipt_url());
  }
  if (from.cancelled_at() != 0) {
    _internal_set_cancelled_at(from._internal_cancelled_at());
  }
}

void CancelHistory::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:card_v2.CancelHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelHistory::CopyFrom(const CancelHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:card_v2.CancelHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelHistory::IsInitialized() const {
  return true;
}

void CancelHistory::InternalSwap(CancelHistory* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pg_tid_.Swap(&other->pg_tid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  amount_.Swap(&other->amount_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  reason_.Swap(&other->reason_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  receipt_url_.Swap(&other->receipt_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(cancelled_at_, other->cancelled_at_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelHistory::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CancelCardPaymentRequest::_Internal {
 public:
};

CancelCardPaymentRequest::CancelCardPaymentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:card_v2.CancelCardPaymentRequest)
}
CancelCardPaymentRequest::CancelCardPaymentRequest(const CancelCardPaymentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  imp_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imp_uid().empty()) {
    imp_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imp_uid(), 
      GetArena());
  }
  amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_amount().empty()) {
    amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_amount(), 
      GetArena());
  }
  merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_merchant_uid().empty()) {
    merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_merchant_uid(), 
      GetArena());
  }
  tax_free_amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tax_free_amount().empty()) {
    tax_free_amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tax_free_amount(), 
      GetArena());
  }
  reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reason().empty()) {
    reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reason(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:card_v2.CancelCardPaymentRequest)
}

void CancelCardPaymentRequest::SharedCtor() {
imp_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
tax_free_amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CancelCardPaymentRequest::~CancelCardPaymentRequest() {
  // @@protoc_insertion_point(destructor:card_v2.CancelCardPaymentRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CancelCardPaymentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  imp_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  merchant_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tax_free_amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CancelCardPaymentRequest::ArenaDtor(void* object) {
  CancelCardPaymentRequest* _this = reinterpret_cast< CancelCardPaymentRequest* >(object);
  (void)_this;
}
void CancelCardPaymentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CancelCardPaymentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CancelCardPaymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:card_v2.CancelCardPaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imp_uid_.ClearToEmpty();
  amount_.ClearToEmpty();
  merchant_uid_.ClearToEmpty();
  tax_free_amount_.ClearToEmpty();
  reason_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelCardPaymentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string imp_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_imp_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CancelCardPaymentRequest.imp_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CancelCardPaymentRequest.amount"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string merchant_uid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_merchant_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CancelCardPaymentRequest.merchant_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string tax_free_amount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_tax_free_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CancelCardPaymentRequest.tax_free_amount"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string reason = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CancelCardPaymentRequest.reason"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelCardPaymentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:card_v2.CancelCardPaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string imp_uid = 1;
  if (this->imp_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_imp_uid().data(), static_cast<int>(this->_internal_imp_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CancelCardPaymentRequest.imp_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_imp_uid(), target);
  }

  // string amount = 2;
  if (this->amount().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_amount().data(), static_cast<int>(this->_internal_amount().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CancelCardPaymentRequest.amount");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_amount(), target);
  }

  // string merchant_uid = 3;
  if (this->merchant_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_merchant_uid().data(), static_cast<int>(this->_internal_merchant_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CancelCardPaymentRequest.merchant_uid");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_merchant_uid(), target);
  }

  // string tax_free_amount = 4;
  if (this->tax_free_amount().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tax_free_amount().data(), static_cast<int>(this->_internal_tax_free_amount().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CancelCardPaymentRequest.tax_free_amount");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_tax_free_amount(), target);
  }

  // string reason = 5;
  if (this->reason().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CancelCardPaymentRequest.reason");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:card_v2.CancelCardPaymentRequest)
  return target;
}

size_t CancelCardPaymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:card_v2.CancelCardPaymentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string imp_uid = 1;
  if (this->imp_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_imp_uid());
  }

  // string amount = 2;
  if (this->amount().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_amount());
  }

  // string merchant_uid = 3;
  if (this->merchant_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_merchant_uid());
  }

  // string tax_free_amount = 4;
  if (this->tax_free_amount().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tax_free_amount());
  }

  // string reason = 5;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reason());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelCardPaymentRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:card_v2.CancelCardPaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelCardPaymentRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CancelCardPaymentRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:card_v2.CancelCardPaymentRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:card_v2.CancelCardPaymentRequest)
    MergeFrom(*source);
  }
}

void CancelCardPaymentRequest::MergeFrom(const CancelCardPaymentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:card_v2.CancelCardPaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imp_uid().size() > 0) {
    _internal_set_imp_uid(from._internal_imp_uid());
  }
  if (from.amount().size() > 0) {
    _internal_set_amount(from._internal_amount());
  }
  if (from.merchant_uid().size() > 0) {
    _internal_set_merchant_uid(from._internal_merchant_uid());
  }
  if (from.tax_free_amount().size() > 0) {
    _internal_set_tax_free_amount(from._internal_tax_free_amount());
  }
  if (from.reason().size() > 0) {
    _internal_set_reason(from._internal_reason());
  }
}

void CancelCardPaymentRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:card_v2.CancelCardPaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelCardPaymentRequest::CopyFrom(const CancelCardPaymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:card_v2.CancelCardPaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelCardPaymentRequest::IsInitialized() const {
  return true;
}

void CancelCardPaymentRequest::InternalSwap(CancelCardPaymentRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  imp_uid_.Swap(&other->imp_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  amount_.Swap(&other->amount_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  merchant_uid_.Swap(&other->merchant_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tax_free_amount_.Swap(&other->tax_free_amount_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  reason_.Swap(&other->reason_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelCardPaymentRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CancelCardPaymenttResponse::_Internal {
 public:
  static const ::card_v2::PayByRegisteredCardData& response(const CancelCardPaymenttResponse* msg);
};

const ::card_v2::PayByRegisteredCardData&
CancelCardPaymenttResponse::_Internal::response(const CancelCardPaymenttResponse* msg) {
  return *msg->response_;
}
CancelCardPaymenttResponse::CancelCardPaymenttResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:card_v2.CancelCardPaymenttResponse)
}
CancelCardPaymenttResponse::CancelCardPaymenttResponse(const CancelCardPaymenttResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  if (from._internal_has_response()) {
    response_ = new ::card_v2::PayByRegisteredCardData(*from.response_);
  } else {
    response_ = nullptr;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:card_v2.CancelCardPaymenttResponse)
}

void CancelCardPaymenttResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&response_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&response_)) + sizeof(code_));
}

CancelCardPaymenttResponse::~CancelCardPaymenttResponse() {
  // @@protoc_insertion_point(destructor:card_v2.CancelCardPaymenttResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CancelCardPaymenttResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete response_;
}

void CancelCardPaymenttResponse::ArenaDtor(void* object) {
  CancelCardPaymenttResponse* _this = reinterpret_cast< CancelCardPaymenttResponse* >(object);
  (void)_this;
}
void CancelCardPaymenttResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CancelCardPaymenttResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CancelCardPaymenttResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:card_v2.CancelCardPaymenttResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  if (GetArena() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelCardPaymenttResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "card_v2.CancelCardPaymenttResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .card_v2.PayByRegisteredCardData response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelCardPaymenttResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:card_v2.CancelCardPaymenttResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "card_v2.CancelCardPaymenttResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .card_v2.PayByRegisteredCardData response = 3;
  if (this->has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:card_v2.CancelCardPaymenttResponse)
  return target;
}

size_t CancelCardPaymenttResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:card_v2.CancelCardPaymenttResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .card_v2.PayByRegisteredCardData response = 3;
  if (this->has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelCardPaymenttResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:card_v2.CancelCardPaymenttResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelCardPaymenttResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CancelCardPaymenttResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:card_v2.CancelCardPaymenttResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:card_v2.CancelCardPaymenttResponse)
    MergeFrom(*source);
  }
}

void CancelCardPaymenttResponse::MergeFrom(const CancelCardPaymenttResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:card_v2.CancelCardPaymenttResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.has_response()) {
    _internal_mutable_response()->::card_v2::PayByRegisteredCardData::MergeFrom(from._internal_response());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void CancelCardPaymenttResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:card_v2.CancelCardPaymenttResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelCardPaymenttResponse::CopyFrom(const CancelCardPaymenttResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:card_v2.CancelCardPaymenttResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelCardPaymenttResponse::IsInitialized() const {
  return true;
}

void CancelCardPaymenttResponse::InternalSwap(CancelCardPaymenttResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CancelCardPaymenttResponse, code_)
      + sizeof(CancelCardPaymenttResponse::code_)
      - PROTOBUF_FIELD_OFFSET(CancelCardPaymenttResponse, response_)>(
          reinterpret_cast<char*>(&response_),
          reinterpret_cast<char*>(&other->response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelCardPaymenttResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace card_v2
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::card_v2::CardRegisterRequest* Arena::CreateMaybeMessage< ::card_v2::CardRegisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::card_v2::CardRegisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::card_v2::CardRegisterResultData* Arena::CreateMaybeMessage< ::card_v2::CardRegisterResultData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::card_v2::CardRegisterResultData >(arena);
}
template<> PROTOBUF_NOINLINE ::card_v2::CardRegisterResponse* Arena::CreateMaybeMessage< ::card_v2::CardRegisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::card_v2::CardRegisterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::card_v2::GetCardInfoRequest* Arena::CreateMaybeMessage< ::card_v2::GetCardInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::card_v2::GetCardInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::card_v2::GetCardInfoData* Arena::CreateMaybeMessage< ::card_v2::GetCardInfoData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::card_v2::GetCardInfoData >(arena);
}
template<> PROTOBUF_NOINLINE ::card_v2::GetCardInfoResponse* Arena::CreateMaybeMessage< ::card_v2::GetCardInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::card_v2::GetCardInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::card_v2::DeleteCardInfoRequest* Arena::CreateMaybeMessage< ::card_v2::DeleteCardInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::card_v2::DeleteCardInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::card_v2::DeleteCardInfoResponse* Arena::CreateMaybeMessage< ::card_v2::DeleteCardInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::card_v2::DeleteCardInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::card_v2::PayByRegisteredCardRequest* Arena::CreateMaybeMessage< ::card_v2::PayByRegisteredCardRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::card_v2::PayByRegisteredCardRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::card_v2::PayByRegisteredCardData* Arena::CreateMaybeMessage< ::card_v2::PayByRegisteredCardData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::card_v2::PayByRegisteredCardData >(arena);
}
template<> PROTOBUF_NOINLINE ::card_v2::PayByRegisteredCardResponse* Arena::CreateMaybeMessage< ::card_v2::PayByRegisteredCardResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::card_v2::PayByRegisteredCardResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::card_v2::CancelHistory* Arena::CreateMaybeMessage< ::card_v2::CancelHistory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::card_v2::CancelHistory >(arena);
}
template<> PROTOBUF_NOINLINE ::card_v2::CancelCardPaymentRequest* Arena::CreateMaybeMessage< ::card_v2::CancelCardPaymentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::card_v2::CancelCardPaymentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::card_v2::CancelCardPaymenttResponse* Arena::CreateMaybeMessage< ::card_v2::CancelCardPaymenttResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::card_v2::CancelCardPaymenttResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
