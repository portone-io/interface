// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v2/txs/txs.proto

#include "v2/txs/txs.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace txs_v2 {
constexpr GetTxsRecordsRequest::GetTxsRecordsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : imp_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , merchant_uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , paid_by_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sorting_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_(0){}
struct GetTxsRecordsRequestDefaultTypeInternal {
  constexpr GetTxsRecordsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetTxsRecordsRequestDefaultTypeInternal() {}
  union {
    GetTxsRecordsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetTxsRecordsRequestDefaultTypeInternal _GetTxsRecordsRequest_default_instance_;
constexpr GetTxsRecordsReponse::GetTxsRecordsReponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : response_()
  , message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , code_(0){}
struct GetTxsRecordsReponseDefaultTypeInternal {
  constexpr GetTxsRecordsReponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetTxsRecordsReponseDefaultTypeInternal() {}
  union {
    GetTxsRecordsReponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetTxsRecordsReponseDefaultTypeInternal _GetTxsRecordsReponse_default_instance_;
}  // namespace txs_v2
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_v2_2ftxs_2ftxs_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_v2_2ftxs_2ftxs_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_v2_2ftxs_2ftxs_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_v2_2ftxs_2ftxs_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::txs_v2::GetTxsRecordsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::txs_v2::GetTxsRecordsRequest, imp_uid_),
  PROTOBUF_FIELD_OFFSET(::txs_v2::GetTxsRecordsRequest, merchant_uid_),
  PROTOBUF_FIELD_OFFSET(::txs_v2::GetTxsRecordsRequest, paid_by_),
  PROTOBUF_FIELD_OFFSET(::txs_v2::GetTxsRecordsRequest, status_),
  PROTOBUF_FIELD_OFFSET(::txs_v2::GetTxsRecordsRequest, page_),
  PROTOBUF_FIELD_OFFSET(::txs_v2::GetTxsRecordsRequest, sorting_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::txs_v2::GetTxsRecordsReponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::txs_v2::GetTxsRecordsReponse, code_),
  PROTOBUF_FIELD_OFFSET(::txs_v2::GetTxsRecordsReponse, message_),
  PROTOBUF_FIELD_OFFSET(::txs_v2::GetTxsRecordsReponse, response_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::txs_v2::GetTxsRecordsRequest)},
  { 11, -1, sizeof(::txs_v2::GetTxsRecordsReponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::txs_v2::_GetTxsRecordsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::txs_v2::_GetTxsRecordsReponse_default_instance_),
};

const char descriptor_table_protodef_v2_2ftxs_2ftxs_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020v2/txs/txs.proto\022\006txs_v2\032\034google/api/a"
  "nnotations.proto\032\024v2/basis/basis.proto\"}"
  "\n\024GetTxsRecordsRequest\022\017\n\007imp_uid\030\001 \001(\t\022"
  "\024\n\014merchant_uid\030\002 \001(\t\022\017\n\007paid_by\030\003 \001(\t\022\016"
  "\n\006status\030\004 \001(\t\022\014\n\004page\030\005 \001(\005\022\017\n\007sorting\030"
  "\006 \001(\t\"Y\n\024GetTxsRecordsReponse\022\014\n\004code\030\001 "
  "\001(\005\022\017\n\007message\030\002 \001(\t\022\"\n\010response\030\003 \003(\0132\020"
  ".basis_v2.UnitTx2}\n\nTxsService\022o\n\023GetTxs"
  "RecordService\022\034.txs_v2.GetTxsRecordsRequ"
  "est\032\034.txs_v2.GetTxsRecordsReponse\"\034\202\323\344\223\002"
  "\026\022\024/api/payments/v2/txsB9Z.github.com/ia"
  "mport/interface/gen_src/go/v2/txs\252\002\006V2.T"
  "xsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_v2_2ftxs_2ftxs_2eproto_deps[2] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_v2_2fbasis_2fbasis_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_v2_2ftxs_2ftxs_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_v2_2ftxs_2ftxs_2eproto = {
  false, false, 490, descriptor_table_protodef_v2_2ftxs_2ftxs_2eproto, "v2/txs/txs.proto", 
  &descriptor_table_v2_2ftxs_2ftxs_2eproto_once, descriptor_table_v2_2ftxs_2ftxs_2eproto_deps, 2, 2,
  schemas, file_default_instances, TableStruct_v2_2ftxs_2ftxs_2eproto::offsets,
  file_level_metadata_v2_2ftxs_2ftxs_2eproto, file_level_enum_descriptors_v2_2ftxs_2ftxs_2eproto, file_level_service_descriptors_v2_2ftxs_2ftxs_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_v2_2ftxs_2ftxs_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_v2_2ftxs_2ftxs_2eproto);
  return descriptor_table_v2_2ftxs_2ftxs_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_v2_2ftxs_2ftxs_2eproto(&descriptor_table_v2_2ftxs_2ftxs_2eproto);
namespace txs_v2 {

// ===================================================================

class GetTxsRecordsRequest::_Internal {
 public:
};

GetTxsRecordsRequest::GetTxsRecordsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:txs_v2.GetTxsRecordsRequest)
}
GetTxsRecordsRequest::GetTxsRecordsRequest(const GetTxsRecordsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  imp_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imp_uid().empty()) {
    imp_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imp_uid(), 
      GetArena());
  }
  merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_merchant_uid().empty()) {
    merchant_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_merchant_uid(), 
      GetArena());
  }
  paid_by_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_paid_by().empty()) {
    paid_by_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_paid_by(), 
      GetArena());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArena());
  }
  sorting_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sorting().empty()) {
    sorting_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sorting(), 
      GetArena());
  }
  page_ = from.page_;
  // @@protoc_insertion_point(copy_constructor:txs_v2.GetTxsRecordsRequest)
}

void GetTxsRecordsRequest::SharedCtor() {
imp_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
merchant_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
paid_by_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
sorting_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
page_ = 0;
}

GetTxsRecordsRequest::~GetTxsRecordsRequest() {
  // @@protoc_insertion_point(destructor:txs_v2.GetTxsRecordsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTxsRecordsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  imp_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  merchant_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  paid_by_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sorting_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetTxsRecordsRequest::ArenaDtor(void* object) {
  GetTxsRecordsRequest* _this = reinterpret_cast< GetTxsRecordsRequest* >(object);
  (void)_this;
}
void GetTxsRecordsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTxsRecordsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetTxsRecordsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:txs_v2.GetTxsRecordsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imp_uid_.ClearToEmpty();
  merchant_uid_.ClearToEmpty();
  paid_by_.ClearToEmpty();
  status_.ClearToEmpty();
  sorting_.ClearToEmpty();
  page_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTxsRecordsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string imp_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_imp_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "txs_v2.GetTxsRecordsRequest.imp_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string merchant_uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_merchant_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "txs_v2.GetTxsRecordsRequest.merchant_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string paid_by = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_paid_by();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "txs_v2.GetTxsRecordsRequest.paid_by"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "txs_v2.GetTxsRecordsRequest.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          page_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sorting = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_sorting();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "txs_v2.GetTxsRecordsRequest.sorting"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTxsRecordsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:txs_v2.GetTxsRecordsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string imp_uid = 1;
  if (this->imp_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_imp_uid().data(), static_cast<int>(this->_internal_imp_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "txs_v2.GetTxsRecordsRequest.imp_uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_imp_uid(), target);
  }

  // string merchant_uid = 2;
  if (this->merchant_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_merchant_uid().data(), static_cast<int>(this->_internal_merchant_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "txs_v2.GetTxsRecordsRequest.merchant_uid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_merchant_uid(), target);
  }

  // string paid_by = 3;
  if (this->paid_by().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_paid_by().data(), static_cast<int>(this->_internal_paid_by().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "txs_v2.GetTxsRecordsRequest.paid_by");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_paid_by(), target);
  }

  // string status = 4;
  if (this->status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "txs_v2.GetTxsRecordsRequest.status");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_status(), target);
  }

  // int32 page = 5;
  if (this->page() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_page(), target);
  }

  // string sorting = 6;
  if (this->sorting().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sorting().data(), static_cast<int>(this->_internal_sorting().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "txs_v2.GetTxsRecordsRequest.sorting");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_sorting(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txs_v2.GetTxsRecordsRequest)
  return target;
}

size_t GetTxsRecordsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txs_v2.GetTxsRecordsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string imp_uid = 1;
  if (this->imp_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_imp_uid());
  }

  // string merchant_uid = 2;
  if (this->merchant_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_merchant_uid());
  }

  // string paid_by = 3;
  if (this->paid_by().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_paid_by());
  }

  // string status = 4;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string sorting = 6;
  if (this->sorting().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sorting());
  }

  // int32 page = 5;
  if (this->page() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTxsRecordsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txs_v2.GetTxsRecordsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTxsRecordsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTxsRecordsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txs_v2.GetTxsRecordsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txs_v2.GetTxsRecordsRequest)
    MergeFrom(*source);
  }
}

void GetTxsRecordsRequest::MergeFrom(const GetTxsRecordsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txs_v2.GetTxsRecordsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imp_uid().size() > 0) {
    _internal_set_imp_uid(from._internal_imp_uid());
  }
  if (from.merchant_uid().size() > 0) {
    _internal_set_merchant_uid(from._internal_merchant_uid());
  }
  if (from.paid_by().size() > 0) {
    _internal_set_paid_by(from._internal_paid_by());
  }
  if (from.status().size() > 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.sorting().size() > 0) {
    _internal_set_sorting(from._internal_sorting());
  }
  if (from.page() != 0) {
    _internal_set_page(from._internal_page());
  }
}

void GetTxsRecordsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txs_v2.GetTxsRecordsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTxsRecordsRequest::CopyFrom(const GetTxsRecordsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txs_v2.GetTxsRecordsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTxsRecordsRequest::IsInitialized() const {
  return true;
}

void GetTxsRecordsRequest::InternalSwap(GetTxsRecordsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  imp_uid_.Swap(&other->imp_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  merchant_uid_.Swap(&other->merchant_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  paid_by_.Swap(&other->paid_by_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  status_.Swap(&other->status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sorting_.Swap(&other->sorting_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(page_, other->page_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTxsRecordsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetTxsRecordsReponse::_Internal {
 public:
};

void GetTxsRecordsReponse::clear_response() {
  response_.Clear();
}
GetTxsRecordsReponse::GetTxsRecordsReponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  response_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:txs_v2.GetTxsRecordsReponse)
}
GetTxsRecordsReponse::GetTxsRecordsReponse(const GetTxsRecordsReponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      response_(from.response_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:txs_v2.GetTxsRecordsReponse)
}

void GetTxsRecordsReponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
code_ = 0;
}

GetTxsRecordsReponse::~GetTxsRecordsReponse() {
  // @@protoc_insertion_point(destructor:txs_v2.GetTxsRecordsReponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTxsRecordsReponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetTxsRecordsReponse::ArenaDtor(void* object) {
  GetTxsRecordsReponse* _this = reinterpret_cast< GetTxsRecordsReponse* >(object);
  (void)_this;
}
void GetTxsRecordsReponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTxsRecordsReponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetTxsRecordsReponse::Clear() {
// @@protoc_insertion_point(message_clear_start:txs_v2.GetTxsRecordsReponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  response_.Clear();
  message_.ClearToEmpty();
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTxsRecordsReponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "txs_v2.GetTxsRecordsReponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .basis_v2.UnitTx response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_response(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTxsRecordsReponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:txs_v2.GetTxsRecordsReponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "txs_v2.GetTxsRecordsReponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // repeated .basis_v2.UnitTx response = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_response_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_response(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txs_v2.GetTxsRecordsReponse)
  return target;
}

size_t GetTxsRecordsReponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txs_v2.GetTxsRecordsReponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .basis_v2.UnitTx response = 3;
  total_size += 1UL * this->_internal_response_size();
  for (const auto& msg : this->response_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTxsRecordsReponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txs_v2.GetTxsRecordsReponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTxsRecordsReponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTxsRecordsReponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txs_v2.GetTxsRecordsReponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txs_v2.GetTxsRecordsReponse)
    MergeFrom(*source);
  }
}

void GetTxsRecordsReponse::MergeFrom(const GetTxsRecordsReponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txs_v2.GetTxsRecordsReponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  response_.MergeFrom(from.response_);
  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GetTxsRecordsReponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txs_v2.GetTxsRecordsReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTxsRecordsReponse::CopyFrom(const GetTxsRecordsReponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txs_v2.GetTxsRecordsReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTxsRecordsReponse::IsInitialized() const {
  return true;
}

void GetTxsRecordsReponse::InternalSwap(GetTxsRecordsReponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  response_.InternalSwap(&other->response_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTxsRecordsReponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace txs_v2
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::txs_v2::GetTxsRecordsRequest* Arena::CreateMaybeMessage< ::txs_v2::GetTxsRecordsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::txs_v2::GetTxsRecordsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::txs_v2::GetTxsRecordsReponse* Arena::CreateMaybeMessage< ::txs_v2::GetTxsRecordsReponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::txs_v2::GetTxsRecordsReponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
