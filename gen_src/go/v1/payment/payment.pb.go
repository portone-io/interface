// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: v1/payment/payment.proto

package payment

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount            int32            `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	ApplyNum          string           `protobuf:"bytes,2,opt,name=apply_num,json=applyNum,proto3" json:"apply_num,omitempty"`
	BankCode          int32            `protobuf:"varint,3,opt,name=bank_code,json=bankCode,proto3" json:"bank_code,omitempty"`
	BankName          string           `protobuf:"bytes,4,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`
	BuyerAddr         string           `protobuf:"bytes,5,opt,name=buyer_addr,json=buyerAddr,proto3" json:"buyer_addr,omitempty"`
	BuyerEmail        string           `protobuf:"bytes,6,opt,name=buyer_email,json=buyerEmail,proto3" json:"buyer_email,omitempty"`
	BuyerName         string           `protobuf:"bytes,7,opt,name=buyer_name,json=buyerName,proto3" json:"buyer_name,omitempty"`
	BuyerPostcode     string           `protobuf:"bytes,8,opt,name=buyer_postcode,json=buyerPostcode,proto3" json:"buyer_postcode,omitempty"`
	BuyerTel          string           `protobuf:"bytes,9,opt,name=buyer_tel,json=buyerTel,proto3" json:"buyer_tel,omitempty"`
	CancelAmount      int32            `protobuf:"varint,10,opt,name=cancel_amount,json=cancelAmount,proto3" json:"cancel_amount,omitempty"`
	CancelHistory     []*CancelHistory `protobuf:"bytes,11,rep,name=cancel_history,json=cancelHistory,proto3" json:"cancel_history,omitempty"`
	CancelReason      string           `protobuf:"bytes,12,opt,name=cancel_reason,json=cancelReason,proto3" json:"cancel_reason,omitempty"`
	CancelReceiptUrls []string         `protobuf:"bytes,13,rep,name=cancel_receipt_urls,json=cancelReceiptUrls,proto3" json:"cancel_receipt_urls,omitempty"`
	CancelledAt       int32            `protobuf:"varint,14,opt,name=cancelled_at,json=cancelledAt,proto3" json:"cancelled_at,omitempty"`
	CardCode          string           `protobuf:"bytes,15,opt,name=card_code,json=cardCode,proto3" json:"card_code,omitempty"`
	CardName          string           `protobuf:"bytes,16,opt,name=card_name,json=cardName,proto3" json:"card_name,omitempty"`
	CardNumber        string           `protobuf:"bytes,17,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	CardQuota         int32            `protobuf:"varint,18,opt,name=card_quota,json=cardQuota,proto3" json:"card_quota,omitempty"`
	CardType          int32            `protobuf:"varint,19,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	CashReceiptIssued bool             `protobuf:"varint,20,opt,name=cash_receipt_issued,json=cashReceiptIssued,proto3" json:"cash_receipt_issued,omitempty"`
	Channel           string           `protobuf:"bytes,21,opt,name=channel,proto3" json:"channel,omitempty"`
	Currency          string           `protobuf:"bytes,22,opt,name=currency,proto3" json:"currency,omitempty"`
	CustomData        string           `protobuf:"bytes,23,opt,name=custom_data,json=customData,proto3" json:"custom_data,omitempty"`
	CustomerUid       string           `protobuf:"bytes,24,opt,name=customer_uid,json=customerUid,proto3" json:"customer_uid,omitempty"`
	CustomerUidUsage  string           `protobuf:"bytes,25,opt,name=customer_uid_usage,json=customerUidUsage,proto3" json:"customer_uid_usage,omitempty"`
	Escrow            bool             `protobuf:"varint,26,opt,name=escrow,proto3" json:"escrow,omitempty"`
	FailReason        string           `protobuf:"bytes,27,opt,name=fail_reason,json=failReason,proto3" json:"fail_reason,omitempty"`
	FailedAt          int32            `protobuf:"varint,28,opt,name=failed_at,json=failedAt,proto3" json:"failed_at,omitempty"`
	ImpUid            string           `protobuf:"bytes,29,opt,name=imp_uid,json=impUid,proto3" json:"imp_uid,omitempty"`
	MerchantUid       string           `protobuf:"bytes,30,opt,name=merchant_uid,json=merchantUid,proto3" json:"merchant_uid,omitempty"`
	Name              string           `protobuf:"bytes,31,opt,name=name,proto3" json:"name,omitempty"`
	PaidAt            int32            `protobuf:"varint,32,opt,name=paid_at,json=paidAt,proto3" json:"paid_at,omitempty"`
	PayMethod         string           `protobuf:"bytes,33,opt,name=pay_method,json=payMethod,proto3" json:"pay_method,omitempty"`
	PgId              string           `protobuf:"bytes,34,opt,name=pg_id,json=pgId,proto3" json:"pg_id,omitempty"`
	PgProvider        string           `protobuf:"bytes,35,opt,name=pg_provider,json=pgProvider,proto3" json:"pg_provider,omitempty"`
	PgTid             string           `protobuf:"bytes,36,opt,name=pg_tid,json=pgTid,proto3" json:"pg_tid,omitempty"`
	ReceiptUrl        string           `protobuf:"bytes,37,opt,name=receipt_url,json=receiptUrl,proto3" json:"receipt_url,omitempty"`
	StartedAt         int32            `protobuf:"varint,38,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	Status            string           `protobuf:"bytes,39,opt,name=status,proto3" json:"status,omitempty"`
	UserAgent         string           `protobuf:"bytes,40,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	VbankCode         string           `protobuf:"bytes,41,opt,name=vbank_code,json=vbankCode,proto3" json:"vbank_code,omitempty"`
	VbankDate         int32            `protobuf:"varint,42,opt,name=vbank_date,json=vbankDate,proto3" json:"vbank_date,omitempty"`
	VbankHolder       string           `protobuf:"bytes,43,opt,name=vbank_holder,json=vbankHolder,proto3" json:"vbank_holder,omitempty"`
	VbankIssuedAt     int32            `protobuf:"varint,44,opt,name=vbank_issued_at,json=vbankIssuedAt,proto3" json:"vbank_issued_at,omitempty"`
	VbankName         string           `protobuf:"bytes,45,opt,name=vbank_name,json=vbankName,proto3" json:"vbank_name,omitempty"`
	VbankNum          string           `protobuf:"bytes,46,opt,name=vbank_num,json=vbankNum,proto3" json:"vbank_num,omitempty"`
	Promotion         *Promotion       `protobuf:"bytes,47,opt,name=promotion,proto3" json:"promotion,omitempty"`
	EmbPgProvider     string           `protobuf:"bytes,48,opt,name=emb_pg_provider,json=embPgProvider,proto3" json:"emb_pg_provider,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{0}
}

func (x *Payment) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Payment) GetApplyNum() string {
	if x != nil {
		return x.ApplyNum
	}
	return ""
}

func (x *Payment) GetBankCode() int32 {
	if x != nil {
		return x.BankCode
	}
	return 0
}

func (x *Payment) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *Payment) GetBuyerAddr() string {
	if x != nil {
		return x.BuyerAddr
	}
	return ""
}

func (x *Payment) GetBuyerEmail() string {
	if x != nil {
		return x.BuyerEmail
	}
	return ""
}

func (x *Payment) GetBuyerName() string {
	if x != nil {
		return x.BuyerName
	}
	return ""
}

func (x *Payment) GetBuyerPostcode() string {
	if x != nil {
		return x.BuyerPostcode
	}
	return ""
}

func (x *Payment) GetBuyerTel() string {
	if x != nil {
		return x.BuyerTel
	}
	return ""
}

func (x *Payment) GetCancelAmount() int32 {
	if x != nil {
		return x.CancelAmount
	}
	return 0
}

func (x *Payment) GetCancelHistory() []*CancelHistory {
	if x != nil {
		return x.CancelHistory
	}
	return nil
}

func (x *Payment) GetCancelReason() string {
	if x != nil {
		return x.CancelReason
	}
	return ""
}

func (x *Payment) GetCancelReceiptUrls() []string {
	if x != nil {
		return x.CancelReceiptUrls
	}
	return nil
}

func (x *Payment) GetCancelledAt() int32 {
	if x != nil {
		return x.CancelledAt
	}
	return 0
}

func (x *Payment) GetCardCode() string {
	if x != nil {
		return x.CardCode
	}
	return ""
}

func (x *Payment) GetCardName() string {
	if x != nil {
		return x.CardName
	}
	return ""
}

func (x *Payment) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *Payment) GetCardQuota() int32 {
	if x != nil {
		return x.CardQuota
	}
	return 0
}

func (x *Payment) GetCardType() int32 {
	if x != nil {
		return x.CardType
	}
	return 0
}

func (x *Payment) GetCashReceiptIssued() bool {
	if x != nil {
		return x.CashReceiptIssued
	}
	return false
}

func (x *Payment) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *Payment) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Payment) GetCustomData() string {
	if x != nil {
		return x.CustomData
	}
	return ""
}

func (x *Payment) GetCustomerUid() string {
	if x != nil {
		return x.CustomerUid
	}
	return ""
}

func (x *Payment) GetCustomerUidUsage() string {
	if x != nil {
		return x.CustomerUidUsage
	}
	return ""
}

func (x *Payment) GetEscrow() bool {
	if x != nil {
		return x.Escrow
	}
	return false
}

func (x *Payment) GetFailReason() string {
	if x != nil {
		return x.FailReason
	}
	return ""
}

func (x *Payment) GetFailedAt() int32 {
	if x != nil {
		return x.FailedAt
	}
	return 0
}

func (x *Payment) GetImpUid() string {
	if x != nil {
		return x.ImpUid
	}
	return ""
}

func (x *Payment) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *Payment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Payment) GetPaidAt() int32 {
	if x != nil {
		return x.PaidAt
	}
	return 0
}

func (x *Payment) GetPayMethod() string {
	if x != nil {
		return x.PayMethod
	}
	return ""
}

func (x *Payment) GetPgId() string {
	if x != nil {
		return x.PgId
	}
	return ""
}

func (x *Payment) GetPgProvider() string {
	if x != nil {
		return x.PgProvider
	}
	return ""
}

func (x *Payment) GetPgTid() string {
	if x != nil {
		return x.PgTid
	}
	return ""
}

func (x *Payment) GetReceiptUrl() string {
	if x != nil {
		return x.ReceiptUrl
	}
	return ""
}

func (x *Payment) GetStartedAt() int32 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *Payment) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Payment) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *Payment) GetVbankCode() string {
	if x != nil {
		return x.VbankCode
	}
	return ""
}

func (x *Payment) GetVbankDate() int32 {
	if x != nil {
		return x.VbankDate
	}
	return 0
}

func (x *Payment) GetVbankHolder() string {
	if x != nil {
		return x.VbankHolder
	}
	return ""
}

func (x *Payment) GetVbankIssuedAt() int32 {
	if x != nil {
		return x.VbankIssuedAt
	}
	return 0
}

func (x *Payment) GetVbankName() string {
	if x != nil {
		return x.VbankName
	}
	return ""
}

func (x *Payment) GetVbankNum() string {
	if x != nil {
		return x.VbankNum
	}
	return ""
}

func (x *Payment) GetPromotion() *Promotion {
	if x != nil {
		return x.Promotion
	}
	return nil
}

func (x *Payment) GetEmbPgProvider() string {
	if x != nil {
		return x.EmbPgProvider
	}
	return ""
}

type CancelHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PgTid       string `protobuf:"bytes,1,opt,name=pg_tid,json=pgTid,proto3" json:"pg_tid,omitempty"`
	Amount      int32  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	CancelledAt int32  `protobuf:"varint,3,opt,name=cancelled_at,json=cancelledAt,proto3" json:"cancelled_at,omitempty"`
	Reason      string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	ReceiptUrl  string `protobuf:"bytes,5,opt,name=receipt_url,json=receiptUrl,proto3" json:"receipt_url,omitempty"`
}

func (x *CancelHistory) Reset() {
	*x = CancelHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelHistory) ProtoMessage() {}

func (x *CancelHistory) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelHistory.ProtoReflect.Descriptor instead.
func (*CancelHistory) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{1}
}

func (x *CancelHistory) GetPgTid() string {
	if x != nil {
		return x.PgTid
	}
	return ""
}

func (x *CancelHistory) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CancelHistory) GetCancelledAt() int32 {
	if x != nil {
		return x.CancelledAt
	}
	return 0
}

func (x *CancelHistory) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *CancelHistory) GetReceiptUrl() string {
	if x != nil {
		return x.ReceiptUrl
	}
	return ""
}

type PaymentPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int32      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Previous int32      `protobuf:"varint,2,opt,name=previous,proto3" json:"previous,omitempty"`
	Next     int32      `protobuf:"varint,3,opt,name=next,proto3" json:"next,omitempty"`
	List     []*Payment `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PaymentPage) Reset() {
	*x = PaymentPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentPage) ProtoMessage() {}

func (x *PaymentPage) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentPage.ProtoReflect.Descriptor instead.
func (*PaymentPage) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{2}
}

func (x *PaymentPage) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PaymentPage) GetPrevious() int32 {
	if x != nil {
		return x.Previous
	}
	return 0
}

func (x *PaymentPage) GetNext() int32 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *PaymentPage) GetList() []*Payment {
	if x != nil {
		return x.List
	}
	return nil
}

type PaymentBalanceDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxFree int32 `protobuf:"varint,1,opt,name=tax_free,json=taxFree,proto3" json:"tax_free,omitempty"`
	Supply  int32 `protobuf:"varint,2,opt,name=supply,proto3" json:"supply,omitempty"`
	Vat     int32 `protobuf:"varint,3,opt,name=vat,proto3" json:"vat,omitempty"`
	Service int32 `protobuf:"varint,4,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *PaymentBalanceDetail) Reset() {
	*x = PaymentBalanceDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentBalanceDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentBalanceDetail) ProtoMessage() {}

func (x *PaymentBalanceDetail) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentBalanceDetail.ProtoReflect.Descriptor instead.
func (*PaymentBalanceDetail) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{3}
}

func (x *PaymentBalanceDetail) GetTaxFree() int32 {
	if x != nil {
		return x.TaxFree
	}
	return 0
}

func (x *PaymentBalanceDetail) GetSupply() int32 {
	if x != nil {
		return x.Supply
	}
	return 0
}

func (x *PaymentBalanceDetail) GetVat() int32 {
	if x != nil {
		return x.Vat
	}
	return 0
}

func (x *PaymentBalanceDetail) GetService() int32 {
	if x != nil {
		return x.Service
	}
	return 0
}

type PaymentBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount      int32                    `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	CashReceipt *PaymentBalanceDetail    `protobuf:"bytes,2,opt,name=cash_receipt,json=cashReceipt,proto3" json:"cash_receipt,omitempty"`
	Primary     *PaymentBalanceDetail    `protobuf:"bytes,3,opt,name=primary,proto3" json:"primary,omitempty"`
	Secondary   *PaymentBalanceDetail    `protobuf:"bytes,4,opt,name=secondary,proto3" json:"secondary,omitempty"`
	Discount    *PaymentBalanceDetail    `protobuf:"bytes,5,opt,name=discount,proto3" json:"discount,omitempty"`
	Histories   []*PaymentBalanceHistory `protobuf:"bytes,6,rep,name=histories,proto3" json:"histories,omitempty"`
}

func (x *PaymentBalance) Reset() {
	*x = PaymentBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentBalance) ProtoMessage() {}

func (x *PaymentBalance) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentBalance.ProtoReflect.Descriptor instead.
func (*PaymentBalance) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{4}
}

func (x *PaymentBalance) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PaymentBalance) GetCashReceipt() *PaymentBalanceDetail {
	if x != nil {
		return x.CashReceipt
	}
	return nil
}

func (x *PaymentBalance) GetPrimary() *PaymentBalanceDetail {
	if x != nil {
		return x.Primary
	}
	return nil
}

func (x *PaymentBalance) GetSecondary() *PaymentBalanceDetail {
	if x != nil {
		return x.Secondary
	}
	return nil
}

func (x *PaymentBalance) GetDiscount() *PaymentBalanceDetail {
	if x != nil {
		return x.Discount
	}
	return nil
}

func (x *PaymentBalance) GetHistories() []*PaymentBalanceHistory {
	if x != nil {
		return x.Histories
	}
	return nil
}

type PaymentBalanceHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashReceipt *PaymentBalanceDetail `protobuf:"bytes,1,opt,name=cash_receipt,json=cashReceipt,proto3" json:"cash_receipt,omitempty"`
	Primary     *PaymentBalanceDetail `protobuf:"bytes,2,opt,name=primary,proto3" json:"primary,omitempty"`
	Secondary   *PaymentBalanceDetail `protobuf:"bytes,3,opt,name=secondary,proto3" json:"secondary,omitempty"`
	Discount    *PaymentBalanceDetail `protobuf:"bytes,4,opt,name=discount,proto3" json:"discount,omitempty"`
	Created     int32                 `protobuf:"varint,5,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *PaymentBalanceHistory) Reset() {
	*x = PaymentBalanceHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentBalanceHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentBalanceHistory) ProtoMessage() {}

func (x *PaymentBalanceHistory) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentBalanceHistory.ProtoReflect.Descriptor instead.
func (*PaymentBalanceHistory) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{5}
}

func (x *PaymentBalanceHistory) GetCashReceipt() *PaymentBalanceDetail {
	if x != nil {
		return x.CashReceipt
	}
	return nil
}

func (x *PaymentBalanceHistory) GetPrimary() *PaymentBalanceDetail {
	if x != nil {
		return x.Primary
	}
	return nil
}

func (x *PaymentBalanceHistory) GetSecondary() *PaymentBalanceDetail {
	if x != nil {
		return x.Secondary
	}
	return nil
}

func (x *PaymentBalanceHistory) GetDiscount() *PaymentBalanceDetail {
	if x != nil {
		return x.Discount
	}
	return nil
}

func (x *PaymentBalanceHistory) GetCreated() int32 {
	if x != nil {
		return x.Created
	}
	return 0
}

type PaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImpUid string `protobuf:"bytes,1,opt,name=imp_uid,json=impUid,proto3" json:"imp_uid,omitempty"`
}

func (x *PaymentRequest) Reset() {
	*x = PaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentRequest) ProtoMessage() {}

func (x *PaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentRequest.ProtoReflect.Descriptor instead.
func (*PaymentRequest) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{6}
}

func (x *PaymentRequest) GetImpUid() string {
	if x != nil {
		return x.ImpUid
	}
	return ""
}

type PaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *Payment `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *PaymentResponse) Reset() {
	*x = PaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentResponse) ProtoMessage() {}

func (x *PaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentResponse.ProtoReflect.Descriptor instead.
func (*PaymentResponse) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{7}
}

func (x *PaymentResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PaymentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PaymentResponse) GetResponse() *Payment {
	if x != nil {
		return x.Response
	}
	return nil
}

type PaymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImpUid []string `protobuf:"bytes,1,rep,name=imp_uid,json=impUid,proto3" json:"imp_uid,omitempty"`
}

func (x *PaymentsRequest) Reset() {
	*x = PaymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentsRequest) ProtoMessage() {}

func (x *PaymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentsRequest.ProtoReflect.Descriptor instead.
func (*PaymentsRequest) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{8}
}

func (x *PaymentsRequest) GetImpUid() []string {
	if x != nil {
		return x.ImpUid
	}
	return nil
}

type PaymentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response []*Payment `protobuf:"bytes,3,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *PaymentsResponse) Reset() {
	*x = PaymentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentsResponse) ProtoMessage() {}

func (x *PaymentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentsResponse.ProtoReflect.Descriptor instead.
func (*PaymentsResponse) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{9}
}

func (x *PaymentsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PaymentsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PaymentsResponse) GetResponse() []*Payment {
	if x != nil {
		return x.Response
	}
	return nil
}

type PaymentsMerchantUidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantUid string `protobuf:"bytes,1,opt,name=merchant_uid,json=merchantUid,proto3" json:"merchant_uid,omitempty"`
	Status      string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Page        int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Sorting     string `protobuf:"bytes,4,opt,name=sorting,proto3" json:"sorting,omitempty"`
}

func (x *PaymentsMerchantUidRequest) Reset() {
	*x = PaymentsMerchantUidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentsMerchantUidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentsMerchantUidRequest) ProtoMessage() {}

func (x *PaymentsMerchantUidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentsMerchantUidRequest.ProtoReflect.Descriptor instead.
func (*PaymentsMerchantUidRequest) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{10}
}

func (x *PaymentsMerchantUidRequest) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *PaymentsMerchantUidRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PaymentsMerchantUidRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PaymentsMerchantUidRequest) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

type PaymentsMerchantUidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *PaymentPage `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *PaymentsMerchantUidResponse) Reset() {
	*x = PaymentsMerchantUidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentsMerchantUidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentsMerchantUidResponse) ProtoMessage() {}

func (x *PaymentsMerchantUidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentsMerchantUidResponse.ProtoReflect.Descriptor instead.
func (*PaymentsMerchantUidResponse) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{11}
}

func (x *PaymentsMerchantUidResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PaymentsMerchantUidResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PaymentsMerchantUidResponse) GetResponse() *PaymentPage {
	if x != nil {
		return x.Response
	}
	return nil
}

type PaymentStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Page    int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit   int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	From    int32  `protobuf:"varint,4,opt,name=from,proto3" json:"from,omitempty"`
	To      int32  `protobuf:"varint,5,opt,name=to,proto3" json:"to,omitempty"`
	Sorting string `protobuf:"bytes,6,opt,name=sorting,proto3" json:"sorting,omitempty"`
}

func (x *PaymentStatusRequest) Reset() {
	*x = PaymentStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentStatusRequest) ProtoMessage() {}

func (x *PaymentStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentStatusRequest.ProtoReflect.Descriptor instead.
func (*PaymentStatusRequest) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{12}
}

func (x *PaymentStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PaymentStatusRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PaymentStatusRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaymentStatusRequest) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *PaymentStatusRequest) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *PaymentStatusRequest) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

type PaymentStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *PaymentPage `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *PaymentStatusResponse) Reset() {
	*x = PaymentStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentStatusResponse) ProtoMessage() {}

func (x *PaymentStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentStatusResponse.ProtoReflect.Descriptor instead.
func (*PaymentStatusResponse) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{13}
}

func (x *PaymentStatusResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PaymentStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PaymentStatusResponse) GetResponse() *PaymentPage {
	if x != nil {
		return x.Response
	}
	return nil
}

type PaymentMerchantUidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantUid string `protobuf:"bytes,1,opt,name=merchant_uid,json=merchantUid,proto3" json:"merchant_uid,omitempty"`
	Status      string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Sorting     string `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting,omitempty"`
}

func (x *PaymentMerchantUidRequest) Reset() {
	*x = PaymentMerchantUidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMerchantUidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMerchantUidRequest) ProtoMessage() {}

func (x *PaymentMerchantUidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMerchantUidRequest.ProtoReflect.Descriptor instead.
func (*PaymentMerchantUidRequest) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{14}
}

func (x *PaymentMerchantUidRequest) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *PaymentMerchantUidRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PaymentMerchantUidRequest) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

type PaymentMerchantUidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *Payment `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *PaymentMerchantUidResponse) Reset() {
	*x = PaymentMerchantUidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMerchantUidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMerchantUidResponse) ProtoMessage() {}

func (x *PaymentMerchantUidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMerchantUidResponse.ProtoReflect.Descriptor instead.
func (*PaymentMerchantUidResponse) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{15}
}

func (x *PaymentMerchantUidResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PaymentMerchantUidResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PaymentMerchantUidResponse) GetResponse() *Payment {
	if x != nil {
		return x.Response
	}
	return nil
}

type PaymentCancelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImpUid        string  `protobuf:"bytes,1,opt,name=imp_uid,json=impUid,proto3" json:"imp_uid,omitempty"`
	MerchantUid   string  `protobuf:"bytes,2,opt,name=merchant_uid,json=merchantUid,proto3" json:"merchant_uid,omitempty"`
	Amount        float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TaxFree       float64 `protobuf:"fixed64,4,opt,name=tax_free,json=taxFree,proto3" json:"tax_free,omitempty"`
	Checksum      float64 `protobuf:"fixed64,5,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Reason        string  `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	RefundHolder  string  `protobuf:"bytes,7,opt,name=refund_holder,json=refundHolder,proto3" json:"refund_holder,omitempty"`
	RefundBank    string  `protobuf:"bytes,8,opt,name=refund_bank,json=refundBank,proto3" json:"refund_bank,omitempty"`
	RefundAccount string  `protobuf:"bytes,9,opt,name=refund_account,json=refundAccount,proto3" json:"refund_account,omitempty"`
}

func (x *PaymentCancelRequest) Reset() {
	*x = PaymentCancelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentCancelRequest) ProtoMessage() {}

func (x *PaymentCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentCancelRequest.ProtoReflect.Descriptor instead.
func (*PaymentCancelRequest) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{16}
}

func (x *PaymentCancelRequest) GetImpUid() string {
	if x != nil {
		return x.ImpUid
	}
	return ""
}

func (x *PaymentCancelRequest) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *PaymentCancelRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PaymentCancelRequest) GetTaxFree() float64 {
	if x != nil {
		return x.TaxFree
	}
	return 0
}

func (x *PaymentCancelRequest) GetChecksum() float64 {
	if x != nil {
		return x.Checksum
	}
	return 0
}

func (x *PaymentCancelRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *PaymentCancelRequest) GetRefundHolder() string {
	if x != nil {
		return x.RefundHolder
	}
	return ""
}

func (x *PaymentCancelRequest) GetRefundBank() string {
	if x != nil {
		return x.RefundBank
	}
	return ""
}

func (x *PaymentCancelRequest) GetRefundAccount() string {
	if x != nil {
		return x.RefundAccount
	}
	return ""
}

type PaymentCancelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *Payment `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *PaymentCancelResponse) Reset() {
	*x = PaymentCancelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentCancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentCancelResponse) ProtoMessage() {}

func (x *PaymentCancelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentCancelResponse.ProtoReflect.Descriptor instead.
func (*PaymentCancelResponse) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{17}
}

func (x *PaymentCancelResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PaymentCancelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PaymentCancelResponse) GetResponse() *Payment {
	if x != nil {
		return x.Response
	}
	return nil
}

type PaymentBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImpUid string `protobuf:"bytes,1,opt,name=imp_uid,json=impUid,proto3" json:"imp_uid,omitempty"`
}

func (x *PaymentBalanceRequest) Reset() {
	*x = PaymentBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentBalanceRequest) ProtoMessage() {}

func (x *PaymentBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentBalanceRequest.ProtoReflect.Descriptor instead.
func (*PaymentBalanceRequest) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{18}
}

func (x *PaymentBalanceRequest) GetImpUid() string {
	if x != nil {
		return x.ImpUid
	}
	return ""
}

type PaymentBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *PaymentBalance `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *PaymentBalanceResponse) Reset() {
	*x = PaymentBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentBalanceResponse) ProtoMessage() {}

func (x *PaymentBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentBalanceResponse.ProtoReflect.Descriptor instead.
func (*PaymentBalanceResponse) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{19}
}

func (x *PaymentBalanceResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PaymentBalanceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PaymentBalanceResponse) GetResponse() *PaymentBalance {
	if x != nil {
		return x.Response
	}
	return nil
}

type Prepare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantUid string `protobuf:"bytes,1,opt,name=merchant_uid,json=merchantUid,proto3" json:"merchant_uid,omitempty"`
	Amount      int32  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Prepare) Reset() {
	*x = Prepare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prepare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prepare) ProtoMessage() {}

func (x *Prepare) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prepare.ProtoReflect.Descriptor instead.
func (*Prepare) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{20}
}

func (x *Prepare) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *Prepare) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type PaymentPrepareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantUid string  `protobuf:"bytes,1,opt,name=merchant_uid,json=merchantUid,proto3" json:"merchant_uid,omitempty"`
	Amount      float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *PaymentPrepareRequest) Reset() {
	*x = PaymentPrepareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentPrepareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentPrepareRequest) ProtoMessage() {}

func (x *PaymentPrepareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentPrepareRequest.ProtoReflect.Descriptor instead.
func (*PaymentPrepareRequest) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{21}
}

func (x *PaymentPrepareRequest) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *PaymentPrepareRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type PaymentPrepareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *Prepare `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *PaymentPrepareResponse) Reset() {
	*x = PaymentPrepareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentPrepareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentPrepareResponse) ProtoMessage() {}

func (x *PaymentPrepareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentPrepareResponse.ProtoReflect.Descriptor instead.
func (*PaymentPrepareResponse) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{22}
}

func (x *PaymentPrepareResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PaymentPrepareResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PaymentPrepareResponse) GetResponse() *Prepare {
	if x != nil {
		return x.Response
	}
	return nil
}

type PaymentGetPrepareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantUid string `protobuf:"bytes,1,opt,name=merchant_uid,json=merchantUid,proto3" json:"merchant_uid,omitempty"`
}

func (x *PaymentGetPrepareRequest) Reset() {
	*x = PaymentGetPrepareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentGetPrepareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentGetPrepareRequest) ProtoMessage() {}

func (x *PaymentGetPrepareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentGetPrepareRequest.ProtoReflect.Descriptor instead.
func (*PaymentGetPrepareRequest) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{23}
}

func (x *PaymentGetPrepareRequest) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

type Promotion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Discount int32  `protobuf:"varint,2,opt,name=discount,proto3" json:"discount,omitempty"`
}

func (x *Promotion) Reset() {
	*x = Promotion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_payment_payment_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Promotion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Promotion) ProtoMessage() {}

func (x *Promotion) ProtoReflect() protoreflect.Message {
	mi := &file_v1_payment_payment_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Promotion.ProtoReflect.Descriptor instead.
func (*Promotion) Descriptor() ([]byte, []int) {
	return file_v1_payment_payment_proto_rawDescGZIP(), []int{24}
}

func (x *Promotion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Promotion) GetDiscount() int32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

var File_v1_payment_payment_proto protoreflect.FileDescriptor

var file_v1_payment_payment_proto_rawDesc = []byte{
	0x0a, 0x18, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa7, 0x0c, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4e,
	0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x79, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x63, 0x61, 0x73, 0x68, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x12,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x5f, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x55, 0x69, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x73,
	0x63, 0x72, 0x6f, 0x77, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x73, 0x63, 0x72,
	0x6f, 0x77, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x6d, 0x70, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x70, 0x61, 0x69, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x70, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x23, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x15,
	0x0a, 0x06, 0x70, 0x67, 0x5f, 0x74, 0x69, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x67, 0x54, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x26, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x76, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x76, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76,
	0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x76, 0x62, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x62,
	0x61, 0x6e, 0x6b, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x76, 0x62, 0x61, 0x6e, 0x6b, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a,
	0x0f, 0x76, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x2c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x76, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x62, 0x61, 0x6e, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x75,
	0x6d, 0x12, 0x30, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6d, 0x62, 0x5f, 0x70, 0x67, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6d,
	0x62, 0x50, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x9a, 0x01, 0x0a, 0x0d,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x15, 0x0a,
	0x06, 0x70, 0x67, 0x5f, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x67, 0x54, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x79, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x24, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x75, 0x0a, 0x14, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x61, 0x78, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74,
	0x61, 0x78, 0x46, 0x72, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x76, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x61, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xd9, 0x02, 0x0a, 0x0e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x68,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x3b, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x09, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x12, 0x39, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x09, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0xa4, 0x02, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x40, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x68, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x09, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x09, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x29, 0x0a,
	0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x6d, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x6d, 0x70, 0x55, 0x69, 0x64, 0x22, 0x6d, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d,
	0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x70,
	0x55, 0x69, 0x64, 0x22, 0x6e, 0x0a, 0x10, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x1a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x7d, 0x0a, 0x1b, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55,
	0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x14, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x22, 0x77, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x70, 0x0a, 0x19,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55,
	0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x78,
	0x0a, 0x1a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa6, 0x02, 0x0a, 0x14, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x70, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x78, 0x5f, 0x66, 0x72, 0x65,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x61, 0x78, 0x46, 0x72, 0x65, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x73, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x6d, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x6d, 0x70, 0x55, 0x69, 0x64, 0x22, 0x7b, 0x0a, 0x16, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0a, 0x15, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x74, 0x0a, 0x16, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x0a, 0x18, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x55, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xe1, 0x09,
	0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x89, 0x01, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x50, 0x43, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12,
	0x2b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x6d, 0x70, 0x5f,
	0x75, 0x69, 0x64, 0x7d, 0x2f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x6c, 0x0a, 0x0a,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x50, 0x43, 0x12, 0x17, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x7b, 0x69, 0x6d, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x65, 0x0a, 0x0b, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x50, 0x43, 0x12, 0x18, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0xa0, 0x01, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x52, 0x50, 0x43, 0x12, 0x22, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x12, 0x36, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x66, 0x69, 0x6e, 0x64, 0x2f, 0x7b, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x7d, 0x12, 0xa6, 0x01, 0x0a, 0x16, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x52, 0x50, 0x43, 0x12,
	0x23, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55,
	0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x3b, 0x12, 0x39, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x66, 0x69,
	0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x2f, 0x7b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f,
	0x75, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x7d, 0x12, 0x85, 0x01,
	0x0a, 0x11, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x50, 0x43, 0x12, 0x1d, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x7b, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x7d, 0x12, 0x7e, 0x0a, 0x10, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x50, 0x43, 0x12, 0x1d, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25,
	0x22, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x3a, 0x01, 0x2a, 0x12, 0x82, 0x01, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x50, 0x43, 0x12, 0x1e, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x26, 0x22, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x94, 0x01, 0x0a, 0x14, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x52, 0x50, 0x43, 0x12, 0x21, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12,
	0x30, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x2f, 0x7b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64,
	0x7d, 0x42, 0x41, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x69, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2f, 0x67, 0x65, 0x6e, 0x5f, 0x73, 0x72, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0xaa, 0x02, 0x0a, 0x56, 0x31, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_payment_payment_proto_rawDescOnce sync.Once
	file_v1_payment_payment_proto_rawDescData = file_v1_payment_payment_proto_rawDesc
)

func file_v1_payment_payment_proto_rawDescGZIP() []byte {
	file_v1_payment_payment_proto_rawDescOnce.Do(func() {
		file_v1_payment_payment_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_payment_payment_proto_rawDescData)
	})
	return file_v1_payment_payment_proto_rawDescData
}

var file_v1_payment_payment_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_v1_payment_payment_proto_goTypes = []interface{}{
	(*Payment)(nil),                     // 0: payment.Payment
	(*CancelHistory)(nil),               // 1: payment.CancelHistory
	(*PaymentPage)(nil),                 // 2: payment.PaymentPage
	(*PaymentBalanceDetail)(nil),        // 3: payment.PaymentBalanceDetail
	(*PaymentBalance)(nil),              // 4: payment.PaymentBalance
	(*PaymentBalanceHistory)(nil),       // 5: payment.PaymentBalanceHistory
	(*PaymentRequest)(nil),              // 6: payment.PaymentRequest
	(*PaymentResponse)(nil),             // 7: payment.PaymentResponse
	(*PaymentsRequest)(nil),             // 8: payment.PaymentsRequest
	(*PaymentsResponse)(nil),            // 9: payment.PaymentsResponse
	(*PaymentsMerchantUidRequest)(nil),  // 10: payment.PaymentsMerchantUidRequest
	(*PaymentsMerchantUidResponse)(nil), // 11: payment.PaymentsMerchantUidResponse
	(*PaymentStatusRequest)(nil),        // 12: payment.PaymentStatusRequest
	(*PaymentStatusResponse)(nil),       // 13: payment.PaymentStatusResponse
	(*PaymentMerchantUidRequest)(nil),   // 14: payment.PaymentMerchantUidRequest
	(*PaymentMerchantUidResponse)(nil),  // 15: payment.PaymentMerchantUidResponse
	(*PaymentCancelRequest)(nil),        // 16: payment.PaymentCancelRequest
	(*PaymentCancelResponse)(nil),       // 17: payment.PaymentCancelResponse
	(*PaymentBalanceRequest)(nil),       // 18: payment.PaymentBalanceRequest
	(*PaymentBalanceResponse)(nil),      // 19: payment.PaymentBalanceResponse
	(*Prepare)(nil),                     // 20: payment.Prepare
	(*PaymentPrepareRequest)(nil),       // 21: payment.PaymentPrepareRequest
	(*PaymentPrepareResponse)(nil),      // 22: payment.PaymentPrepareResponse
	(*PaymentGetPrepareRequest)(nil),    // 23: payment.PaymentGetPrepareRequest
	(*Promotion)(nil),                   // 24: payment.Promotion
}
var file_v1_payment_payment_proto_depIdxs = []int32{
	1,  // 0: payment.Payment.cancel_history:type_name -> payment.CancelHistory
	24, // 1: payment.Payment.promotion:type_name -> payment.Promotion
	0,  // 2: payment.PaymentPage.list:type_name -> payment.Payment
	3,  // 3: payment.PaymentBalance.cash_receipt:type_name -> payment.PaymentBalanceDetail
	3,  // 4: payment.PaymentBalance.primary:type_name -> payment.PaymentBalanceDetail
	3,  // 5: payment.PaymentBalance.secondary:type_name -> payment.PaymentBalanceDetail
	3,  // 6: payment.PaymentBalance.discount:type_name -> payment.PaymentBalanceDetail
	5,  // 7: payment.PaymentBalance.histories:type_name -> payment.PaymentBalanceHistory
	3,  // 8: payment.PaymentBalanceHistory.cash_receipt:type_name -> payment.PaymentBalanceDetail
	3,  // 9: payment.PaymentBalanceHistory.primary:type_name -> payment.PaymentBalanceDetail
	3,  // 10: payment.PaymentBalanceHistory.secondary:type_name -> payment.PaymentBalanceDetail
	3,  // 11: payment.PaymentBalanceHistory.discount:type_name -> payment.PaymentBalanceDetail
	0,  // 12: payment.PaymentResponse.response:type_name -> payment.Payment
	0,  // 13: payment.PaymentsResponse.response:type_name -> payment.Payment
	2,  // 14: payment.PaymentsMerchantUidResponse.response:type_name -> payment.PaymentPage
	2,  // 15: payment.PaymentStatusResponse.response:type_name -> payment.PaymentPage
	0,  // 16: payment.PaymentMerchantUidResponse.response:type_name -> payment.Payment
	0,  // 17: payment.PaymentCancelResponse.response:type_name -> payment.Payment
	4,  // 18: payment.PaymentBalanceResponse.response:type_name -> payment.PaymentBalance
	20, // 19: payment.PaymentPrepareResponse.response:type_name -> payment.Prepare
	18, // 20: payment.PaymentService.PaymentBalanceRPC:input_type -> payment.PaymentBalanceRequest
	6,  // 21: payment.PaymentService.PaymentRPC:input_type -> payment.PaymentRequest
	8,  // 22: payment.PaymentService.PaymentsRPC:input_type -> payment.PaymentsRequest
	14, // 23: payment.PaymentService.PaymentMerchantUidRPC:input_type -> payment.PaymentMerchantUidRequest
	10, // 24: payment.PaymentService.PaymentsMerchantUidRPC:input_type -> payment.PaymentsMerchantUidRequest
	12, // 25: payment.PaymentService.PaymentsStatusRPC:input_type -> payment.PaymentStatusRequest
	16, // 26: payment.PaymentService.PaymentCancelRPC:input_type -> payment.PaymentCancelRequest
	21, // 27: payment.PaymentService.PaymentPrepareRPC:input_type -> payment.PaymentPrepareRequest
	23, // 28: payment.PaymentService.PaymentGetPrepareRPC:input_type -> payment.PaymentGetPrepareRequest
	19, // 29: payment.PaymentService.PaymentBalanceRPC:output_type -> payment.PaymentBalanceResponse
	7,  // 30: payment.PaymentService.PaymentRPC:output_type -> payment.PaymentResponse
	9,  // 31: payment.PaymentService.PaymentsRPC:output_type -> payment.PaymentsResponse
	15, // 32: payment.PaymentService.PaymentMerchantUidRPC:output_type -> payment.PaymentMerchantUidResponse
	11, // 33: payment.PaymentService.PaymentsMerchantUidRPC:output_type -> payment.PaymentsMerchantUidResponse
	13, // 34: payment.PaymentService.PaymentsStatusRPC:output_type -> payment.PaymentStatusResponse
	17, // 35: payment.PaymentService.PaymentCancelRPC:output_type -> payment.PaymentCancelResponse
	22, // 36: payment.PaymentService.PaymentPrepareRPC:output_type -> payment.PaymentPrepareResponse
	22, // 37: payment.PaymentService.PaymentGetPrepareRPC:output_type -> payment.PaymentPrepareResponse
	29, // [29:38] is the sub-list for method output_type
	20, // [20:29] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_v1_payment_payment_proto_init() }
func file_v1_payment_payment_proto_init() {
	if File_v1_payment_payment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_payment_payment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentBalanceDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentBalanceHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentsMerchantUidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentsMerchantUidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMerchantUidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMerchantUidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentCancelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentCancelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prepare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentPrepareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentPrepareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentGetPrepareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_payment_payment_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Promotion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_payment_payment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_payment_payment_proto_goTypes,
		DependencyIndexes: file_v1_payment_payment_proto_depIdxs,
		MessageInfos:      file_v1_payment_payment_proto_msgTypes,
	}.Build()
	File_v1_payment_payment_proto = out.File
	file_v1_payment_payment_proto_rawDesc = nil
	file_v1_payment_payment_proto_goTypes = nil
	file_v1_payment_payment_proto_depIdxs = nil
}
