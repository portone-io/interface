// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.5
// source: v1/subscribe/subscribe.proto

package subscribe

import (
	proto "github.com/golang/protobuf/proto"
	payment "github.com/iamport/interface/gen_src/go/v1/payment"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type OnetimePaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantUid            string `protobuf:"bytes,1,opt,name=merchant_uid,json=merchantUid,proto3" json:"merchant_uid,omitempty"`
	Amount                 int32  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	TaxFree                int32  `protobuf:"varint,3,opt,name=tax_free,json=taxFree,proto3" json:"tax_free,omitempty"`
	CardNumber             string `protobuf:"bytes,4,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	Expiry                 string `protobuf:"bytes,5,opt,name=expiry,proto3" json:"expiry,omitempty"`
	Birth                  string `protobuf:"bytes,6,opt,name=birth,proto3" json:"birth,omitempty"`
	Pwd_2Digit             string `protobuf:"bytes,7,opt,name=pwd_2digit,json=pwd2digit,proto3" json:"pwd_2digit,omitempty"`
	CustomerUid            string `protobuf:"bytes,8,opt,name=customer_uid,json=customerUid,proto3" json:"customer_uid,omitempty"`
	Pg                     string `protobuf:"bytes,9,opt,name=pg,proto3" json:"pg,omitempty"`
	Name                   string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	BuyerName              string `protobuf:"bytes,11,opt,name=buyer_name,json=buyerName,proto3" json:"buyer_name,omitempty"`
	BuyerEmail             string `protobuf:"bytes,12,opt,name=buyer_email,json=buyerEmail,proto3" json:"buyer_email,omitempty"`
	BuyerTel               string `protobuf:"bytes,13,opt,name=buyer_tel,json=buyerTel,proto3" json:"buyer_tel,omitempty"`
	BuyerAddr              string `protobuf:"bytes,14,opt,name=buyer_addr,json=buyerAddr,proto3" json:"buyer_addr,omitempty"`
	BuyerPostcode          string `protobuf:"bytes,15,opt,name=buyer_postcode,json=buyerPostcode,proto3" json:"buyer_postcode,omitempty"`
	CardQuota              int32  `protobuf:"varint,16,opt,name=card_quota,json=cardQuota,proto3" json:"card_quota,omitempty"`
	InterestFreeByMerchant bool   `protobuf:"varint,17,opt,name=interest_free_by_merchant,json=interestFreeByMerchant,proto3" json:"interest_free_by_merchant,omitempty"`
	CustomData             string `protobuf:"bytes,18,opt,name=custom_data,json=customData,proto3" json:"custom_data,omitempty"`
	NoticeUrl              string `protobuf:"bytes,19,opt,name=notice_url,json=noticeUrl,proto3" json:"notice_url,omitempty"`
}

func (x *OnetimePaymentRequest) Reset() {
	*x = OnetimePaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_subscribe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnetimePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnetimePaymentRequest) ProtoMessage() {}

func (x *OnetimePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_subscribe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnetimePaymentRequest.ProtoReflect.Descriptor instead.
func (*OnetimePaymentRequest) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_subscribe_proto_rawDescGZIP(), []int{0}
}

func (x *OnetimePaymentRequest) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *OnetimePaymentRequest) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OnetimePaymentRequest) GetTaxFree() int32 {
	if x != nil {
		return x.TaxFree
	}
	return 0
}

func (x *OnetimePaymentRequest) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *OnetimePaymentRequest) GetExpiry() string {
	if x != nil {
		return x.Expiry
	}
	return ""
}

func (x *OnetimePaymentRequest) GetBirth() string {
	if x != nil {
		return x.Birth
	}
	return ""
}

func (x *OnetimePaymentRequest) GetPwd_2Digit() string {
	if x != nil {
		return x.Pwd_2Digit
	}
	return ""
}

func (x *OnetimePaymentRequest) GetCustomerUid() string {
	if x != nil {
		return x.CustomerUid
	}
	return ""
}

func (x *OnetimePaymentRequest) GetPg() string {
	if x != nil {
		return x.Pg
	}
	return ""
}

func (x *OnetimePaymentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OnetimePaymentRequest) GetBuyerName() string {
	if x != nil {
		return x.BuyerName
	}
	return ""
}

func (x *OnetimePaymentRequest) GetBuyerEmail() string {
	if x != nil {
		return x.BuyerEmail
	}
	return ""
}

func (x *OnetimePaymentRequest) GetBuyerTel() string {
	if x != nil {
		return x.BuyerTel
	}
	return ""
}

func (x *OnetimePaymentRequest) GetBuyerAddr() string {
	if x != nil {
		return x.BuyerAddr
	}
	return ""
}

func (x *OnetimePaymentRequest) GetBuyerPostcode() string {
	if x != nil {
		return x.BuyerPostcode
	}
	return ""
}

func (x *OnetimePaymentRequest) GetCardQuota() int32 {
	if x != nil {
		return x.CardQuota
	}
	return 0
}

func (x *OnetimePaymentRequest) GetInterestFreeByMerchant() bool {
	if x != nil {
		return x.InterestFreeByMerchant
	}
	return false
}

func (x *OnetimePaymentRequest) GetCustomData() string {
	if x != nil {
		return x.CustomData
	}
	return ""
}

func (x *OnetimePaymentRequest) GetNoticeUrl() string {
	if x != nil {
		return x.NoticeUrl
	}
	return ""
}

type OnetimePaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *payment.Payment `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *OnetimePaymentResponse) Reset() {
	*x = OnetimePaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_subscribe_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnetimePaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnetimePaymentResponse) ProtoMessage() {}

func (x *OnetimePaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_subscribe_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnetimePaymentResponse.ProtoReflect.Descriptor instead.
func (*OnetimePaymentResponse) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_subscribe_proto_rawDescGZIP(), []int{1}
}

func (x *OnetimePaymentResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OnetimePaymentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OnetimePaymentResponse) GetResponse() *payment.Payment {
	if x != nil {
		return x.Response
	}
	return nil
}

type AgainPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerUid            string `protobuf:"bytes,1,opt,name=customer_uid,json=customerUid,proto3" json:"customer_uid,omitempty"`
	MerchantUid            string `protobuf:"bytes,2,opt,name=merchant_uid,json=merchantUid,proto3" json:"merchant_uid,omitempty"`
	Amount                 int32  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TaxFree                int32  `protobuf:"varint,4,opt,name=tax_free,json=taxFree,proto3" json:"tax_free,omitempty"`
	Name                   string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	BuyerName              string `protobuf:"bytes,6,opt,name=buyer_name,json=buyerName,proto3" json:"buyer_name,omitempty"`
	BuyerEmail             string `protobuf:"bytes,7,opt,name=buyer_email,json=buyerEmail,proto3" json:"buyer_email,omitempty"`
	BuyerTel               string `protobuf:"bytes,8,opt,name=buyer_tel,json=buyerTel,proto3" json:"buyer_tel,omitempty"`
	BuyerAddr              string `protobuf:"bytes,9,opt,name=buyer_addr,json=buyerAddr,proto3" json:"buyer_addr,omitempty"`
	BuyerPostcode          string `protobuf:"bytes,10,opt,name=buyer_postcode,json=buyerPostcode,proto3" json:"buyer_postcode,omitempty"`
	CardQuota              int32  `protobuf:"varint,11,opt,name=card_quota,json=cardQuota,proto3" json:"card_quota,omitempty"`
	InterestFreeByMerchant bool   `protobuf:"varint,12,opt,name=interest_free_by_merchant,json=interestFreeByMerchant,proto3" json:"interest_free_by_merchant,omitempty"`
	CustomData             string `protobuf:"bytes,13,opt,name=custom_data,json=customData,proto3" json:"custom_data,omitempty"`
	NoticeUrl              string `protobuf:"bytes,14,opt,name=notice_url,json=noticeUrl,proto3" json:"notice_url,omitempty"`
}

func (x *AgainPaymentRequest) Reset() {
	*x = AgainPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_subscribe_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgainPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgainPaymentRequest) ProtoMessage() {}

func (x *AgainPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_subscribe_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgainPaymentRequest.ProtoReflect.Descriptor instead.
func (*AgainPaymentRequest) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_subscribe_proto_rawDescGZIP(), []int{2}
}

func (x *AgainPaymentRequest) GetCustomerUid() string {
	if x != nil {
		return x.CustomerUid
	}
	return ""
}

func (x *AgainPaymentRequest) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *AgainPaymentRequest) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AgainPaymentRequest) GetTaxFree() int32 {
	if x != nil {
		return x.TaxFree
	}
	return 0
}

func (x *AgainPaymentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AgainPaymentRequest) GetBuyerName() string {
	if x != nil {
		return x.BuyerName
	}
	return ""
}

func (x *AgainPaymentRequest) GetBuyerEmail() string {
	if x != nil {
		return x.BuyerEmail
	}
	return ""
}

func (x *AgainPaymentRequest) GetBuyerTel() string {
	if x != nil {
		return x.BuyerTel
	}
	return ""
}

func (x *AgainPaymentRequest) GetBuyerAddr() string {
	if x != nil {
		return x.BuyerAddr
	}
	return ""
}

func (x *AgainPaymentRequest) GetBuyerPostcode() string {
	if x != nil {
		return x.BuyerPostcode
	}
	return ""
}

func (x *AgainPaymentRequest) GetCardQuota() int32 {
	if x != nil {
		return x.CardQuota
	}
	return 0
}

func (x *AgainPaymentRequest) GetInterestFreeByMerchant() bool {
	if x != nil {
		return x.InterestFreeByMerchant
	}
	return false
}

func (x *AgainPaymentRequest) GetCustomData() string {
	if x != nil {
		return x.CustomData
	}
	return ""
}

func (x *AgainPaymentRequest) GetNoticeUrl() string {
	if x != nil {
		return x.NoticeUrl
	}
	return ""
}

type AgainPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *payment.Payment `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *AgainPaymentResponse) Reset() {
	*x = AgainPaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_subscribe_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgainPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgainPaymentResponse) ProtoMessage() {}

func (x *AgainPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_subscribe_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgainPaymentResponse.ProtoReflect.Descriptor instead.
func (*AgainPaymentResponse) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_subscribe_proto_rawDescGZIP(), []int{3}
}

func (x *AgainPaymentResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgainPaymentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AgainPaymentResponse) GetResponse() *payment.Payment {
	if x != nil {
		return x.Response
	}
	return nil
}

type PaymentScheduleParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantUid   string `protobuf:"bytes,1,opt,name=merchant_uid,json=merchantUid,proto3" json:"merchant_uid,omitempty"`
	ScheduleAt    int32  `protobuf:"varint,2,opt,name=schedule_at,json=scheduleAt,proto3" json:"schedule_at,omitempty"`
	Amount        int32  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TaxFree       int32  `protobuf:"varint,4,opt,name=tax_free,json=taxFree,proto3" json:"tax_free,omitempty"`
	Name          string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	BuyerName     string `protobuf:"bytes,6,opt,name=buyer_name,json=buyerName,proto3" json:"buyer_name,omitempty"`
	BuyerEmail    string `protobuf:"bytes,7,opt,name=buyer_email,json=buyerEmail,proto3" json:"buyer_email,omitempty"`
	BuyerTel      string `protobuf:"bytes,8,opt,name=buyer_tel,json=buyerTel,proto3" json:"buyer_tel,omitempty"`
	BuyerAddr     string `protobuf:"bytes,9,opt,name=buyer_addr,json=buyerAddr,proto3" json:"buyer_addr,omitempty"`
	BuyerPostcode string `protobuf:"bytes,10,opt,name=buyer_postcode,json=buyerPostcode,proto3" json:"buyer_postcode,omitempty"`
}

func (x *PaymentScheduleParam) Reset() {
	*x = PaymentScheduleParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_subscribe_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentScheduleParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentScheduleParam) ProtoMessage() {}

func (x *PaymentScheduleParam) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_subscribe_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentScheduleParam.ProtoReflect.Descriptor instead.
func (*PaymentScheduleParam) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_subscribe_proto_rawDescGZIP(), []int{4}
}

func (x *PaymentScheduleParam) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *PaymentScheduleParam) GetScheduleAt() int32 {
	if x != nil {
		return x.ScheduleAt
	}
	return 0
}

func (x *PaymentScheduleParam) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PaymentScheduleParam) GetTaxFree() int32 {
	if x != nil {
		return x.TaxFree
	}
	return 0
}

func (x *PaymentScheduleParam) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PaymentScheduleParam) GetBuyerName() string {
	if x != nil {
		return x.BuyerName
	}
	return ""
}

func (x *PaymentScheduleParam) GetBuyerEmail() string {
	if x != nil {
		return x.BuyerEmail
	}
	return ""
}

func (x *PaymentScheduleParam) GetBuyerTel() string {
	if x != nil {
		return x.BuyerTel
	}
	return ""
}

func (x *PaymentScheduleParam) GetBuyerAddr() string {
	if x != nil {
		return x.BuyerAddr
	}
	return ""
}

func (x *PaymentScheduleParam) GetBuyerPostcode() string {
	if x != nil {
		return x.BuyerPostcode
	}
	return ""
}

type UnitSchedulePaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerUid    string `protobuf:"bytes,1,opt,name=customer_uid,json=customerUid,proto3" json:"customer_uid,omitempty"`
	MerchantUid    string `protobuf:"bytes,2,opt,name=merchant_uid,json=merchantUid,proto3" json:"merchant_uid,omitempty"`
	ImpUid         string `protobuf:"bytes,3,opt,name=imp_uid,json=impUid,proto3" json:"imp_uid,omitempty"`
	ScheduleAt     int32  `protobuf:"varint,4,opt,name=schedule_at,json=scheduleAt,proto3" json:"schedule_at,omitempty"`
	ExecutedAt     int32  `protobuf:"varint,5,opt,name=executed_at,json=executedAt,proto3" json:"executed_at,omitempty"`
	RevokedAt      int32  `protobuf:"varint,6,opt,name=revoked_at,json=revokedAt,proto3" json:"revoked_at,omitempty"`
	Amount         int32  `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`
	Name           string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	BuyerName      string `protobuf:"bytes,9,opt,name=buyer_name,json=buyerName,proto3" json:"buyer_name,omitempty"`
	BuyerEmail     string `protobuf:"bytes,10,opt,name=buyer_email,json=buyerEmail,proto3" json:"buyer_email,omitempty"`
	BuyerTel       string `protobuf:"bytes,11,opt,name=buyer_tel,json=buyerTel,proto3" json:"buyer_tel,omitempty"`
	BuyerAddr      string `protobuf:"bytes,12,opt,name=buyer_addr,json=buyerAddr,proto3" json:"buyer_addr,omitempty"`
	BuyerPostcode  string `protobuf:"bytes,13,opt,name=buyer_postcode,json=buyerPostcode,proto3" json:"buyer_postcode,omitempty"`
	CustomData     string `protobuf:"bytes,14,opt,name=custom_data,json=customData,proto3" json:"custom_data,omitempty"`
	ScheduleStatus string `protobuf:"bytes,15,opt,name=schedule_status,json=scheduleStatus,proto3" json:"schedule_status,omitempty"`
	PaymentStatus  string `protobuf:"bytes,16,opt,name=payment_status,json=paymentStatus,proto3" json:"payment_status,omitempty"`
	FailReason     string `protobuf:"bytes,17,opt,name=fail_reason,json=failReason,proto3" json:"fail_reason,omitempty"`
}

func (x *UnitSchedulePaymentResponse) Reset() {
	*x = UnitSchedulePaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_subscribe_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitSchedulePaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitSchedulePaymentResponse) ProtoMessage() {}

func (x *UnitSchedulePaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_subscribe_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitSchedulePaymentResponse.ProtoReflect.Descriptor instead.
func (*UnitSchedulePaymentResponse) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_subscribe_proto_rawDescGZIP(), []int{5}
}

func (x *UnitSchedulePaymentResponse) GetCustomerUid() string {
	if x != nil {
		return x.CustomerUid
	}
	return ""
}

func (x *UnitSchedulePaymentResponse) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *UnitSchedulePaymentResponse) GetImpUid() string {
	if x != nil {
		return x.ImpUid
	}
	return ""
}

func (x *UnitSchedulePaymentResponse) GetScheduleAt() int32 {
	if x != nil {
		return x.ScheduleAt
	}
	return 0
}

func (x *UnitSchedulePaymentResponse) GetExecutedAt() int32 {
	if x != nil {
		return x.ExecutedAt
	}
	return 0
}

func (x *UnitSchedulePaymentResponse) GetRevokedAt() int32 {
	if x != nil {
		return x.RevokedAt
	}
	return 0
}

func (x *UnitSchedulePaymentResponse) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UnitSchedulePaymentResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnitSchedulePaymentResponse) GetBuyerName() string {
	if x != nil {
		return x.BuyerName
	}
	return ""
}

func (x *UnitSchedulePaymentResponse) GetBuyerEmail() string {
	if x != nil {
		return x.BuyerEmail
	}
	return ""
}

func (x *UnitSchedulePaymentResponse) GetBuyerTel() string {
	if x != nil {
		return x.BuyerTel
	}
	return ""
}

func (x *UnitSchedulePaymentResponse) GetBuyerAddr() string {
	if x != nil {
		return x.BuyerAddr
	}
	return ""
}

func (x *UnitSchedulePaymentResponse) GetBuyerPostcode() string {
	if x != nil {
		return x.BuyerPostcode
	}
	return ""
}

func (x *UnitSchedulePaymentResponse) GetCustomData() string {
	if x != nil {
		return x.CustomData
	}
	return ""
}

func (x *UnitSchedulePaymentResponse) GetScheduleStatus() string {
	if x != nil {
		return x.ScheduleStatus
	}
	return ""
}

func (x *UnitSchedulePaymentResponse) GetPaymentStatus() string {
	if x != nil {
		return x.PaymentStatus
	}
	return ""
}

func (x *UnitSchedulePaymentResponse) GetFailReason() string {
	if x != nil {
		return x.FailReason
	}
	return ""
}

type SchedulePayemntRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerUid    string                  `protobuf:"bytes,1,opt,name=customer_uid,json=customerUid,proto3" json:"customer_uid,omitempty"`
	CheckingAmount int32                   `protobuf:"varint,2,opt,name=checking_amount,json=checkingAmount,proto3" json:"checking_amount,omitempty"`
	CardNumber     string                  `protobuf:"bytes,3,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	Expiry         string                  `protobuf:"bytes,4,opt,name=expiry,proto3" json:"expiry,omitempty"`
	Birth          string                  `protobuf:"bytes,5,opt,name=birth,proto3" json:"birth,omitempty"`
	Pwd_2Digit     string                  `protobuf:"bytes,6,opt,name=pwd_2digit,json=pwd2digit,proto3" json:"pwd_2digit,omitempty"`
	Pg             string                  `protobuf:"bytes,7,opt,name=pg,proto3" json:"pg,omitempty"`
	Schedules      []*PaymentScheduleParam `protobuf:"bytes,8,rep,name=schedules,proto3" json:"schedules,omitempty"`
}

func (x *SchedulePayemntRequest) Reset() {
	*x = SchedulePayemntRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_subscribe_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulePayemntRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulePayemntRequest) ProtoMessage() {}

func (x *SchedulePayemntRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_subscribe_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulePayemntRequest.ProtoReflect.Descriptor instead.
func (*SchedulePayemntRequest) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_subscribe_proto_rawDescGZIP(), []int{6}
}

func (x *SchedulePayemntRequest) GetCustomerUid() string {
	if x != nil {
		return x.CustomerUid
	}
	return ""
}

func (x *SchedulePayemntRequest) GetCheckingAmount() int32 {
	if x != nil {
		return x.CheckingAmount
	}
	return 0
}

func (x *SchedulePayemntRequest) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *SchedulePayemntRequest) GetExpiry() string {
	if x != nil {
		return x.Expiry
	}
	return ""
}

func (x *SchedulePayemntRequest) GetBirth() string {
	if x != nil {
		return x.Birth
	}
	return ""
}

func (x *SchedulePayemntRequest) GetPwd_2Digit() string {
	if x != nil {
		return x.Pwd_2Digit
	}
	return ""
}

func (x *SchedulePayemntRequest) GetPg() string {
	if x != nil {
		return x.Pg
	}
	return ""
}

func (x *SchedulePayemntRequest) GetSchedules() []*PaymentScheduleParam {
	if x != nil {
		return x.Schedules
	}
	return nil
}

type SchedulePaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response []*UnitSchedulePaymentResponse `protobuf:"bytes,3,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *SchedulePaymentResponse) Reset() {
	*x = SchedulePaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_subscribe_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulePaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulePaymentResponse) ProtoMessage() {}

func (x *SchedulePaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_subscribe_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulePaymentResponse.ProtoReflect.Descriptor instead.
func (*SchedulePaymentResponse) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_subscribe_proto_rawDescGZIP(), []int{7}
}

func (x *SchedulePaymentResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SchedulePaymentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SchedulePaymentResponse) GetResponse() []*UnitSchedulePaymentResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type UnschedulePaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerUid string   `protobuf:"bytes,1,opt,name=customer_uid,json=customerUid,proto3" json:"customer_uid,omitempty"`
	MerchantUid []string `protobuf:"bytes,2,rep,name=merchant_uid,json=merchantUid,proto3" json:"merchant_uid,omitempty"`
}

func (x *UnschedulePaymentRequest) Reset() {
	*x = UnschedulePaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_subscribe_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnschedulePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnschedulePaymentRequest) ProtoMessage() {}

func (x *UnschedulePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_subscribe_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnschedulePaymentRequest.ProtoReflect.Descriptor instead.
func (*UnschedulePaymentRequest) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_subscribe_proto_rawDescGZIP(), []int{8}
}

func (x *UnschedulePaymentRequest) GetCustomerUid() string {
	if x != nil {
		return x.CustomerUid
	}
	return ""
}

func (x *UnschedulePaymentRequest) GetMerchantUid() []string {
	if x != nil {
		return x.MerchantUid
	}
	return nil
}

type UnschedulePaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response []*UnitSchedulePaymentResponse `protobuf:"bytes,3,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *UnschedulePaymentResponse) Reset() {
	*x = UnschedulePaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_subscribe_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnschedulePaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnschedulePaymentResponse) ProtoMessage() {}

func (x *UnschedulePaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_subscribe_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnschedulePaymentResponse.ProtoReflect.Descriptor instead.
func (*UnschedulePaymentResponse) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_subscribe_proto_rawDescGZIP(), []int{9}
}

func (x *UnschedulePaymentResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UnschedulePaymentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UnschedulePaymentResponse) GetResponse() []*UnitSchedulePaymentResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetPaymentScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantUid string `protobuf:"bytes,1,opt,name=merchant_uid,json=merchantUid,proto3" json:"merchant_uid,omitempty"`
}

func (x *GetPaymentScheduleRequest) Reset() {
	*x = GetPaymentScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_subscribe_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentScheduleRequest) ProtoMessage() {}

func (x *GetPaymentScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_subscribe_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentScheduleRequest) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_subscribe_proto_rawDescGZIP(), []int{10}
}

func (x *GetPaymentScheduleRequest) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

type GetPaymentScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *UnitSchedulePaymentResponse `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetPaymentScheduleResponse) Reset() {
	*x = GetPaymentScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_subscribe_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentScheduleResponse) ProtoMessage() {}

func (x *GetPaymentScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_subscribe_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentScheduleResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentScheduleResponse) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_subscribe_proto_rawDescGZIP(), []int{11}
}

func (x *GetPaymentScheduleResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPaymentScheduleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPaymentScheduleResponse) GetResponse() *UnitSchedulePaymentResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetPaymentScheduleByCustomerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerUid    string `protobuf:"bytes,1,opt,name=customer_uid,json=customerUid,proto3" json:"customer_uid,omitempty"`
	Page           int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	From           int32  `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
	To             int32  `protobuf:"varint,4,opt,name=to,proto3" json:"to,omitempty"`
	ScheduleStatus string `protobuf:"bytes,5,opt,name=schedule_status,json=scheduleStatus,proto3" json:"schedule_status,omitempty"`
}

func (x *GetPaymentScheduleByCustomerRequest) Reset() {
	*x = GetPaymentScheduleByCustomerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_subscribe_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentScheduleByCustomerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentScheduleByCustomerRequest) ProtoMessage() {}

func (x *GetPaymentScheduleByCustomerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_subscribe_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentScheduleByCustomerRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentScheduleByCustomerRequest) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_subscribe_proto_rawDescGZIP(), []int{12}
}

func (x *GetPaymentScheduleByCustomerRequest) GetCustomerUid() string {
	if x != nil {
		return x.CustomerUid
	}
	return ""
}

func (x *GetPaymentScheduleByCustomerRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPaymentScheduleByCustomerRequest) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *GetPaymentScheduleByCustomerRequest) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *GetPaymentScheduleByCustomerRequest) GetScheduleStatus() string {
	if x != nil {
		return x.ScheduleStatus
	}
	return ""
}

type NestedGetPaymentScheduleByCustomerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int32                          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Previous int32                          `protobuf:"varint,2,opt,name=previous,proto3" json:"previous,omitempty"`
	Next     int32                          `protobuf:"varint,3,opt,name=next,proto3" json:"next,omitempty"`
	List     []*UnitSchedulePaymentResponse `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *NestedGetPaymentScheduleByCustomerData) Reset() {
	*x = NestedGetPaymentScheduleByCustomerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_subscribe_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedGetPaymentScheduleByCustomerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedGetPaymentScheduleByCustomerData) ProtoMessage() {}

func (x *NestedGetPaymentScheduleByCustomerData) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_subscribe_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedGetPaymentScheduleByCustomerData.ProtoReflect.Descriptor instead.
func (*NestedGetPaymentScheduleByCustomerData) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_subscribe_proto_rawDescGZIP(), []int{13}
}

func (x *NestedGetPaymentScheduleByCustomerData) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *NestedGetPaymentScheduleByCustomerData) GetPrevious() int32 {
	if x != nil {
		return x.Previous
	}
	return 0
}

func (x *NestedGetPaymentScheduleByCustomerData) GetNext() int32 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *NestedGetPaymentScheduleByCustomerData) GetList() []*UnitSchedulePaymentResponse {
	if x != nil {
		return x.List
	}
	return nil
}

type GetPaymentScheduleByCustomerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32                                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string                                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *NestedGetPaymentScheduleByCustomerData `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetPaymentScheduleByCustomerResponse) Reset() {
	*x = GetPaymentScheduleByCustomerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_subscribe_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentScheduleByCustomerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentScheduleByCustomerResponse) ProtoMessage() {}

func (x *GetPaymentScheduleByCustomerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_subscribe_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentScheduleByCustomerResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentScheduleByCustomerResponse) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_subscribe_proto_rawDescGZIP(), []int{14}
}

func (x *GetPaymentScheduleByCustomerResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPaymentScheduleByCustomerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPaymentScheduleByCustomerResponse) GetResponse() *NestedGetPaymentScheduleByCustomerData {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_v1_subscribe_subscribe_proto protoreflect.FileDescriptor

var file_v1_subscribe_subscribe_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xdf, 0x04, 0x0a, 0x15, 0x4f, 0x6e, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x78, 0x5f, 0x66, 0x72,
	0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x78, 0x46, 0x72, 0x65,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x77, 0x64, 0x5f, 0x32, 0x64, 0x69, 0x67, 0x69, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x77, 0x64, 0x32, 0x64, 0x69, 0x67, 0x69, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x55,
	0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x70, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f,
	0x74, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x79, 0x65, 0x72,
	0x54, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x50, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63,
	0x61, 0x72, 0x64, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x19, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x62, 0x79, 0x5f, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x46, 0x72, 0x65, 0x65, 0x42, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x55, 0x72, 0x6c, 0x22, 0x74, 0x0a, 0x16, 0x4f, 0x6e, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdf, 0x03, 0x0a, 0x13, 0x41, 0x67,
	0x61, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x61, 0x78, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x74, 0x61, 0x78, 0x46, 0x72, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x75, 0x79, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75,
	0x79, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x12, 0x39, 0x0a, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x66, 0x72, 0x65,
	0x65, 0x5f, 0x62, 0x79, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x46, 0x72, 0x65,
	0x65, 0x42, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x72, 0x0a, 0x14, 0x41,
	0x67, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xc4, 0x02, 0x0a, 0x14, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x78, 0x5f, 0x66, 0x72, 0x65, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x78, 0x46, 0x72, 0x65, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x79, 0x65, 0x72, 0x54, 0x65, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x25, 0x0a, 0x0e, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x50, 0x6f,
	0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xbe, 0x04, 0x0a, 0x1b, 0x55, 0x6e, 0x69, 0x74, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x6d, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x6d, 0x70, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6c, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x79, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x25,
	0x0a, 0x0e, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x73,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xa1, 0x02, 0x0a, 0x16, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x65, 0x6d, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x72, 0x74, 0x68, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x77, 0x64, 0x5f, 0x32, 0x64, 0x69, 0x67, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x77, 0x64, 0x32, 0x64, 0x69, 0x67, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x70, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x67, 0x12, 0x3d, 0x0a, 0x09,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x17,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x60, 0x0a, 0x18, 0x55, 0x6e, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x19,
	0x55, 0x6e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa9, 0x01, 0x0a,
	0x23, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x42, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x26, 0x4e, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x42, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xeb, 0x07, 0x0a, 0x10,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x90, 0x01, 0x0a, 0x11, 0x4f, 0x6e, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x50, 0x43, 0x12, 0x20, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x2e, 0x4f, 0x6e, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x2e, 0x4f, 0x6e, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x30, 0x22, 0x2b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x3a, 0x01, 0x2a, 0x12, 0x88, 0x01, 0x0a, 0x0f, 0x41, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x50, 0x43, 0x12, 0x1e, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x2e, 0x41, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x2e, 0x41, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e,
	0x22, 0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x61, 0x67, 0x61, 0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x94,
	0x01, 0x0a, 0x12, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x50, 0x43, 0x12, 0x21, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x65, 0x6d, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x31, 0x22, 0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x9c, 0x01, 0x0a, 0x14, 0x55, 0x6e, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x50, 0x43, 0x12, 0x23,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x55, 0x6e, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e,
	0x55, 0x6e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x33, 0x22, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x75, 0x6e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x3a, 0x01, 0x2a, 0x12, 0xaa, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x50, 0x43, 0x12,
	0x24, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x3d, 0x12, 0x3b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x2f, 0x7b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64,
	0x7d, 0x12, 0xd5, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x55, 0x69, 0x64, 0x52, 0x50, 0x43, 0x12, 0x2e, 0x2e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x47, 0x12, 0x45, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x7d, 0x42, 0x45, 0x5a, 0x34, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x5f, 0x73, 0x72,
	0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0xaa, 0x02, 0x0c, 0x56, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_subscribe_subscribe_proto_rawDescOnce sync.Once
	file_v1_subscribe_subscribe_proto_rawDescData = file_v1_subscribe_subscribe_proto_rawDesc
)

func file_v1_subscribe_subscribe_proto_rawDescGZIP() []byte {
	file_v1_subscribe_subscribe_proto_rawDescOnce.Do(func() {
		file_v1_subscribe_subscribe_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_subscribe_subscribe_proto_rawDescData)
	})
	return file_v1_subscribe_subscribe_proto_rawDescData
}

var file_v1_subscribe_subscribe_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_v1_subscribe_subscribe_proto_goTypes = []interface{}{
	(*OnetimePaymentRequest)(nil),                  // 0: subscribe.OnetimePaymentRequest
	(*OnetimePaymentResponse)(nil),                 // 1: subscribe.OnetimePaymentResponse
	(*AgainPaymentRequest)(nil),                    // 2: subscribe.AgainPaymentRequest
	(*AgainPaymentResponse)(nil),                   // 3: subscribe.AgainPaymentResponse
	(*PaymentScheduleParam)(nil),                   // 4: subscribe.PaymentScheduleParam
	(*UnitSchedulePaymentResponse)(nil),            // 5: subscribe.UnitSchedulePaymentResponse
	(*SchedulePayemntRequest)(nil),                 // 6: subscribe.SchedulePayemntRequest
	(*SchedulePaymentResponse)(nil),                // 7: subscribe.SchedulePaymentResponse
	(*UnschedulePaymentRequest)(nil),               // 8: subscribe.UnschedulePaymentRequest
	(*UnschedulePaymentResponse)(nil),              // 9: subscribe.UnschedulePaymentResponse
	(*GetPaymentScheduleRequest)(nil),              // 10: subscribe.GetPaymentScheduleRequest
	(*GetPaymentScheduleResponse)(nil),             // 11: subscribe.GetPaymentScheduleResponse
	(*GetPaymentScheduleByCustomerRequest)(nil),    // 12: subscribe.GetPaymentScheduleByCustomerRequest
	(*NestedGetPaymentScheduleByCustomerData)(nil), // 13: subscribe.NestedGetPaymentScheduleByCustomerData
	(*GetPaymentScheduleByCustomerResponse)(nil),   // 14: subscribe.GetPaymentScheduleByCustomerResponse
	(*payment.Payment)(nil),                        // 15: payment.Payment
}
var file_v1_subscribe_subscribe_proto_depIdxs = []int32{
	15, // 0: subscribe.OnetimePaymentResponse.response:type_name -> payment.Payment
	15, // 1: subscribe.AgainPaymentResponse.response:type_name -> payment.Payment
	4,  // 2: subscribe.SchedulePayemntRequest.schedules:type_name -> subscribe.PaymentScheduleParam
	5,  // 3: subscribe.SchedulePaymentResponse.response:type_name -> subscribe.UnitSchedulePaymentResponse
	5,  // 4: subscribe.UnschedulePaymentResponse.response:type_name -> subscribe.UnitSchedulePaymentResponse
	5,  // 5: subscribe.GetPaymentScheduleResponse.response:type_name -> subscribe.UnitSchedulePaymentResponse
	5,  // 6: subscribe.NestedGetPaymentScheduleByCustomerData.list:type_name -> subscribe.UnitSchedulePaymentResponse
	13, // 7: subscribe.GetPaymentScheduleByCustomerResponse.response:type_name -> subscribe.NestedGetPaymentScheduleByCustomerData
	0,  // 8: subscribe.SubscribeService.OnetimePaymentRPC:input_type -> subscribe.OnetimePaymentRequest
	2,  // 9: subscribe.SubscribeService.AgainPaymentRPC:input_type -> subscribe.AgainPaymentRequest
	6,  // 10: subscribe.SubscribeService.SchedulePaymentRPC:input_type -> subscribe.SchedulePayemntRequest
	8,  // 11: subscribe.SubscribeService.UnschedulePaymentRPC:input_type -> subscribe.UnschedulePaymentRequest
	10, // 12: subscribe.SubscribeService.GetScheduledPaymentRPC:input_type -> subscribe.GetPaymentScheduleRequest
	12, // 13: subscribe.SubscribeService.GetScheduledPaymentByCustomerUidRPC:input_type -> subscribe.GetPaymentScheduleByCustomerRequest
	1,  // 14: subscribe.SubscribeService.OnetimePaymentRPC:output_type -> subscribe.OnetimePaymentResponse
	3,  // 15: subscribe.SubscribeService.AgainPaymentRPC:output_type -> subscribe.AgainPaymentResponse
	7,  // 16: subscribe.SubscribeService.SchedulePaymentRPC:output_type -> subscribe.SchedulePaymentResponse
	9,  // 17: subscribe.SubscribeService.UnschedulePaymentRPC:output_type -> subscribe.UnschedulePaymentResponse
	11, // 18: subscribe.SubscribeService.GetScheduledPaymentRPC:output_type -> subscribe.GetPaymentScheduleResponse
	14, // 19: subscribe.SubscribeService.GetScheduledPaymentByCustomerUidRPC:output_type -> subscribe.GetPaymentScheduleByCustomerResponse
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_v1_subscribe_subscribe_proto_init() }
func file_v1_subscribe_subscribe_proto_init() {
	if File_v1_subscribe_subscribe_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_subscribe_subscribe_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnetimePaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_subscribe_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnetimePaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_subscribe_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgainPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_subscribe_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgainPaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_subscribe_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentScheduleParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_subscribe_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitSchedulePaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_subscribe_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulePayemntRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_subscribe_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulePaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_subscribe_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnschedulePaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_subscribe_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnschedulePaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_subscribe_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_subscribe_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_subscribe_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentScheduleByCustomerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_subscribe_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedGetPaymentScheduleByCustomerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_subscribe_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentScheduleByCustomerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_subscribe_subscribe_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_subscribe_subscribe_proto_goTypes,
		DependencyIndexes: file_v1_subscribe_subscribe_proto_depIdxs,
		MessageInfos:      file_v1_subscribe_subscribe_proto_msgTypes,
	}.Build()
	File_v1_subscribe_subscribe_proto = out.File
	file_v1_subscribe_subscribe_proto_rawDesc = nil
	file_v1_subscribe_subscribe_proto_goTypes = nil
	file_v1_subscribe_subscribe_proto_depIdxs = nil
}
