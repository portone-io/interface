// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: v1/subscribe_customers/subscribe_customers.proto

package subscribe_customers

import (
	payment "github.com/iamport/interface/gen_src/go/v1/payment"
	subscribe "github.com/iamport/interface/gen_src/go/v1/subscribe"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CustomerBillingKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardCode         string `protobuf:"bytes,1,opt,name=card_code,json=cardCode,proto3" json:"card_code,omitempty"`
	CardName         string `protobuf:"bytes,2,opt,name=card_name,json=cardName,proto3" json:"card_name,omitempty"`
	CardNumber       string `protobuf:"bytes,3,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	CardType         int32  `protobuf:"varint,4,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	CustomerAddr     string `protobuf:"bytes,5,opt,name=customer_addr,json=customerAddr,proto3" json:"customer_addr,omitempty"`
	CustomerEmail    string `protobuf:"bytes,6,opt,name=customer_email,json=customerEmail,proto3" json:"customer_email,omitempty"`
	CustomerName     string `protobuf:"bytes,7,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	CustomerPostcode string `protobuf:"bytes,8,opt,name=customer_postcode,json=customerPostcode,proto3" json:"customer_postcode,omitempty"`
	CustomerTel      string `protobuf:"bytes,9,opt,name=customer_tel,json=customerTel,proto3" json:"customer_tel,omitempty"`
	CustomerUid      string `protobuf:"bytes,10,opt,name=customer_uid,json=customerUid,proto3" json:"customer_uid,omitempty"`
	Inserted         int32  `protobuf:"varint,11,opt,name=inserted,proto3" json:"inserted,omitempty"`
	PgId             string `protobuf:"bytes,12,opt,name=pg_id,json=pgId,proto3" json:"pg_id,omitempty"`
	PgProvider       string `protobuf:"bytes,13,opt,name=pg_provider,json=pgProvider,proto3" json:"pg_provider,omitempty"`
	Updated          int32  `protobuf:"varint,14,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *CustomerBillingKey) Reset() {
	*x = CustomerBillingKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerBillingKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerBillingKey) ProtoMessage() {}

func (x *CustomerBillingKey) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerBillingKey.ProtoReflect.Descriptor instead.
func (*CustomerBillingKey) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_customers_subscribe_customers_proto_rawDescGZIP(), []int{0}
}

func (x *CustomerBillingKey) GetCardCode() string {
	if x != nil {
		return x.CardCode
	}
	return ""
}

func (x *CustomerBillingKey) GetCardName() string {
	if x != nil {
		return x.CardName
	}
	return ""
}

func (x *CustomerBillingKey) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *CustomerBillingKey) GetCardType() int32 {
	if x != nil {
		return x.CardType
	}
	return 0
}

func (x *CustomerBillingKey) GetCustomerAddr() string {
	if x != nil {
		return x.CustomerAddr
	}
	return ""
}

func (x *CustomerBillingKey) GetCustomerEmail() string {
	if x != nil {
		return x.CustomerEmail
	}
	return ""
}

func (x *CustomerBillingKey) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *CustomerBillingKey) GetCustomerPostcode() string {
	if x != nil {
		return x.CustomerPostcode
	}
	return ""
}

func (x *CustomerBillingKey) GetCustomerTel() string {
	if x != nil {
		return x.CustomerTel
	}
	return ""
}

func (x *CustomerBillingKey) GetCustomerUid() string {
	if x != nil {
		return x.CustomerUid
	}
	return ""
}

func (x *CustomerBillingKey) GetInserted() int32 {
	if x != nil {
		return x.Inserted
	}
	return 0
}

func (x *CustomerBillingKey) GetPgId() string {
	if x != nil {
		return x.PgId
	}
	return ""
}

func (x *CustomerBillingKey) GetPgProvider() string {
	if x != nil {
		return x.PgProvider
	}
	return ""
}

func (x *CustomerBillingKey) GetUpdated() int32 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type GetMultipleCustomerBillingKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerUid []string `protobuf:"bytes,1,rep,name=customer_uid,json=customerUid,proto3" json:"customer_uid,omitempty"`
}

func (x *GetMultipleCustomerBillingKeyRequest) Reset() {
	*x = GetMultipleCustomerBillingKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultipleCustomerBillingKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultipleCustomerBillingKeyRequest) ProtoMessage() {}

func (x *GetMultipleCustomerBillingKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultipleCustomerBillingKeyRequest.ProtoReflect.Descriptor instead.
func (*GetMultipleCustomerBillingKeyRequest) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_customers_subscribe_customers_proto_rawDescGZIP(), []int{1}
}

func (x *GetMultipleCustomerBillingKeyRequest) GetCustomerUid() []string {
	if x != nil {
		return x.CustomerUid
	}
	return nil
}

type GetMultipleCustomerBillingKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string                `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response []*CustomerBillingKey `protobuf:"bytes,3,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *GetMultipleCustomerBillingKeyResponse) Reset() {
	*x = GetMultipleCustomerBillingKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultipleCustomerBillingKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultipleCustomerBillingKeyResponse) ProtoMessage() {}

func (x *GetMultipleCustomerBillingKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultipleCustomerBillingKeyResponse.ProtoReflect.Descriptor instead.
func (*GetMultipleCustomerBillingKeyResponse) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_customers_subscribe_customers_proto_rawDescGZIP(), []int{2}
}

func (x *GetMultipleCustomerBillingKeyResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMultipleCustomerBillingKeyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetMultipleCustomerBillingKeyResponse) GetResponse() []*CustomerBillingKey {
	if x != nil {
		return x.Response
	}
	return nil
}

type DeleteCustomerBillingKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerUid string `protobuf:"bytes,1,opt,name=customer_uid,json=customerUid,proto3" json:"customer_uid,omitempty"`
	Reason      string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Requester   string `protobuf:"bytes,3,opt,name=requester,proto3" json:"requester,omitempty"`
}

func (x *DeleteCustomerBillingKeyRequest) Reset() {
	*x = DeleteCustomerBillingKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCustomerBillingKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCustomerBillingKeyRequest) ProtoMessage() {}

func (x *DeleteCustomerBillingKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCustomerBillingKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteCustomerBillingKeyRequest) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_customers_subscribe_customers_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteCustomerBillingKeyRequest) GetCustomerUid() string {
	if x != nil {
		return x.CustomerUid
	}
	return ""
}

func (x *DeleteCustomerBillingKeyRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *DeleteCustomerBillingKeyRequest) GetRequester() string {
	if x != nil {
		return x.Requester
	}
	return ""
}

type DeleteCustomerBillingKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *CustomerBillingKey `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *DeleteCustomerBillingKeyResponse) Reset() {
	*x = DeleteCustomerBillingKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCustomerBillingKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCustomerBillingKeyResponse) ProtoMessage() {}

func (x *DeleteCustomerBillingKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCustomerBillingKeyResponse.ProtoReflect.Descriptor instead.
func (*DeleteCustomerBillingKeyResponse) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_customers_subscribe_customers_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteCustomerBillingKeyResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteCustomerBillingKeyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteCustomerBillingKeyResponse) GetResponse() *CustomerBillingKey {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetCustomerBillingKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerUid string `protobuf:"bytes,1,opt,name=customer_uid,json=customerUid,proto3" json:"customer_uid,omitempty"`
}

func (x *GetCustomerBillingKeyRequest) Reset() {
	*x = GetCustomerBillingKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerBillingKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerBillingKeyRequest) ProtoMessage() {}

func (x *GetCustomerBillingKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerBillingKeyRequest.ProtoReflect.Descriptor instead.
func (*GetCustomerBillingKeyRequest) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_customers_subscribe_customers_proto_rawDescGZIP(), []int{5}
}

func (x *GetCustomerBillingKeyRequest) GetCustomerUid() string {
	if x != nil {
		return x.CustomerUid
	}
	return ""
}

type GetCustomerBillingKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *CustomerBillingKey `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetCustomerBillingKeyResponse) Reset() {
	*x = GetCustomerBillingKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerBillingKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerBillingKeyResponse) ProtoMessage() {}

func (x *GetCustomerBillingKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerBillingKeyResponse.ProtoReflect.Descriptor instead.
func (*GetCustomerBillingKeyResponse) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_customers_subscribe_customers_proto_rawDescGZIP(), []int{6}
}

func (x *GetCustomerBillingKeyResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCustomerBillingKeyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCustomerBillingKeyResponse) GetResponse() *CustomerBillingKey {
	if x != nil {
		return x.Response
	}
	return nil
}

type InsertCustomerBillingKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerUid      string `protobuf:"bytes,1,opt,name=customer_uid,json=customerUid,proto3" json:"customer_uid,omitempty"`
	Pg               string `protobuf:"bytes,2,opt,name=pg,proto3" json:"pg,omitempty"`
	CardNumber       string `protobuf:"bytes,3,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	Expiry           string `protobuf:"bytes,4,opt,name=expiry,proto3" json:"expiry,omitempty"`
	Birth            string `protobuf:"bytes,5,opt,name=birth,proto3" json:"birth,omitempty"`
	Pwd_2Digit       string `protobuf:"bytes,6,opt,name=pwd_2digit,json=pwd2digit,proto3" json:"pwd_2digit,omitempty"`
	CustomerName     string `protobuf:"bytes,7,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	CustomerTel      string `protobuf:"bytes,8,opt,name=customer_tel,json=customerTel,proto3" json:"customer_tel,omitempty"`
	CustomerEmail    string `protobuf:"bytes,9,opt,name=customer_email,json=customerEmail,proto3" json:"customer_email,omitempty"`
	CustomerAddr     string `protobuf:"bytes,10,opt,name=customer_addr,json=customerAddr,proto3" json:"customer_addr,omitempty"`
	CustomerPostcode string `protobuf:"bytes,11,opt,name=customer_postcode,json=customerPostcode,proto3" json:"customer_postcode,omitempty"`
}

func (x *InsertCustomerBillingKeyRequest) Reset() {
	*x = InsertCustomerBillingKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertCustomerBillingKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertCustomerBillingKeyRequest) ProtoMessage() {}

func (x *InsertCustomerBillingKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertCustomerBillingKeyRequest.ProtoReflect.Descriptor instead.
func (*InsertCustomerBillingKeyRequest) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_customers_subscribe_customers_proto_rawDescGZIP(), []int{7}
}

func (x *InsertCustomerBillingKeyRequest) GetCustomerUid() string {
	if x != nil {
		return x.CustomerUid
	}
	return ""
}

func (x *InsertCustomerBillingKeyRequest) GetPg() string {
	if x != nil {
		return x.Pg
	}
	return ""
}

func (x *InsertCustomerBillingKeyRequest) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *InsertCustomerBillingKeyRequest) GetExpiry() string {
	if x != nil {
		return x.Expiry
	}
	return ""
}

func (x *InsertCustomerBillingKeyRequest) GetBirth() string {
	if x != nil {
		return x.Birth
	}
	return ""
}

func (x *InsertCustomerBillingKeyRequest) GetPwd_2Digit() string {
	if x != nil {
		return x.Pwd_2Digit
	}
	return ""
}

func (x *InsertCustomerBillingKeyRequest) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *InsertCustomerBillingKeyRequest) GetCustomerTel() string {
	if x != nil {
		return x.CustomerTel
	}
	return ""
}

func (x *InsertCustomerBillingKeyRequest) GetCustomerEmail() string {
	if x != nil {
		return x.CustomerEmail
	}
	return ""
}

func (x *InsertCustomerBillingKeyRequest) GetCustomerAddr() string {
	if x != nil {
		return x.CustomerAddr
	}
	return ""
}

func (x *InsertCustomerBillingKeyRequest) GetCustomerPostcode() string {
	if x != nil {
		return x.CustomerPostcode
	}
	return ""
}

type InsertCustomerBillingKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *CustomerBillingKey `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *InsertCustomerBillingKeyResponse) Reset() {
	*x = InsertCustomerBillingKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertCustomerBillingKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertCustomerBillingKeyResponse) ProtoMessage() {}

func (x *InsertCustomerBillingKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertCustomerBillingKeyResponse.ProtoReflect.Descriptor instead.
func (*InsertCustomerBillingKeyResponse) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_customers_subscribe_customers_proto_rawDescGZIP(), []int{8}
}

func (x *InsertCustomerBillingKeyResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InsertCustomerBillingKeyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InsertCustomerBillingKeyResponse) GetResponse() *CustomerBillingKey {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetPaidByBillingKeyListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerUid string `protobuf:"bytes,1,opt,name=customer_uid,json=customerUid,proto3" json:"customer_uid,omitempty"`
	Page        int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetPaidByBillingKeyListRequest) Reset() {
	*x = GetPaidByBillingKeyListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaidByBillingKeyListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaidByBillingKeyListRequest) ProtoMessage() {}

func (x *GetPaidByBillingKeyListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaidByBillingKeyListRequest.ProtoReflect.Descriptor instead.
func (*GetPaidByBillingKeyListRequest) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_customers_subscribe_customers_proto_rawDescGZIP(), []int{9}
}

func (x *GetPaidByBillingKeyListRequest) GetCustomerUid() string {
	if x != nil {
		return x.CustomerUid
	}
	return ""
}

func (x *GetPaidByBillingKeyListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type NestedGetPaidByBillingKeyListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int32              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Previous int32              `protobuf:"varint,2,opt,name=previous,proto3" json:"previous,omitempty"`
	Next     int32              `protobuf:"varint,3,opt,name=next,proto3" json:"next,omitempty"`
	List     []*payment.Payment `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *NestedGetPaidByBillingKeyListData) Reset() {
	*x = NestedGetPaidByBillingKeyListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedGetPaidByBillingKeyListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedGetPaidByBillingKeyListData) ProtoMessage() {}

func (x *NestedGetPaidByBillingKeyListData) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedGetPaidByBillingKeyListData.ProtoReflect.Descriptor instead.
func (*NestedGetPaidByBillingKeyListData) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_customers_subscribe_customers_proto_rawDescGZIP(), []int{10}
}

func (x *NestedGetPaidByBillingKeyListData) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *NestedGetPaidByBillingKeyListData) GetPrevious() int32 {
	if x != nil {
		return x.Previous
	}
	return 0
}

func (x *NestedGetPaidByBillingKeyListData) GetNext() int32 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *NestedGetPaidByBillingKeyListData) GetList() []*payment.Payment {
	if x != nil {
		return x.List
	}
	return nil
}

type GetPaidByBillingKeyListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32                              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string                             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *NestedGetPaidByBillingKeyListData `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetPaidByBillingKeyListResponse) Reset() {
	*x = GetPaidByBillingKeyListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaidByBillingKeyListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaidByBillingKeyListResponse) ProtoMessage() {}

func (x *GetPaidByBillingKeyListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaidByBillingKeyListResponse.ProtoReflect.Descriptor instead.
func (*GetPaidByBillingKeyListResponse) Descriptor() ([]byte, []int) {
	return file_v1_subscribe_customers_subscribe_customers_proto_rawDescGZIP(), []int{11}
}

func (x *GetPaidByBillingKeyListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPaidByBillingKeyListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPaidByBillingKeyListResponse) GetResponse() *NestedGetPaidByBillingKeyListData {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_v1_subscribe_customers_subscribe_customers_proto protoreflect.FileDescriptor

var file_v1_subscribe_customers_subscribe_customers_proto_rawDesc = []byte{
	0x0a, 0x30, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x03,
	0x0a, 0x12, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a,
	0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x55, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x12, 0x13, 0x0a, 0x05,
	0x70, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x67, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x49, 0x0a, 0x24,
	0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x43, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7a, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x22, 0x95, 0x01, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x83, 0x03, 0x0a, 0x1f, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61,
	0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x62, 0x69, 0x72, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x77, 0x64, 0x5f, 0x32, 0x64,
	0x69, 0x67, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x77, 0x64, 0x32,
	0x64, 0x69, 0x67, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x6f,
	0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x20, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x4b, 0x65, 0x79, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x69, 0x64, 0x42, 0x79, 0x42, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x21, 0x4e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x47, 0x65, 0x74, 0x50, 0x61, 0x69, 0x64, 0x42, 0x79, 0x42, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6e,
	0x65, 0x78, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x1f, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x69, 0x64, 0x42, 0x79, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x52, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x73, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x47, 0x65, 0x74, 0x50, 0x61, 0x69,
	0x64, 0x42, 0x79, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0xd9, 0x09, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xc7, 0x01,
	0x0a, 0x20, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52,
	0x50, 0x43, 0x12, 0x39, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x26, 0x12, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x12, 0xc7, 0x01, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x4b, 0x65, 0x79, 0x52, 0x50, 0x43, 0x12, 0x34, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x2a, 0x33, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x73, 0x2f, 0x7b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64,
	0x7d, 0x12, 0xbe, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x50, 0x43, 0x12, 0x31,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x12, 0x33, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x75, 0x69,
	0x64, 0x7d, 0x12, 0xca, 0x01, 0x0a, 0x1b, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52,
	0x50, 0x43, 0x12, 0x34, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x22, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12,
	0xcd, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x69, 0x64, 0x42, 0x79, 0x42, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x50, 0x43, 0x12, 0x33,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x69, 0x64, 0x42, 0x79, 0x42, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x69,
	0x64, 0x42, 0x79, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x3e, 0x12, 0x3c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0xc9, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x52, 0x50, 0x43, 0x12, 0x2e, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x42, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x42, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3f, 0x12, 0x3d, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x73, 0x2f, 0x7b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64,
	0x7d, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x58, 0x5a, 0x3e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x61, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x5f,
	0x73, 0x72, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0xaa, 0x02, 0x15,
	0x56, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_subscribe_customers_subscribe_customers_proto_rawDescOnce sync.Once
	file_v1_subscribe_customers_subscribe_customers_proto_rawDescData = file_v1_subscribe_customers_subscribe_customers_proto_rawDesc
)

func file_v1_subscribe_customers_subscribe_customers_proto_rawDescGZIP() []byte {
	file_v1_subscribe_customers_subscribe_customers_proto_rawDescOnce.Do(func() {
		file_v1_subscribe_customers_subscribe_customers_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_subscribe_customers_subscribe_customers_proto_rawDescData)
	})
	return file_v1_subscribe_customers_subscribe_customers_proto_rawDescData
}

var file_v1_subscribe_customers_subscribe_customers_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_v1_subscribe_customers_subscribe_customers_proto_goTypes = []interface{}{
	(*CustomerBillingKey)(nil),                             // 0: subscribe_customers.CustomerBillingKey
	(*GetMultipleCustomerBillingKeyRequest)(nil),           // 1: subscribe_customers.GetMultipleCustomerBillingKeyRequest
	(*GetMultipleCustomerBillingKeyResponse)(nil),          // 2: subscribe_customers.GetMultipleCustomerBillingKeyResponse
	(*DeleteCustomerBillingKeyRequest)(nil),                // 3: subscribe_customers.DeleteCustomerBillingKeyRequest
	(*DeleteCustomerBillingKeyResponse)(nil),               // 4: subscribe_customers.DeleteCustomerBillingKeyResponse
	(*GetCustomerBillingKeyRequest)(nil),                   // 5: subscribe_customers.GetCustomerBillingKeyRequest
	(*GetCustomerBillingKeyResponse)(nil),                  // 6: subscribe_customers.GetCustomerBillingKeyResponse
	(*InsertCustomerBillingKeyRequest)(nil),                // 7: subscribe_customers.InsertCustomerBillingKeyRequest
	(*InsertCustomerBillingKeyResponse)(nil),               // 8: subscribe_customers.InsertCustomerBillingKeyResponse
	(*GetPaidByBillingKeyListRequest)(nil),                 // 9: subscribe_customers.GetPaidByBillingKeyListRequest
	(*NestedGetPaidByBillingKeyListData)(nil),              // 10: subscribe_customers.NestedGetPaidByBillingKeyListData
	(*GetPaidByBillingKeyListResponse)(nil),                // 11: subscribe_customers.GetPaidByBillingKeyListResponse
	(*payment.Payment)(nil),                                // 12: payment.Payment
	(*subscribe.GetPaymentScheduleByCustomerRequest)(nil),  // 13: subscribe.GetPaymentScheduleByCustomerRequest
	(*subscribe.GetPaymentScheduleByCustomerResponse)(nil), // 14: subscribe.GetPaymentScheduleByCustomerResponse
}
var file_v1_subscribe_customers_subscribe_customers_proto_depIdxs = []int32{
	0,  // 0: subscribe_customers.GetMultipleCustomerBillingKeyResponse.response:type_name -> subscribe_customers.CustomerBillingKey
	0,  // 1: subscribe_customers.DeleteCustomerBillingKeyResponse.response:type_name -> subscribe_customers.CustomerBillingKey
	0,  // 2: subscribe_customers.GetCustomerBillingKeyResponse.response:type_name -> subscribe_customers.CustomerBillingKey
	0,  // 3: subscribe_customers.InsertCustomerBillingKeyResponse.response:type_name -> subscribe_customers.CustomerBillingKey
	12, // 4: subscribe_customers.NestedGetPaidByBillingKeyListData.list:type_name -> payment.Payment
	10, // 5: subscribe_customers.GetPaidByBillingKeyListResponse.response:type_name -> subscribe_customers.NestedGetPaidByBillingKeyListData
	1,  // 6: subscribe_customers.SubscribeCustomersService.GetMultipleCustomerBillingKeyRPC:input_type -> subscribe_customers.GetMultipleCustomerBillingKeyRequest
	3,  // 7: subscribe_customers.SubscribeCustomersService.DeleteCustomerBillingKeyRPC:input_type -> subscribe_customers.DeleteCustomerBillingKeyRequest
	5,  // 8: subscribe_customers.SubscribeCustomersService.GetCustomerBillingKeyRPC:input_type -> subscribe_customers.GetCustomerBillingKeyRequest
	7,  // 9: subscribe_customers.SubscribeCustomersService.InsertCustomerBillingKeyRPC:input_type -> subscribe_customers.InsertCustomerBillingKeyRequest
	9,  // 10: subscribe_customers.SubscribeCustomersService.GetPaidByBillingKeyListRPC:input_type -> subscribe_customers.GetPaidByBillingKeyListRequest
	13, // 11: subscribe_customers.SubscribeCustomersService.GetPaymentScheduleByCustomerRPC:input_type -> subscribe.GetPaymentScheduleByCustomerRequest
	2,  // 12: subscribe_customers.SubscribeCustomersService.GetMultipleCustomerBillingKeyRPC:output_type -> subscribe_customers.GetMultipleCustomerBillingKeyResponse
	4,  // 13: subscribe_customers.SubscribeCustomersService.DeleteCustomerBillingKeyRPC:output_type -> subscribe_customers.DeleteCustomerBillingKeyResponse
	6,  // 14: subscribe_customers.SubscribeCustomersService.GetCustomerBillingKeyRPC:output_type -> subscribe_customers.GetCustomerBillingKeyResponse
	8,  // 15: subscribe_customers.SubscribeCustomersService.InsertCustomerBillingKeyRPC:output_type -> subscribe_customers.InsertCustomerBillingKeyResponse
	11, // 16: subscribe_customers.SubscribeCustomersService.GetPaidByBillingKeyListRPC:output_type -> subscribe_customers.GetPaidByBillingKeyListResponse
	14, // 17: subscribe_customers.SubscribeCustomersService.GetPaymentScheduleByCustomerRPC:output_type -> subscribe.GetPaymentScheduleByCustomerResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_v1_subscribe_customers_subscribe_customers_proto_init() }
func file_v1_subscribe_customers_subscribe_customers_proto_init() {
	if File_v1_subscribe_customers_subscribe_customers_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerBillingKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultipleCustomerBillingKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultipleCustomerBillingKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCustomerBillingKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCustomerBillingKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerBillingKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerBillingKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertCustomerBillingKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertCustomerBillingKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaidByBillingKeyListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedGetPaidByBillingKeyListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_subscribe_customers_subscribe_customers_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaidByBillingKeyListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_subscribe_customers_subscribe_customers_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_subscribe_customers_subscribe_customers_proto_goTypes,
		DependencyIndexes: file_v1_subscribe_customers_subscribe_customers_proto_depIdxs,
		MessageInfos:      file_v1_subscribe_customers_subscribe_customers_proto_msgTypes,
	}.Build()
	File_v1_subscribe_customers_subscribe_customers_proto = out.File
	file_v1_subscribe_customers_subscribe_customers_proto_rawDesc = nil
	file_v1_subscribe_customers_subscribe_customers_proto_goTypes = nil
	file_v1_subscribe_customers_subscribe_customers_proto_depIdxs = nil
}
