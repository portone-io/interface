// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.5
// source: v2/payments/card/card.proto

package card

import (
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CardRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardUid          string `protobuf:"bytes,1,opt,name=card_uid,json=cardUid,proto3" json:"card_uid,omitempty"` // a.k.a.) customer_uid
	CardNumber       string `protobuf:"bytes,2,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	Expiry           string `protobuf:"bytes,3,opt,name=expiry,proto3" json:"expiry,omitempty"`
	Birth            string `protobuf:"bytes,4,opt,name=birth,proto3" json:"birth,omitempty"`
	Pwd_2Digit       string `protobuf:"bytes,5,opt,name=pwd_2digit,json=pwd2digit,proto3" json:"pwd_2digit,omitempty"`
	CustomerName     string `protobuf:"bytes,6,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	CustomerTel      string `protobuf:"bytes,7,opt,name=customer_tel,json=customerTel,proto3" json:"customer_tel,omitempty"`
	CustomerEmail    string `protobuf:"bytes,8,opt,name=customer_email,json=customerEmail,proto3" json:"customer_email,omitempty"`
	CustomerAddr     string `protobuf:"bytes,9,opt,name=customer_addr,json=customerAddr,proto3" json:"customer_addr,omitempty"`
	CustomerPostcode string `protobuf:"bytes,10,opt,name=customer_postcode,json=customerPostcode,proto3" json:"customer_postcode,omitempty"`
	Pg               string `protobuf:"bytes,11,opt,name=pg,proto3" json:"pg,omitempty"`
}

func (x *CardRegisterRequest) Reset() {
	*x = CardRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_payments_card_card_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRegisterRequest) ProtoMessage() {}

func (x *CardRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v2_payments_card_card_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRegisterRequest.ProtoReflect.Descriptor instead.
func (*CardRegisterRequest) Descriptor() ([]byte, []int) {
	return file_v2_payments_card_card_proto_rawDescGZIP(), []int{0}
}

func (x *CardRegisterRequest) GetCardUid() string {
	if x != nil {
		return x.CardUid
	}
	return ""
}

func (x *CardRegisterRequest) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *CardRegisterRequest) GetExpiry() string {
	if x != nil {
		return x.Expiry
	}
	return ""
}

func (x *CardRegisterRequest) GetBirth() string {
	if x != nil {
		return x.Birth
	}
	return ""
}

func (x *CardRegisterRequest) GetPwd_2Digit() string {
	if x != nil {
		return x.Pwd_2Digit
	}
	return ""
}

func (x *CardRegisterRequest) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *CardRegisterRequest) GetCustomerTel() string {
	if x != nil {
		return x.CustomerTel
	}
	return ""
}

func (x *CardRegisterRequest) GetCustomerEmail() string {
	if x != nil {
		return x.CustomerEmail
	}
	return ""
}

func (x *CardRegisterRequest) GetCustomerAddr() string {
	if x != nil {
		return x.CustomerAddr
	}
	return ""
}

func (x *CardRegisterRequest) GetCustomerPostcode() string {
	if x != nil {
		return x.CustomerPostcode
	}
	return ""
}

func (x *CardRegisterRequest) GetPg() string {
	if x != nil {
		return x.Pg
	}
	return ""
}

type CardRegisterResultData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardUid          string `protobuf:"bytes,1,opt,name=card_uid,json=cardUid,proto3" json:"card_uid,omitempty"`
	CardName         string `protobuf:"bytes,2,opt,name=card_name,json=cardName,proto3" json:"card_name,omitempty"` // card alias of the user
	CardCode         string `protobuf:"bytes,3,opt,name=card_code,json=cardCode,proto3" json:"card_code,omitempty"`
	BinNumbrer       string `protobuf:"bytes,4,opt,name=bin_numbrer,json=binNumbrer,proto3" json:"bin_numbrer,omitempty"` // Only masked company can provide
	CardType         int32  `protobuf:"varint,5,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	CustomerName     string `protobuf:"bytes,6,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	CustomerTel      string `protobuf:"bytes,7,opt,name=customer_tel,json=customerTel,proto3" json:"customer_tel,omitempty"`
	CustomerEmail    string `protobuf:"bytes,8,opt,name=customer_email,json=customerEmail,proto3" json:"customer_email,omitempty"`
	CustomerAddr     string `protobuf:"bytes,9,opt,name=customer_addr,json=customerAddr,proto3" json:"customer_addr,omitempty"`
	CustomerPostcode string `protobuf:"bytes,10,opt,name=customer_postcode,json=customerPostcode,proto3" json:"customer_postcode,omitempty"`
	Inserted         int32  `protobuf:"varint,11,opt,name=inserted,proto3" json:"inserted,omitempty"`
	Updated          int32  `protobuf:"varint,12,opt,name=updated,proto3" json:"updated,omitempty"`
	PgProvider       string `protobuf:"bytes,13,opt,name=pg_provider,json=pgProvider,proto3" json:"pg_provider,omitempty"`
	PgId             string `protobuf:"bytes,14,opt,name=pg_id,json=pgId,proto3" json:"pg_id,omitempty"`
}

func (x *CardRegisterResultData) Reset() {
	*x = CardRegisterResultData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_payments_card_card_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRegisterResultData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRegisterResultData) ProtoMessage() {}

func (x *CardRegisterResultData) ProtoReflect() protoreflect.Message {
	mi := &file_v2_payments_card_card_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRegisterResultData.ProtoReflect.Descriptor instead.
func (*CardRegisterResultData) Descriptor() ([]byte, []int) {
	return file_v2_payments_card_card_proto_rawDescGZIP(), []int{1}
}

func (x *CardRegisterResultData) GetCardUid() string {
	if x != nil {
		return x.CardUid
	}
	return ""
}

func (x *CardRegisterResultData) GetCardName() string {
	if x != nil {
		return x.CardName
	}
	return ""
}

func (x *CardRegisterResultData) GetCardCode() string {
	if x != nil {
		return x.CardCode
	}
	return ""
}

func (x *CardRegisterResultData) GetBinNumbrer() string {
	if x != nil {
		return x.BinNumbrer
	}
	return ""
}

func (x *CardRegisterResultData) GetCardType() int32 {
	if x != nil {
		return x.CardType
	}
	return 0
}

func (x *CardRegisterResultData) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *CardRegisterResultData) GetCustomerTel() string {
	if x != nil {
		return x.CustomerTel
	}
	return ""
}

func (x *CardRegisterResultData) GetCustomerEmail() string {
	if x != nil {
		return x.CustomerEmail
	}
	return ""
}

func (x *CardRegisterResultData) GetCustomerAddr() string {
	if x != nil {
		return x.CustomerAddr
	}
	return ""
}

func (x *CardRegisterResultData) GetCustomerPostcode() string {
	if x != nil {
		return x.CustomerPostcode
	}
	return ""
}

func (x *CardRegisterResultData) GetInserted() int32 {
	if x != nil {
		return x.Inserted
	}
	return 0
}

func (x *CardRegisterResultData) GetUpdated() int32 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *CardRegisterResultData) GetPgProvider() string {
	if x != nil {
		return x.PgProvider
	}
	return ""
}

func (x *CardRegisterResultData) GetPgId() string {
	if x != nil {
		return x.PgId
	}
	return ""
}

type CardRegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *CardRegisterResultData `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *CardRegisterResponse) Reset() {
	*x = CardRegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_payments_card_card_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRegisterResponse) ProtoMessage() {}

func (x *CardRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v2_payments_card_card_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRegisterResponse.ProtoReflect.Descriptor instead.
func (*CardRegisterResponse) Descriptor() ([]byte, []int) {
	return file_v2_payments_card_card_proto_rawDescGZIP(), []int{2}
}

func (x *CardRegisterResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CardRegisterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CardRegisterResponse) GetResponse() *CardRegisterResultData {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetCardInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardUid string `protobuf:"bytes,1,opt,name=card_uid,json=cardUid,proto3" json:"card_uid,omitempty"`
}

func (x *GetCardInfoRequest) Reset() {
	*x = GetCardInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_payments_card_card_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCardInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCardInfoRequest) ProtoMessage() {}

func (x *GetCardInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v2_payments_card_card_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCardInfoRequest.ProtoReflect.Descriptor instead.
func (*GetCardInfoRequest) Descriptor() ([]byte, []int) {
	return file_v2_payments_card_card_proto_rawDescGZIP(), []int{3}
}

func (x *GetCardInfoRequest) GetCardUid() string {
	if x != nil {
		return x.CardUid
	}
	return ""
}

type GetCardInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardUid          string `protobuf:"bytes,1,opt,name=card_uid,json=cardUid,proto3" json:"card_uid,omitempty"`
	CardProvider     string `protobuf:"bytes,2,opt,name=card_provider,json=cardProvider,proto3" json:"card_provider,omitempty"`
	CardCode         string `protobuf:"bytes,3,opt,name=card_code,json=cardCode,proto3" json:"card_code,omitempty"`
	BinNumber        string `protobuf:"bytes,4,opt,name=bin_number,json=binNumber,proto3" json:"bin_number,omitempty"`
	CardType         int32  `protobuf:"varint,5,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	CustomerName     string `protobuf:"bytes,6,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	CustomerTel      string `protobuf:"bytes,7,opt,name=customer_tel,json=customerTel,proto3" json:"customer_tel,omitempty"`
	CustomerEmail    string `protobuf:"bytes,8,opt,name=customer_email,json=customerEmail,proto3" json:"customer_email,omitempty"`
	CustomerAddr     string `protobuf:"bytes,9,opt,name=customer_addr,json=customerAddr,proto3" json:"customer_addr,omitempty"`
	CustomerPostcode string `protobuf:"bytes,10,opt,name=customer_postcode,json=customerPostcode,proto3" json:"customer_postcode,omitempty"`
	Inserted         int32  `protobuf:"varint,11,opt,name=inserted,proto3" json:"inserted,omitempty"`
	Updated          int32  `protobuf:"varint,12,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *GetCardInfoData) Reset() {
	*x = GetCardInfoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_payments_card_card_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCardInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCardInfoData) ProtoMessage() {}

func (x *GetCardInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_v2_payments_card_card_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCardInfoData.ProtoReflect.Descriptor instead.
func (*GetCardInfoData) Descriptor() ([]byte, []int) {
	return file_v2_payments_card_card_proto_rawDescGZIP(), []int{4}
}

func (x *GetCardInfoData) GetCardUid() string {
	if x != nil {
		return x.CardUid
	}
	return ""
}

func (x *GetCardInfoData) GetCardProvider() string {
	if x != nil {
		return x.CardProvider
	}
	return ""
}

func (x *GetCardInfoData) GetCardCode() string {
	if x != nil {
		return x.CardCode
	}
	return ""
}

func (x *GetCardInfoData) GetBinNumber() string {
	if x != nil {
		return x.BinNumber
	}
	return ""
}

func (x *GetCardInfoData) GetCardType() int32 {
	if x != nil {
		return x.CardType
	}
	return 0
}

func (x *GetCardInfoData) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *GetCardInfoData) GetCustomerTel() string {
	if x != nil {
		return x.CustomerTel
	}
	return ""
}

func (x *GetCardInfoData) GetCustomerEmail() string {
	if x != nil {
		return x.CustomerEmail
	}
	return ""
}

func (x *GetCardInfoData) GetCustomerAddr() string {
	if x != nil {
		return x.CustomerAddr
	}
	return ""
}

func (x *GetCardInfoData) GetCustomerPostcode() string {
	if x != nil {
		return x.CustomerPostcode
	}
	return ""
}

func (x *GetCardInfoData) GetInserted() int32 {
	if x != nil {
		return x.Inserted
	}
	return 0
}

func (x *GetCardInfoData) GetUpdated() int32 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type GetCardInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *GetCardInfoData `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetCardInfoResponse) Reset() {
	*x = GetCardInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_payments_card_card_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCardInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCardInfoResponse) ProtoMessage() {}

func (x *GetCardInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v2_payments_card_card_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCardInfoResponse.ProtoReflect.Descriptor instead.
func (*GetCardInfoResponse) Descriptor() ([]byte, []int) {
	return file_v2_payments_card_card_proto_rawDescGZIP(), []int{5}
}

func (x *GetCardInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCardInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCardInfoResponse) GetResponse() *GetCardInfoData {
	if x != nil {
		return x.Response
	}
	return nil
}

type DeleteCardInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardUid string `protobuf:"bytes,1,opt,name=card_uid,json=cardUid,proto3" json:"card_uid,omitempty"`
}

func (x *DeleteCardInfoRequest) Reset() {
	*x = DeleteCardInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_payments_card_card_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCardInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCardInfoRequest) ProtoMessage() {}

func (x *DeleteCardInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v2_payments_card_card_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCardInfoRequest.ProtoReflect.Descriptor instead.
func (*DeleteCardInfoRequest) Descriptor() ([]byte, []int) {
	return file_v2_payments_card_card_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteCardInfoRequest) GetCardUid() string {
	if x != nil {
		return x.CardUid
	}
	return ""
}

type DeleteCardInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteCardInfoResponse) Reset() {
	*x = DeleteCardInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_payments_card_card_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCardInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCardInfoResponse) ProtoMessage() {}

func (x *DeleteCardInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v2_payments_card_card_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCardInfoResponse.ProtoReflect.Descriptor instead.
func (*DeleteCardInfoResponse) Descriptor() ([]byte, []int) {
	return file_v2_payments_card_card_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteCardInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteCardInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PayByRegisteredCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardUid                string `protobuf:"bytes,1,opt,name=card_uid,json=cardUid,proto3" json:"card_uid,omitempty"`
	MerchantUid            string `protobuf:"bytes,2,opt,name=merchant_uid,json=merchantUid,proto3" json:"merchant_uid,omitempty"`
	Amount                 string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TaxFreeAmount          string `protobuf:"bytes,4,opt,name=tax_free_amount,json=taxFreeAmount,proto3" json:"tax_free_amount,omitempty"`
	OrderName              string `protobuf:"bytes,5,opt,name=order_name,json=orderName,proto3" json:"order_name,omitempty"`                    // a.k.a.) name
	CardInstallment        int32  `protobuf:"varint,6,opt,name=card_installment,json=cardInstallment,proto3" json:"card_installment,omitempty"` // a.k.a.) card_quota
	InterestFreeByMerchant bool   `protobuf:"varint,7,opt,name=interest_free_by_merchant,json=interestFreeByMerchant,proto3" json:"interest_free_by_merchant,omitempty"`
	CustomData             string `protobuf:"bytes,8,opt,name=custom_data,json=customData,proto3" json:"custom_data,omitempty"`
	CallbackUrl            string `protobuf:"bytes,9,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
	BuyerAddr              string `protobuf:"bytes,10,opt,name=buyer_addr,json=buyerAddr,proto3" json:"buyer_addr,omitempty"`
	BuyerEmail             string `protobuf:"bytes,11,opt,name=buyer_email,json=buyerEmail,proto3" json:"buyer_email,omitempty"`
	BuyerName              string `protobuf:"bytes,12,opt,name=buyer_name,json=buyerName,proto3" json:"buyer_name,omitempty"`
	BuyerPostcode          string `protobuf:"bytes,13,opt,name=buyer_postcode,json=buyerPostcode,proto3" json:"buyer_postcode,omitempty"`
	BuyerTel               string `protobuf:"bytes,14,opt,name=buyer_tel,json=buyerTel,proto3" json:"buyer_tel,omitempty"`
}

func (x *PayByRegisteredCardRequest) Reset() {
	*x = PayByRegisteredCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_payments_card_card_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayByRegisteredCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayByRegisteredCardRequest) ProtoMessage() {}

func (x *PayByRegisteredCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v2_payments_card_card_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayByRegisteredCardRequest.ProtoReflect.Descriptor instead.
func (*PayByRegisteredCardRequest) Descriptor() ([]byte, []int) {
	return file_v2_payments_card_card_proto_rawDescGZIP(), []int{8}
}

func (x *PayByRegisteredCardRequest) GetCardUid() string {
	if x != nil {
		return x.CardUid
	}
	return ""
}

func (x *PayByRegisteredCardRequest) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *PayByRegisteredCardRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *PayByRegisteredCardRequest) GetTaxFreeAmount() string {
	if x != nil {
		return x.TaxFreeAmount
	}
	return ""
}

func (x *PayByRegisteredCardRequest) GetOrderName() string {
	if x != nil {
		return x.OrderName
	}
	return ""
}

func (x *PayByRegisteredCardRequest) GetCardInstallment() int32 {
	if x != nil {
		return x.CardInstallment
	}
	return 0
}

func (x *PayByRegisteredCardRequest) GetInterestFreeByMerchant() bool {
	if x != nil {
		return x.InterestFreeByMerchant
	}
	return false
}

func (x *PayByRegisteredCardRequest) GetCustomData() string {
	if x != nil {
		return x.CustomData
	}
	return ""
}

func (x *PayByRegisteredCardRequest) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

func (x *PayByRegisteredCardRequest) GetBuyerAddr() string {
	if x != nil {
		return x.BuyerAddr
	}
	return ""
}

func (x *PayByRegisteredCardRequest) GetBuyerEmail() string {
	if x != nil {
		return x.BuyerEmail
	}
	return ""
}

func (x *PayByRegisteredCardRequest) GetBuyerName() string {
	if x != nil {
		return x.BuyerName
	}
	return ""
}

func (x *PayByRegisteredCardRequest) GetBuyerPostcode() string {
	if x != nil {
		return x.BuyerPostcode
	}
	return ""
}

func (x *PayByRegisteredCardRequest) GetBuyerTel() string {
	if x != nil {
		return x.BuyerTel
	}
	return ""
}

type PayByRegisteredCardData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount            string           `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	ApplyNum          string           `protobuf:"bytes,2,opt,name=apply_num,json=applyNum,proto3" json:"apply_num,omitempty"`
	BuyerAddr         string           `protobuf:"bytes,3,opt,name=buyer_addr,json=buyerAddr,proto3" json:"buyer_addr,omitempty"`
	BuyerEmail        string           `protobuf:"bytes,4,opt,name=buyer_email,json=buyerEmail,proto3" json:"buyer_email,omitempty"`
	BuyerName         string           `protobuf:"bytes,5,opt,name=buyer_name,json=buyerName,proto3" json:"buyer_name,omitempty"`
	BuyerPostcode     string           `protobuf:"bytes,6,opt,name=buyer_postcode,json=buyerPostcode,proto3" json:"buyer_postcode,omitempty"`
	BuyerTel          string           `protobuf:"bytes,7,opt,name=buyer_tel,json=buyerTel,proto3" json:"buyer_tel,omitempty"`
	CancelAmount      string           `protobuf:"bytes,8,opt,name=cancel_amount,json=cancelAmount,proto3" json:"cancel_amount,omitempty"`
	CancelHistory     []*CancelHistory `protobuf:"bytes,9,rep,name=cancel_history,json=cancelHistory,proto3" json:"cancel_history,omitempty"`
	CancelReason      string           `protobuf:"bytes,10,opt,name=cancel_reason,json=cancelReason,proto3" json:"cancel_reason,omitempty"`
	CancelReceiptUrls []string         `protobuf:"bytes,11,rep,name=cancel_receipt_urls,json=cancelReceiptUrls,proto3" json:"cancel_receipt_urls,omitempty"`
	CancelledAt       int32            `protobuf:"varint,12,opt,name=cancelled_at,json=cancelledAt,proto3" json:"cancelled_at,omitempty"`
	CardCode          string           `protobuf:"bytes,13,opt,name=card_code,json=cardCode,proto3" json:"card_code,omitempty"`
	CardName          string           `protobuf:"bytes,14,opt,name=card_name,json=cardName,proto3" json:"card_name,omitempty"`
	BinNumber         string           `protobuf:"bytes,15,opt,name=bin_number,json=binNumber,proto3" json:"bin_number,omitempty"`
	CardInstallment   int32            `protobuf:"varint,16,opt,name=card_installment,json=cardInstallment,proto3" json:"card_installment,omitempty"`
	CardType          int32            `protobuf:"varint,17,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	CashReceiptIssued bool             `protobuf:"varint,18,opt,name=cash_receipt_issued,json=cashReceiptIssued,proto3" json:"cash_receipt_issued,omitempty"`
	Channel           string           `protobuf:"bytes,19,opt,name=channel,proto3" json:"channel,omitempty"`
	Currency          string           `protobuf:"bytes,20,opt,name=currency,proto3" json:"currency,omitempty"`
	CustomData        string           `protobuf:"bytes,21,opt,name=custom_data,json=customData,proto3" json:"custom_data,omitempty"`
	CardUid           string           `protobuf:"bytes,22,opt,name=card_uid,json=cardUid,proto3" json:"card_uid,omitempty"` // a.k.a.) customer_uid
	CustomerUidUsage  string           `protobuf:"bytes,23,opt,name=customer_uid_usage,json=customerUidUsage,proto3" json:"customer_uid_usage,omitempty"`
	FailReason        string           `protobuf:"bytes,24,opt,name=fail_reason,json=failReason,proto3" json:"fail_reason,omitempty"`
	FailedAt          int32            `protobuf:"varint,25,opt,name=failed_at,json=failedAt,proto3" json:"failed_at,omitempty"`
	ImpUid            string           `protobuf:"bytes,26,opt,name=imp_uid,json=impUid,proto3" json:"imp_uid,omitempty"`
	MerchantUid       string           `protobuf:"bytes,27,opt,name=merchant_uid,json=merchantUid,proto3" json:"merchant_uid,omitempty"`
	OrderName         string           `protobuf:"bytes,28,opt,name=order_name,json=orderName,proto3" json:"order_name,omitempty"`
	PaidAt            int32            `protobuf:"varint,29,opt,name=paid_at,json=paidAt,proto3" json:"paid_at,omitempty"`
	PayMethod         string           `protobuf:"bytes,30,opt,name=pay_method,json=payMethod,proto3" json:"pay_method,omitempty"`
	PgId              string           `protobuf:"bytes,31,opt,name=pg_id,json=pgId,proto3" json:"pg_id,omitempty"`
	PgProvider        string           `protobuf:"bytes,32,opt,name=pg_provider,json=pgProvider,proto3" json:"pg_provider,omitempty"`
	PgTid             string           `protobuf:"bytes,33,opt,name=pg_tid,json=pgTid,proto3" json:"pg_tid,omitempty"`
	ReceiptUrl        string           `protobuf:"bytes,34,opt,name=receipt_url,json=receiptUrl,proto3" json:"receipt_url,omitempty"`
	StartedAt         int32            `protobuf:"varint,35,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	Status            string           `protobuf:"bytes,36,opt,name=status,proto3" json:"status,omitempty"`
	UserAgent         string           `protobuf:"bytes,37,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
}

func (x *PayByRegisteredCardData) Reset() {
	*x = PayByRegisteredCardData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_payments_card_card_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayByRegisteredCardData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayByRegisteredCardData) ProtoMessage() {}

func (x *PayByRegisteredCardData) ProtoReflect() protoreflect.Message {
	mi := &file_v2_payments_card_card_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayByRegisteredCardData.ProtoReflect.Descriptor instead.
func (*PayByRegisteredCardData) Descriptor() ([]byte, []int) {
	return file_v2_payments_card_card_proto_rawDescGZIP(), []int{9}
}

func (x *PayByRegisteredCardData) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *PayByRegisteredCardData) GetApplyNum() string {
	if x != nil {
		return x.ApplyNum
	}
	return ""
}

func (x *PayByRegisteredCardData) GetBuyerAddr() string {
	if x != nil {
		return x.BuyerAddr
	}
	return ""
}

func (x *PayByRegisteredCardData) GetBuyerEmail() string {
	if x != nil {
		return x.BuyerEmail
	}
	return ""
}

func (x *PayByRegisteredCardData) GetBuyerName() string {
	if x != nil {
		return x.BuyerName
	}
	return ""
}

func (x *PayByRegisteredCardData) GetBuyerPostcode() string {
	if x != nil {
		return x.BuyerPostcode
	}
	return ""
}

func (x *PayByRegisteredCardData) GetBuyerTel() string {
	if x != nil {
		return x.BuyerTel
	}
	return ""
}

func (x *PayByRegisteredCardData) GetCancelAmount() string {
	if x != nil {
		return x.CancelAmount
	}
	return ""
}

func (x *PayByRegisteredCardData) GetCancelHistory() []*CancelHistory {
	if x != nil {
		return x.CancelHistory
	}
	return nil
}

func (x *PayByRegisteredCardData) GetCancelReason() string {
	if x != nil {
		return x.CancelReason
	}
	return ""
}

func (x *PayByRegisteredCardData) GetCancelReceiptUrls() []string {
	if x != nil {
		return x.CancelReceiptUrls
	}
	return nil
}

func (x *PayByRegisteredCardData) GetCancelledAt() int32 {
	if x != nil {
		return x.CancelledAt
	}
	return 0
}

func (x *PayByRegisteredCardData) GetCardCode() string {
	if x != nil {
		return x.CardCode
	}
	return ""
}

func (x *PayByRegisteredCardData) GetCardName() string {
	if x != nil {
		return x.CardName
	}
	return ""
}

func (x *PayByRegisteredCardData) GetBinNumber() string {
	if x != nil {
		return x.BinNumber
	}
	return ""
}

func (x *PayByRegisteredCardData) GetCardInstallment() int32 {
	if x != nil {
		return x.CardInstallment
	}
	return 0
}

func (x *PayByRegisteredCardData) GetCardType() int32 {
	if x != nil {
		return x.CardType
	}
	return 0
}

func (x *PayByRegisteredCardData) GetCashReceiptIssued() bool {
	if x != nil {
		return x.CashReceiptIssued
	}
	return false
}

func (x *PayByRegisteredCardData) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *PayByRegisteredCardData) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PayByRegisteredCardData) GetCustomData() string {
	if x != nil {
		return x.CustomData
	}
	return ""
}

func (x *PayByRegisteredCardData) GetCardUid() string {
	if x != nil {
		return x.CardUid
	}
	return ""
}

func (x *PayByRegisteredCardData) GetCustomerUidUsage() string {
	if x != nil {
		return x.CustomerUidUsage
	}
	return ""
}

func (x *PayByRegisteredCardData) GetFailReason() string {
	if x != nil {
		return x.FailReason
	}
	return ""
}

func (x *PayByRegisteredCardData) GetFailedAt() int32 {
	if x != nil {
		return x.FailedAt
	}
	return 0
}

func (x *PayByRegisteredCardData) GetImpUid() string {
	if x != nil {
		return x.ImpUid
	}
	return ""
}

func (x *PayByRegisteredCardData) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *PayByRegisteredCardData) GetOrderName() string {
	if x != nil {
		return x.OrderName
	}
	return ""
}

func (x *PayByRegisteredCardData) GetPaidAt() int32 {
	if x != nil {
		return x.PaidAt
	}
	return 0
}

func (x *PayByRegisteredCardData) GetPayMethod() string {
	if x != nil {
		return x.PayMethod
	}
	return ""
}

func (x *PayByRegisteredCardData) GetPgId() string {
	if x != nil {
		return x.PgId
	}
	return ""
}

func (x *PayByRegisteredCardData) GetPgProvider() string {
	if x != nil {
		return x.PgProvider
	}
	return ""
}

func (x *PayByRegisteredCardData) GetPgTid() string {
	if x != nil {
		return x.PgTid
	}
	return ""
}

func (x *PayByRegisteredCardData) GetReceiptUrl() string {
	if x != nil {
		return x.ReceiptUrl
	}
	return ""
}

func (x *PayByRegisteredCardData) GetStartedAt() int32 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *PayByRegisteredCardData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PayByRegisteredCardData) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

type PayByRegisteredCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *PayByRegisteredCardData `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *PayByRegisteredCardResponse) Reset() {
	*x = PayByRegisteredCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_payments_card_card_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayByRegisteredCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayByRegisteredCardResponse) ProtoMessage() {}

func (x *PayByRegisteredCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v2_payments_card_card_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayByRegisteredCardResponse.ProtoReflect.Descriptor instead.
func (*PayByRegisteredCardResponse) Descriptor() ([]byte, []int) {
	return file_v2_payments_card_card_proto_rawDescGZIP(), []int{10}
}

func (x *PayByRegisteredCardResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayByRegisteredCardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PayByRegisteredCardResponse) GetResponse() *PayByRegisteredCardData {
	if x != nil {
		return x.Response
	}
	return nil
}

type CancelHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PgTid       string `protobuf:"bytes,1,opt,name=pg_tid,json=pgTid,proto3" json:"pg_tid,omitempty"`
	Amount      string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	CancelledAt int32  `protobuf:"varint,3,opt,name=cancelled_at,json=cancelledAt,proto3" json:"cancelled_at,omitempty"`
	Reason      string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	ReceiptUrl  string `protobuf:"bytes,5,opt,name=receipt_url,json=receiptUrl,proto3" json:"receipt_url,omitempty"`
}

func (x *CancelHistory) Reset() {
	*x = CancelHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_payments_card_card_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelHistory) ProtoMessage() {}

func (x *CancelHistory) ProtoReflect() protoreflect.Message {
	mi := &file_v2_payments_card_card_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelHistory.ProtoReflect.Descriptor instead.
func (*CancelHistory) Descriptor() ([]byte, []int) {
	return file_v2_payments_card_card_proto_rawDescGZIP(), []int{11}
}

func (x *CancelHistory) GetPgTid() string {
	if x != nil {
		return x.PgTid
	}
	return ""
}

func (x *CancelHistory) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CancelHistory) GetCancelledAt() int32 {
	if x != nil {
		return x.CancelledAt
	}
	return 0
}

func (x *CancelHistory) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *CancelHistory) GetReceiptUrl() string {
	if x != nil {
		return x.ReceiptUrl
	}
	return ""
}

type CancelCardPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImpUid        string `protobuf:"bytes,1,opt,name=imp_uid,json=impUid,proto3" json:"imp_uid,omitempty"`
	Amount        string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	MerchantUid   string `protobuf:"bytes,3,opt,name=merchant_uid,json=merchantUid,proto3" json:"merchant_uid,omitempty"`
	TaxFreeAmount string `protobuf:"bytes,4,opt,name=tax_free_amount,json=taxFreeAmount,proto3" json:"tax_free_amount,omitempty"`
	Reason        string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *CancelCardPaymentRequest) Reset() {
	*x = CancelCardPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_payments_card_card_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelCardPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelCardPaymentRequest) ProtoMessage() {}

func (x *CancelCardPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v2_payments_card_card_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelCardPaymentRequest.ProtoReflect.Descriptor instead.
func (*CancelCardPaymentRequest) Descriptor() ([]byte, []int) {
	return file_v2_payments_card_card_proto_rawDescGZIP(), []int{12}
}

func (x *CancelCardPaymentRequest) GetImpUid() string {
	if x != nil {
		return x.ImpUid
	}
	return ""
}

func (x *CancelCardPaymentRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CancelCardPaymentRequest) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *CancelCardPaymentRequest) GetTaxFreeAmount() string {
	if x != nil {
		return x.TaxFreeAmount
	}
	return ""
}

func (x *CancelCardPaymentRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type CancelCardPaymenttResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *PayByRegisteredCardData `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *CancelCardPaymenttResponse) Reset() {
	*x = CancelCardPaymenttResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_payments_card_card_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelCardPaymenttResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelCardPaymenttResponse) ProtoMessage() {}

func (x *CancelCardPaymenttResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v2_payments_card_card_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelCardPaymenttResponse.ProtoReflect.Descriptor instead.
func (*CancelCardPaymenttResponse) Descriptor() ([]byte, []int) {
	return file_v2_payments_card_card_proto_rawDescGZIP(), []int{13}
}

func (x *CancelCardPaymenttResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CancelCardPaymenttResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CancelCardPaymenttResponse) GetResponse() *PayByRegisteredCardData {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_v2_payments_card_card_proto protoreflect.FileDescriptor

var file_v2_payments_card_card_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x76, 0x32, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x63, 0x61,
	0x72, 0x64, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x76, 0x32, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xef, 0x02, 0x0a, 0x13, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x61, 0x72, 0x64, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61,
	0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x62, 0x69, 0x72, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x77, 0x64, 0x5f, 0x32, 0x64,
	0x69, 0x67, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x77, 0x64, 0x32,
	0x64, 0x69, 0x67, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x6f,
	0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x67, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x70, 0x67, 0x22, 0xd8, 0x03, 0x0a, 0x16, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x55, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x69, 0x6e, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x72, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x6e,
	0x4e, 0x75, 0x6d, 0x62, 0x72, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x6f, 0x73,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x67, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x13, 0x0a, 0x05,
	0x70, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x67, 0x49,
	0x64, 0x22, 0x81, 0x01, 0x0a, 0x14, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x61, 0x72, 0x64, 0x55, 0x69, 0x64, 0x22, 0xa1, 0x03, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61,
	0x72, 0x64, 0x55, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61,
	0x72, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x6e, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x6e,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x79, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x34, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x55, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x16, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x86, 0x04, 0x0a, 0x1a, 0x50, 0x61, 0x79, 0x42, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x78, 0x5f, 0x66, 0x72,
	0x65, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x61, 0x78, 0x46, 0x72, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x19, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x62, 0x79, 0x5f, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x46, 0x72, 0x65, 0x65, 0x42, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x79,
	0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f,
	0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x62, 0x75, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x75, 0x79, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x22, 0xd3, 0x09, 0x0a, 0x17, 0x50,
	0x61, 0x79, 0x42, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75,
	0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75,
	0x79, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x79, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x6e, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63,
	0x61, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x61, 0x73, 0x68, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x55, 0x69, 0x64, 0x12, 0x2c, 0x0a,
	0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x5f, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x55, 0x69, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x70,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x70, 0x55,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x69, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x13, 0x0a, 0x05,
	0x70, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x67, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x67, 0x5f, 0x74, 0x69, 0x64, 0x18, 0x21, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x67, 0x54, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18,
	0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x22, 0x89, 0x01, 0x0a, 0x1b, 0x50, 0x61, 0x79, 0x42, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x79, 0x42, 0x79,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9a, 0x01, 0x0a,
	0x0d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x15,
	0x0a, 0x06, 0x70, 0x67, 0x5f, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x67, 0x54, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x55, 0x72, 0x6c, 0x22, 0xae, 0x01, 0x0a, 0x18, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x70, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x70, 0x55, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61,
	0x78, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x78, 0x46, 0x72, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x88, 0x01, 0x0a, 0x1a, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x79, 0x42, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xcc, 0x05, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x11,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x56, 0x32, 0x52, 0x50,
	0x43, 0x12, 0x1c, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x2f, 0x69, 0x6e,
	0x66, 0x6f, 0x3a, 0x01, 0x2a, 0x12, 0x7c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x56, 0x32, 0x52, 0x50, 0x43, 0x12, 0x1b, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x63,
	0x61, 0x72, 0x64, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x75,
	0x69, 0x64, 0x7d, 0x12, 0x85, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x32, 0x52, 0x50, 0x43, 0x12, 0x1e, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x27, 0x2a, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x2f, 0x69, 0x6e, 0x66, 0x6f,
	0x2f, 0x7b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x94, 0x01, 0x0a, 0x19,
	0x50, 0x61, 0x79, 0x42, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x65, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x56, 0x32, 0x52, 0x50, 0x43, 0x12, 0x23, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x79, 0x42, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x79, 0x42, 0x79, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22, 0x24, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x63,
	0x61, 0x72, 0x64, 0x2f, 0x70, 0x61, 0x79, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x12, 0x9f, 0x01, 0x0a, 0x1a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x65, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x56, 0x32, 0x52, 0x50,
	0x43, 0x12, 0x21, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x32, 0x2e, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x33, 0x22, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x76, 0x32, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x2f,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x2f, 0x7b, 0x69, 0x6d, 0x70, 0x5f,
	0x75, 0x69, 0x64, 0x7d, 0x42, 0x4d, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x69, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x5f, 0x73, 0x72, 0x63, 0x2f, 0x67, 0x6f, 0x2f,
	0x76, 0x32, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x63, 0x61, 0x72, 0x64,
	0xaa, 0x02, 0x10, 0x56, 0x32, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v2_payments_card_card_proto_rawDescOnce sync.Once
	file_v2_payments_card_card_proto_rawDescData = file_v2_payments_card_card_proto_rawDesc
)

func file_v2_payments_card_card_proto_rawDescGZIP() []byte {
	file_v2_payments_card_card_proto_rawDescOnce.Do(func() {
		file_v2_payments_card_card_proto_rawDescData = protoimpl.X.CompressGZIP(file_v2_payments_card_card_proto_rawDescData)
	})
	return file_v2_payments_card_card_proto_rawDescData
}

var file_v2_payments_card_card_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_v2_payments_card_card_proto_goTypes = []interface{}{
	(*CardRegisterRequest)(nil),         // 0: card_v2.CardRegisterRequest
	(*CardRegisterResultData)(nil),      // 1: card_v2.CardRegisterResultData
	(*CardRegisterResponse)(nil),        // 2: card_v2.CardRegisterResponse
	(*GetCardInfoRequest)(nil),          // 3: card_v2.GetCardInfoRequest
	(*GetCardInfoData)(nil),             // 4: card_v2.GetCardInfoData
	(*GetCardInfoResponse)(nil),         // 5: card_v2.GetCardInfoResponse
	(*DeleteCardInfoRequest)(nil),       // 6: card_v2.DeleteCardInfoRequest
	(*DeleteCardInfoResponse)(nil),      // 7: card_v2.DeleteCardInfoResponse
	(*PayByRegisteredCardRequest)(nil),  // 8: card_v2.PayByRegisteredCardRequest
	(*PayByRegisteredCardData)(nil),     // 9: card_v2.PayByRegisteredCardData
	(*PayByRegisteredCardResponse)(nil), // 10: card_v2.PayByRegisteredCardResponse
	(*CancelHistory)(nil),               // 11: card_v2.CancelHistory
	(*CancelCardPaymentRequest)(nil),    // 12: card_v2.CancelCardPaymentRequest
	(*CancelCardPaymenttResponse)(nil),  // 13: card_v2.CancelCardPaymenttResponse
}
var file_v2_payments_card_card_proto_depIdxs = []int32{
	1,  // 0: card_v2.CardRegisterResponse.response:type_name -> card_v2.CardRegisterResultData
	4,  // 1: card_v2.GetCardInfoResponse.response:type_name -> card_v2.GetCardInfoData
	11, // 2: card_v2.PayByRegisteredCardData.cancel_history:type_name -> card_v2.CancelHistory
	9,  // 3: card_v2.PayByRegisteredCardResponse.response:type_name -> card_v2.PayByRegisteredCardData
	9,  // 4: card_v2.CancelCardPaymenttResponse.response:type_name -> card_v2.PayByRegisteredCardData
	0,  // 5: card_v2.PaymentCardService.CardRegisterV2RPC:input_type -> card_v2.CardRegisterRequest
	3,  // 6: card_v2.PaymentCardService.GetCardInfoV2RPC:input_type -> card_v2.GetCardInfoRequest
	6,  // 7: card_v2.PaymentCardService.DeleteCardInfoV2RPC:input_type -> card_v2.DeleteCardInfoRequest
	8,  // 8: card_v2.PaymentCardService.PayByRegiseteredCardV2RPC:input_type -> card_v2.PayByRegisteredCardRequest
	12, // 9: card_v2.PaymentCardService.CancelRegiseteredCardV2RPC:input_type -> card_v2.CancelCardPaymentRequest
	2,  // 10: card_v2.PaymentCardService.CardRegisterV2RPC:output_type -> card_v2.CardRegisterResponse
	5,  // 11: card_v2.PaymentCardService.GetCardInfoV2RPC:output_type -> card_v2.GetCardInfoResponse
	7,  // 12: card_v2.PaymentCardService.DeleteCardInfoV2RPC:output_type -> card_v2.DeleteCardInfoResponse
	10, // 13: card_v2.PaymentCardService.PayByRegiseteredCardV2RPC:output_type -> card_v2.PayByRegisteredCardResponse
	13, // 14: card_v2.PaymentCardService.CancelRegiseteredCardV2RPC:output_type -> card_v2.CancelCardPaymenttResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_v2_payments_card_card_proto_init() }
func file_v2_payments_card_card_proto_init() {
	if File_v2_payments_card_card_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v2_payments_card_card_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_payments_card_card_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRegisterResultData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_payments_card_card_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_payments_card_card_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCardInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_payments_card_card_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCardInfoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_payments_card_card_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCardInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_payments_card_card_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCardInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_payments_card_card_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCardInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_payments_card_card_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayByRegisteredCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_payments_card_card_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayByRegisteredCardData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_payments_card_card_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayByRegisteredCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_payments_card_card_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_payments_card_card_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelCardPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_payments_card_card_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelCardPaymenttResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v2_payments_card_card_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v2_payments_card_card_proto_goTypes,
		DependencyIndexes: file_v2_payments_card_card_proto_depIdxs,
		MessageInfos:      file_v2_payments_card_card_proto_msgTypes,
	}.Build()
	File_v2_payments_card_card_proto = out.File
	file_v2_payments_card_card_proto_rawDesc = nil
	file_v2_payments_card_card_proto_goTypes = nil
	file_v2_payments_card_card_proto_depIdxs = nil
}
