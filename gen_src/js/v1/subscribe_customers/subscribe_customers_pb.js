// source: v1/subscribe_customers/subscribe_customers.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var v1_payment_payment_pb = require('../../v1/payment/payment_pb.js');
goog.object.extend(proto, v1_payment_payment_pb);
var v1_subscribe_subscribe_pb = require('../../v1/subscribe/subscribe_pb.js');
goog.object.extend(proto, v1_subscribe_subscribe_pb);
goog.exportSymbol('proto.subscribe_customers.CustomerBillingKey', null, global);
goog.exportSymbol('proto.subscribe_customers.DeleteCustomerBillingKeyRequest', null, global);
goog.exportSymbol('proto.subscribe_customers.DeleteCustomerBillingKeyResponse', null, global);
goog.exportSymbol('proto.subscribe_customers.GetCustomerBillingKeyRequest', null, global);
goog.exportSymbol('proto.subscribe_customers.GetCustomerBillingKeyResponse', null, global);
goog.exportSymbol('proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest', null, global);
goog.exportSymbol('proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse', null, global);
goog.exportSymbol('proto.subscribe_customers.GetPaidByBillingKeyListRequest', null, global);
goog.exportSymbol('proto.subscribe_customers.GetPaidByBillingKeyListResponse', null, global);
goog.exportSymbol('proto.subscribe_customers.InsertCustomerBillingKeyRequest', null, global);
goog.exportSymbol('proto.subscribe_customers.InsertCustomerBillingKeyResponse', null, global);
goog.exportSymbol('proto.subscribe_customers.NestedGetPaidByBillingKeyListData', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.CustomerBillingKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.CustomerBillingKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.CustomerBillingKey.displayName = 'proto.subscribe_customers.CustomerBillingKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.repeatedFields_, null);
};
goog.inherits(proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.displayName = 'proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.repeatedFields_, null);
};
goog.inherits(proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.displayName = 'proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.DeleteCustomerBillingKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.DeleteCustomerBillingKeyRequest.displayName = 'proto.subscribe_customers.DeleteCustomerBillingKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.DeleteCustomerBillingKeyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.DeleteCustomerBillingKeyResponse.displayName = 'proto.subscribe_customers.DeleteCustomerBillingKeyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.GetCustomerBillingKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.GetCustomerBillingKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.GetCustomerBillingKeyRequest.displayName = 'proto.subscribe_customers.GetCustomerBillingKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.GetCustomerBillingKeyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.GetCustomerBillingKeyResponse.displayName = 'proto.subscribe_customers.GetCustomerBillingKeyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.InsertCustomerBillingKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.InsertCustomerBillingKeyRequest.displayName = 'proto.subscribe_customers.InsertCustomerBillingKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.InsertCustomerBillingKeyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.InsertCustomerBillingKeyResponse.displayName = 'proto.subscribe_customers.InsertCustomerBillingKeyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.GetPaidByBillingKeyListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.GetPaidByBillingKeyListRequest.displayName = 'proto.subscribe_customers.GetPaidByBillingKeyListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.subscribe_customers.NestedGetPaidByBillingKeyListData.repeatedFields_, null);
};
goog.inherits(proto.subscribe_customers.NestedGetPaidByBillingKeyListData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.NestedGetPaidByBillingKeyListData.displayName = 'proto.subscribe_customers.NestedGetPaidByBillingKeyListData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.GetPaidByBillingKeyListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.GetPaidByBillingKeyListResponse.displayName = 'proto.subscribe_customers.GetPaidByBillingKeyListResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.CustomerBillingKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.CustomerBillingKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.CustomerBillingKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    cardCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cardName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cardNumber: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cardType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    customerAddr: jspb.Message.getFieldWithDefault(msg, 5, ""),
    customerEmail: jspb.Message.getFieldWithDefault(msg, 6, ""),
    customerName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    customerPostcode: jspb.Message.getFieldWithDefault(msg, 8, ""),
    customerTel: jspb.Message.getFieldWithDefault(msg, 9, ""),
    customerUid: jspb.Message.getFieldWithDefault(msg, 10, ""),
    inserted: jspb.Message.getFieldWithDefault(msg, 11, 0),
    pgId: jspb.Message.getFieldWithDefault(msg, 12, ""),
    pgProvider: jspb.Message.getFieldWithDefault(msg, 13, ""),
    updated: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.CustomerBillingKey}
 */
proto.subscribe_customers.CustomerBillingKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.CustomerBillingKey;
  return proto.subscribe_customers.CustomerBillingKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.CustomerBillingKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.CustomerBillingKey}
 */
proto.subscribe_customers.CustomerBillingKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardNumber(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCardType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerAddr(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerEmail(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerPostcode(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerTel(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerUid(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInserted(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPgId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setPgProvider(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.CustomerBillingKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.CustomerBillingKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.CustomerBillingKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCardCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCardName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCardNumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCardType();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCustomerAddr();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCustomerEmail();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCustomerName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCustomerPostcode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCustomerTel();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCustomerUid();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getInserted();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getPgId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getPgProvider();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getUpdated();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
};


/**
 * optional string card_code = 1;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCardCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCardCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string card_name = 2;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCardName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCardName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string card_number = 3;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCardNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCardNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 card_type = 4;
 * @return {number}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCardType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCardType = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string customer_addr = 5;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCustomerAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCustomerAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string customer_email = 6;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCustomerEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCustomerEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string customer_name = 7;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCustomerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCustomerName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string customer_postcode = 8;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCustomerPostcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCustomerPostcode = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string customer_tel = 9;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCustomerTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCustomerTel = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string customer_uid = 10;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCustomerUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCustomerUid = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 inserted = 11;
 * @return {number}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getInserted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setInserted = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string pg_id = 12;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getPgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setPgId = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string pg_provider = 13;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getPgProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setPgProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional int32 updated = 14;
 * @return {number}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getUpdated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setUpdated = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerUidList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest;
  return proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addCustomerUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerUidList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string customer_uid = 1;
 * @return {!Array<string>}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.prototype.getCustomerUidList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.prototype.setCustomerUidList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.prototype.addCustomerUid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.prototype.clearCustomerUidList = function() {
  return this.setCustomerUidList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    responseList: jspb.Message.toObjectList(msg.getResponseList(),
    proto.subscribe_customers.CustomerBillingKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse;
  return proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.subscribe_customers.CustomerBillingKey;
      reader.readMessage(value,proto.subscribe_customers.CustomerBillingKey.deserializeBinaryFromReader);
      msg.addResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponseList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.subscribe_customers.CustomerBillingKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated CustomerBillingKey response = 3;
 * @return {!Array<!proto.subscribe_customers.CustomerBillingKey>}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.getResponseList = function() {
  return /** @type{!Array<!proto.subscribe_customers.CustomerBillingKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.subscribe_customers.CustomerBillingKey, 3));
};


/**
 * @param {!Array<!proto.subscribe_customers.CustomerBillingKey>} value
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse} returns this
*/
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.setResponseList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.subscribe_customers.CustomerBillingKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.subscribe_customers.CustomerBillingKey}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.addResponse = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.subscribe_customers.CustomerBillingKey, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.clearResponseList = function() {
  return this.setResponseList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.DeleteCustomerBillingKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.DeleteCustomerBillingKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerUid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 2, ""),
    requester: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyRequest}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.DeleteCustomerBillingKeyRequest;
  return proto.subscribe_customers.DeleteCustomerBillingKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.DeleteCustomerBillingKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyRequest}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequester(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.DeleteCustomerBillingKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.DeleteCustomerBillingKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRequester();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string customer_uid = 1;
 * @return {string}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.prototype.getCustomerUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.prototype.setCustomerUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string requester = 3;
 * @return {string}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.prototype.getRequester = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.prototype.setRequester = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.DeleteCustomerBillingKeyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.DeleteCustomerBillingKeyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    response: (f = msg.getResponse()) && proto.subscribe_customers.CustomerBillingKey.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyResponse}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.DeleteCustomerBillingKeyResponse;
  return proto.subscribe_customers.DeleteCustomerBillingKeyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.DeleteCustomerBillingKeyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyResponse}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.subscribe_customers.CustomerBillingKey;
      reader.readMessage(value,proto.subscribe_customers.CustomerBillingKey.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.DeleteCustomerBillingKeyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.DeleteCustomerBillingKeyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.subscribe_customers.CustomerBillingKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CustomerBillingKey response = 3;
 * @return {?proto.subscribe_customers.CustomerBillingKey}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.getResponse = function() {
  return /** @type{?proto.subscribe_customers.CustomerBillingKey} */ (
    jspb.Message.getWrapperField(this, proto.subscribe_customers.CustomerBillingKey, 3));
};


/**
 * @param {?proto.subscribe_customers.CustomerBillingKey|undefined} value
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyResponse} returns this
*/
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.GetCustomerBillingKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.GetCustomerBillingKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.GetCustomerBillingKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetCustomerBillingKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerUid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.GetCustomerBillingKeyRequest}
 */
proto.subscribe_customers.GetCustomerBillingKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.GetCustomerBillingKeyRequest;
  return proto.subscribe_customers.GetCustomerBillingKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.GetCustomerBillingKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.GetCustomerBillingKeyRequest}
 */
proto.subscribe_customers.GetCustomerBillingKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.GetCustomerBillingKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.GetCustomerBillingKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.GetCustomerBillingKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetCustomerBillingKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string customer_uid = 1;
 * @return {string}
 */
proto.subscribe_customers.GetCustomerBillingKeyRequest.prototype.getCustomerUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.GetCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.GetCustomerBillingKeyRequest.prototype.setCustomerUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.GetCustomerBillingKeyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.GetCustomerBillingKeyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    response: (f = msg.getResponse()) && proto.subscribe_customers.CustomerBillingKey.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.GetCustomerBillingKeyResponse}
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.GetCustomerBillingKeyResponse;
  return proto.subscribe_customers.GetCustomerBillingKeyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.GetCustomerBillingKeyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.GetCustomerBillingKeyResponse}
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.subscribe_customers.CustomerBillingKey;
      reader.readMessage(value,proto.subscribe_customers.CustomerBillingKey.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.GetCustomerBillingKeyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.GetCustomerBillingKeyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.subscribe_customers.CustomerBillingKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.GetCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.GetCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CustomerBillingKey response = 3;
 * @return {?proto.subscribe_customers.CustomerBillingKey}
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.getResponse = function() {
  return /** @type{?proto.subscribe_customers.CustomerBillingKey} */ (
    jspb.Message.getWrapperField(this, proto.subscribe_customers.CustomerBillingKey, 3));
};


/**
 * @param {?proto.subscribe_customers.CustomerBillingKey|undefined} value
 * @return {!proto.subscribe_customers.GetCustomerBillingKeyResponse} returns this
*/
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.subscribe_customers.GetCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.InsertCustomerBillingKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerUid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cardNumber: jspb.Message.getFieldWithDefault(msg, 3, ""),
    expiry: jspb.Message.getFieldWithDefault(msg, 4, ""),
    birth: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pwd2digit: jspb.Message.getFieldWithDefault(msg, 6, ""),
    customerName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    customerTel: jspb.Message.getFieldWithDefault(msg, 8, ""),
    customerEmail: jspb.Message.getFieldWithDefault(msg, 9, ""),
    customerAddr: jspb.Message.getFieldWithDefault(msg, 10, ""),
    customerPostcode: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.InsertCustomerBillingKeyRequest;
  return proto.subscribe_customers.InsertCustomerBillingKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPg(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardNumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpiry(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBirth(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPwd2digit(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerTel(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerEmail(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerAddr(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerPostcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.InsertCustomerBillingKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCardNumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExpiry();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBirth();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPwd2digit();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCustomerName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCustomerTel();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCustomerEmail();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCustomerAddr();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCustomerPostcode();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string customer_uid = 1;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getCustomerUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setCustomerUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string pg = 2;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getPg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setPg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string card_number = 3;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getCardNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setCardNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string expiry = 4;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getExpiry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setExpiry = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string birth = 5;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getBirth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setBirth = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string pwd_2digit = 6;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getPwd2digit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setPwd2digit = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string customer_name = 7;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getCustomerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setCustomerName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string customer_tel = 8;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getCustomerTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setCustomerTel = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string customer_email = 9;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getCustomerEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setCustomerEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string customer_addr = 10;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getCustomerAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setCustomerAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string customer_postcode = 11;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getCustomerPostcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setCustomerPostcode = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.InsertCustomerBillingKeyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.InsertCustomerBillingKeyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    response: (f = msg.getResponse()) && proto.subscribe_customers.CustomerBillingKey.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyResponse}
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.InsertCustomerBillingKeyResponse;
  return proto.subscribe_customers.InsertCustomerBillingKeyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.InsertCustomerBillingKeyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyResponse}
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.subscribe_customers.CustomerBillingKey;
      reader.readMessage(value,proto.subscribe_customers.CustomerBillingKey.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.InsertCustomerBillingKeyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.InsertCustomerBillingKeyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.subscribe_customers.CustomerBillingKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CustomerBillingKey response = 3;
 * @return {?proto.subscribe_customers.CustomerBillingKey}
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.getResponse = function() {
  return /** @type{?proto.subscribe_customers.CustomerBillingKey} */ (
    jspb.Message.getWrapperField(this, proto.subscribe_customers.CustomerBillingKey, 3));
};


/**
 * @param {?proto.subscribe_customers.CustomerBillingKey|undefined} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyResponse} returns this
*/
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.GetPaidByBillingKeyListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.GetPaidByBillingKeyListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerUid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    page: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListRequest}
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.GetPaidByBillingKeyListRequest;
  return proto.subscribe_customers.GetPaidByBillingKeyListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.GetPaidByBillingKeyListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListRequest}
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerUid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.GetPaidByBillingKeyListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.GetPaidByBillingKeyListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string customer_uid = 1;
 * @return {string}
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.prototype.getCustomerUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListRequest} returns this
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.prototype.setCustomerUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 page = 2;
 * @return {number}
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListRequest} returns this
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListData.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListData.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.NestedGetPaidByBillingKeyListData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.NestedGetPaidByBillingKeyListData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListData.toObject = function(includeInstance, msg) {
  var f, obj = {
    total: jspb.Message.getFieldWithDefault(msg, 1, 0),
    previous: jspb.Message.getFieldWithDefault(msg, 2, 0),
    next: jspb.Message.getFieldWithDefault(msg, 3, 0),
    listList: jspb.Message.toObjectList(msg.getListList(),
    v1_payment_payment_pb.Payment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.NestedGetPaidByBillingKeyListData}
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.NestedGetPaidByBillingKeyListData;
  return proto.subscribe_customers.NestedGetPaidByBillingKeyListData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.NestedGetPaidByBillingKeyListData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.NestedGetPaidByBillingKeyListData}
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotal(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrevious(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNext(value);
      break;
    case 4:
      var value = new v1_payment_payment_pb.Payment;
      reader.readMessage(value,v1_payment_payment_pb.Payment.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.NestedGetPaidByBillingKeyListData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.NestedGetPaidByBillingKeyListData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPrevious();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getNext();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      v1_payment_payment_pb.Payment.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 total = 1;
 * @return {number}
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListData.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.NestedGetPaidByBillingKeyListData} returns this
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListData.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 previous = 2;
 * @return {number}
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListData.prototype.getPrevious = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.NestedGetPaidByBillingKeyListData} returns this
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListData.prototype.setPrevious = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 next = 3;
 * @return {number}
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListData.prototype.getNext = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.NestedGetPaidByBillingKeyListData} returns this
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListData.prototype.setNext = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated payment.Payment list = 4;
 * @return {!Array<!proto.payment.Payment>}
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListData.prototype.getListList = function() {
  return /** @type{!Array<!proto.payment.Payment>} */ (
    jspb.Message.getRepeatedWrapperField(this, v1_payment_payment_pb.Payment, 4));
};


/**
 * @param {!Array<!proto.payment.Payment>} value
 * @return {!proto.subscribe_customers.NestedGetPaidByBillingKeyListData} returns this
*/
proto.subscribe_customers.NestedGetPaidByBillingKeyListData.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.payment.Payment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.payment.Payment}
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListData.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.payment.Payment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.subscribe_customers.NestedGetPaidByBillingKeyListData} returns this
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListData.prototype.clearListList = function() {
  return this.setListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.GetPaidByBillingKeyListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.GetPaidByBillingKeyListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    response: (f = msg.getResponse()) && proto.subscribe_customers.NestedGetPaidByBillingKeyListData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListResponse}
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.GetPaidByBillingKeyListResponse;
  return proto.subscribe_customers.GetPaidByBillingKeyListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.GetPaidByBillingKeyListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListResponse}
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.subscribe_customers.NestedGetPaidByBillingKeyListData;
      reader.readMessage(value,proto.subscribe_customers.NestedGetPaidByBillingKeyListData.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.GetPaidByBillingKeyListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.GetPaidByBillingKeyListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.subscribe_customers.NestedGetPaidByBillingKeyListData.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListResponse} returns this
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListResponse} returns this
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional NestedGetPaidByBillingKeyListData response = 3;
 * @return {?proto.subscribe_customers.NestedGetPaidByBillingKeyListData}
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.getResponse = function() {
  return /** @type{?proto.subscribe_customers.NestedGetPaidByBillingKeyListData} */ (
    jspb.Message.getWrapperField(this, proto.subscribe_customers.NestedGetPaidByBillingKeyListData, 3));
};


/**
 * @param {?proto.subscribe_customers.NestedGetPaidByBillingKeyListData|undefined} value
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListResponse} returns this
*/
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListResponse} returns this
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.subscribe_customers);
