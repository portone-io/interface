// source: v2/payments/card/card.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
goog.exportSymbol('proto.card_v2.CancelCardPaymentRequest', null, global);
goog.exportSymbol('proto.card_v2.CancelCardPaymenttResponse', null, global);
goog.exportSymbol('proto.card_v2.CancelHistory', null, global);
goog.exportSymbol('proto.card_v2.CardRegisterRequest', null, global);
goog.exportSymbol('proto.card_v2.CardRegisterResponse', null, global);
goog.exportSymbol('proto.card_v2.CardRegisterResultData', null, global);
goog.exportSymbol('proto.card_v2.DeleteCardInfoRequest', null, global);
goog.exportSymbol('proto.card_v2.DeleteCardInfoResponse', null, global);
goog.exportSymbol('proto.card_v2.GetCardInfoData', null, global);
goog.exportSymbol('proto.card_v2.GetCardInfoRequest', null, global);
goog.exportSymbol('proto.card_v2.GetCardInfoResponse', null, global);
goog.exportSymbol('proto.card_v2.PayByRegisteredCardData', null, global);
goog.exportSymbol('proto.card_v2.PayByRegisteredCardRequest', null, global);
goog.exportSymbol('proto.card_v2.PayByRegisteredCardResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_v2.CardRegisterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_v2.CardRegisterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_v2.CardRegisterRequest.displayName = 'proto.card_v2.CardRegisterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_v2.CardRegisterResultData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_v2.CardRegisterResultData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_v2.CardRegisterResultData.displayName = 'proto.card_v2.CardRegisterResultData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_v2.CardRegisterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_v2.CardRegisterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_v2.CardRegisterResponse.displayName = 'proto.card_v2.CardRegisterResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_v2.GetCardInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_v2.GetCardInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_v2.GetCardInfoRequest.displayName = 'proto.card_v2.GetCardInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_v2.GetCardInfoData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_v2.GetCardInfoData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_v2.GetCardInfoData.displayName = 'proto.card_v2.GetCardInfoData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_v2.GetCardInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_v2.GetCardInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_v2.GetCardInfoResponse.displayName = 'proto.card_v2.GetCardInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_v2.DeleteCardInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_v2.DeleteCardInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_v2.DeleteCardInfoRequest.displayName = 'proto.card_v2.DeleteCardInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_v2.DeleteCardInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_v2.DeleteCardInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_v2.DeleteCardInfoResponse.displayName = 'proto.card_v2.DeleteCardInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_v2.PayByRegisteredCardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_v2.PayByRegisteredCardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_v2.PayByRegisteredCardRequest.displayName = 'proto.card_v2.PayByRegisteredCardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_v2.PayByRegisteredCardData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.card_v2.PayByRegisteredCardData.repeatedFields_, null);
};
goog.inherits(proto.card_v2.PayByRegisteredCardData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_v2.PayByRegisteredCardData.displayName = 'proto.card_v2.PayByRegisteredCardData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_v2.PayByRegisteredCardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_v2.PayByRegisteredCardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_v2.PayByRegisteredCardResponse.displayName = 'proto.card_v2.PayByRegisteredCardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_v2.CancelHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_v2.CancelHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_v2.CancelHistory.displayName = 'proto.card_v2.CancelHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_v2.CancelCardPaymentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_v2.CancelCardPaymentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_v2.CancelCardPaymentRequest.displayName = 'proto.card_v2.CancelCardPaymentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_v2.CancelCardPaymenttResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_v2.CancelCardPaymenttResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_v2.CancelCardPaymenttResponse.displayName = 'proto.card_v2.CancelCardPaymenttResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_v2.CardRegisterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.card_v2.CardRegisterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_v2.CardRegisterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.CardRegisterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    cardUid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cardNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    expiry: jspb.Message.getFieldWithDefault(msg, 3, ""),
    birth: jspb.Message.getFieldWithDefault(msg, 4, ""),
    pwd2digit: jspb.Message.getFieldWithDefault(msg, 5, ""),
    customerName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    customerTel: jspb.Message.getFieldWithDefault(msg, 7, ""),
    customerEmail: jspb.Message.getFieldWithDefault(msg, 8, ""),
    customerAddr: jspb.Message.getFieldWithDefault(msg, 9, ""),
    customerPostcode: jspb.Message.getFieldWithDefault(msg, 10, ""),
    pg: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_v2.CardRegisterRequest}
 */
proto.card_v2.CardRegisterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_v2.CardRegisterRequest;
  return proto.card_v2.CardRegisterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_v2.CardRegisterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_v2.CardRegisterRequest}
 */
proto.card_v2.CardRegisterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpiry(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBirth(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPwd2digit(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerTel(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerEmail(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerAddr(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerPostcode(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_v2.CardRegisterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_v2.CardRegisterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_v2.CardRegisterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.CardRegisterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCardUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCardNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExpiry();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBirth();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPwd2digit();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCustomerName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCustomerTel();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCustomerEmail();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCustomerAddr();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCustomerPostcode();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPg();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string card_uid = 1;
 * @return {string}
 */
proto.card_v2.CardRegisterRequest.prototype.getCardUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterRequest} returns this
 */
proto.card_v2.CardRegisterRequest.prototype.setCardUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string card_number = 2;
 * @return {string}
 */
proto.card_v2.CardRegisterRequest.prototype.getCardNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterRequest} returns this
 */
proto.card_v2.CardRegisterRequest.prototype.setCardNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string expiry = 3;
 * @return {string}
 */
proto.card_v2.CardRegisterRequest.prototype.getExpiry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterRequest} returns this
 */
proto.card_v2.CardRegisterRequest.prototype.setExpiry = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string birth = 4;
 * @return {string}
 */
proto.card_v2.CardRegisterRequest.prototype.getBirth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterRequest} returns this
 */
proto.card_v2.CardRegisterRequest.prototype.setBirth = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string pwd_2digit = 5;
 * @return {string}
 */
proto.card_v2.CardRegisterRequest.prototype.getPwd2digit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterRequest} returns this
 */
proto.card_v2.CardRegisterRequest.prototype.setPwd2digit = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string customer_name = 6;
 * @return {string}
 */
proto.card_v2.CardRegisterRequest.prototype.getCustomerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterRequest} returns this
 */
proto.card_v2.CardRegisterRequest.prototype.setCustomerName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string customer_tel = 7;
 * @return {string}
 */
proto.card_v2.CardRegisterRequest.prototype.getCustomerTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterRequest} returns this
 */
proto.card_v2.CardRegisterRequest.prototype.setCustomerTel = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string customer_email = 8;
 * @return {string}
 */
proto.card_v2.CardRegisterRequest.prototype.getCustomerEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterRequest} returns this
 */
proto.card_v2.CardRegisterRequest.prototype.setCustomerEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string customer_addr = 9;
 * @return {string}
 */
proto.card_v2.CardRegisterRequest.prototype.getCustomerAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterRequest} returns this
 */
proto.card_v2.CardRegisterRequest.prototype.setCustomerAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string customer_postcode = 10;
 * @return {string}
 */
proto.card_v2.CardRegisterRequest.prototype.getCustomerPostcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterRequest} returns this
 */
proto.card_v2.CardRegisterRequest.prototype.setCustomerPostcode = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string pg = 11;
 * @return {string}
 */
proto.card_v2.CardRegisterRequest.prototype.getPg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterRequest} returns this
 */
proto.card_v2.CardRegisterRequest.prototype.setPg = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_v2.CardRegisterResultData.prototype.toObject = function(opt_includeInstance) {
  return proto.card_v2.CardRegisterResultData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_v2.CardRegisterResultData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.CardRegisterResultData.toObject = function(includeInstance, msg) {
  var f, obj = {
    cardUid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cardName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cardCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    binNumbrer: jspb.Message.getFieldWithDefault(msg, 4, ""),
    cardType: jspb.Message.getFieldWithDefault(msg, 5, 0),
    customerName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    customerTel: jspb.Message.getFieldWithDefault(msg, 7, ""),
    customerEmail: jspb.Message.getFieldWithDefault(msg, 8, ""),
    customerAddr: jspb.Message.getFieldWithDefault(msg, 9, ""),
    customerPostcode: jspb.Message.getFieldWithDefault(msg, 10, ""),
    inserted: jspb.Message.getFieldWithDefault(msg, 11, 0),
    updated: jspb.Message.getFieldWithDefault(msg, 12, 0),
    pgProvider: jspb.Message.getFieldWithDefault(msg, 13, ""),
    pgId: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_v2.CardRegisterResultData}
 */
proto.card_v2.CardRegisterResultData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_v2.CardRegisterResultData;
  return proto.card_v2.CardRegisterResultData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_v2.CardRegisterResultData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_v2.CardRegisterResultData}
 */
proto.card_v2.CardRegisterResultData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinNumbrer(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCardType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerTel(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerEmail(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerAddr(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerPostcode(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInserted(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUpdated(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setPgProvider(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setPgId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_v2.CardRegisterResultData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_v2.CardRegisterResultData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_v2.CardRegisterResultData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.CardRegisterResultData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCardUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCardName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCardCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBinNumbrer();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCardType();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCustomerName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCustomerTel();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCustomerEmail();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCustomerAddr();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCustomerPostcode();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getInserted();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getUpdated();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getPgProvider();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getPgId();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string card_uid = 1;
 * @return {string}
 */
proto.card_v2.CardRegisterResultData.prototype.getCardUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterResultData} returns this
 */
proto.card_v2.CardRegisterResultData.prototype.setCardUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string card_name = 2;
 * @return {string}
 */
proto.card_v2.CardRegisterResultData.prototype.getCardName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterResultData} returns this
 */
proto.card_v2.CardRegisterResultData.prototype.setCardName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string card_code = 3;
 * @return {string}
 */
proto.card_v2.CardRegisterResultData.prototype.getCardCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterResultData} returns this
 */
proto.card_v2.CardRegisterResultData.prototype.setCardCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string bin_numbrer = 4;
 * @return {string}
 */
proto.card_v2.CardRegisterResultData.prototype.getBinNumbrer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterResultData} returns this
 */
proto.card_v2.CardRegisterResultData.prototype.setBinNumbrer = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 card_type = 5;
 * @return {number}
 */
proto.card_v2.CardRegisterResultData.prototype.getCardType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.CardRegisterResultData} returns this
 */
proto.card_v2.CardRegisterResultData.prototype.setCardType = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string customer_name = 6;
 * @return {string}
 */
proto.card_v2.CardRegisterResultData.prototype.getCustomerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterResultData} returns this
 */
proto.card_v2.CardRegisterResultData.prototype.setCustomerName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string customer_tel = 7;
 * @return {string}
 */
proto.card_v2.CardRegisterResultData.prototype.getCustomerTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterResultData} returns this
 */
proto.card_v2.CardRegisterResultData.prototype.setCustomerTel = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string customer_email = 8;
 * @return {string}
 */
proto.card_v2.CardRegisterResultData.prototype.getCustomerEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterResultData} returns this
 */
proto.card_v2.CardRegisterResultData.prototype.setCustomerEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string customer_addr = 9;
 * @return {string}
 */
proto.card_v2.CardRegisterResultData.prototype.getCustomerAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterResultData} returns this
 */
proto.card_v2.CardRegisterResultData.prototype.setCustomerAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string customer_postcode = 10;
 * @return {string}
 */
proto.card_v2.CardRegisterResultData.prototype.getCustomerPostcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterResultData} returns this
 */
proto.card_v2.CardRegisterResultData.prototype.setCustomerPostcode = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 inserted = 11;
 * @return {number}
 */
proto.card_v2.CardRegisterResultData.prototype.getInserted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.CardRegisterResultData} returns this
 */
proto.card_v2.CardRegisterResultData.prototype.setInserted = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 updated = 12;
 * @return {number}
 */
proto.card_v2.CardRegisterResultData.prototype.getUpdated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.CardRegisterResultData} returns this
 */
proto.card_v2.CardRegisterResultData.prototype.setUpdated = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string pg_provider = 13;
 * @return {string}
 */
proto.card_v2.CardRegisterResultData.prototype.getPgProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterResultData} returns this
 */
proto.card_v2.CardRegisterResultData.prototype.setPgProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string pg_id = 14;
 * @return {string}
 */
proto.card_v2.CardRegisterResultData.prototype.getPgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterResultData} returns this
 */
proto.card_v2.CardRegisterResultData.prototype.setPgId = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_v2.CardRegisterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.card_v2.CardRegisterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_v2.CardRegisterResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.CardRegisterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    response: (f = msg.getResponse()) && proto.card_v2.CardRegisterResultData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_v2.CardRegisterResponse}
 */
proto.card_v2.CardRegisterResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_v2.CardRegisterResponse;
  return proto.card_v2.CardRegisterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_v2.CardRegisterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_v2.CardRegisterResponse}
 */
proto.card_v2.CardRegisterResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.card_v2.CardRegisterResultData;
      reader.readMessage(value,proto.card_v2.CardRegisterResultData.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_v2.CardRegisterResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_v2.CardRegisterResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_v2.CardRegisterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.CardRegisterResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.card_v2.CardRegisterResultData.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.card_v2.CardRegisterResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.CardRegisterResponse} returns this
 */
proto.card_v2.CardRegisterResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.card_v2.CardRegisterResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CardRegisterResponse} returns this
 */
proto.card_v2.CardRegisterResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CardRegisterResultData response = 3;
 * @return {?proto.card_v2.CardRegisterResultData}
 */
proto.card_v2.CardRegisterResponse.prototype.getResponse = function() {
  return /** @type{?proto.card_v2.CardRegisterResultData} */ (
    jspb.Message.getWrapperField(this, proto.card_v2.CardRegisterResultData, 3));
};


/**
 * @param {?proto.card_v2.CardRegisterResultData|undefined} value
 * @return {!proto.card_v2.CardRegisterResponse} returns this
*/
proto.card_v2.CardRegisterResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.card_v2.CardRegisterResponse} returns this
 */
proto.card_v2.CardRegisterResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.card_v2.CardRegisterResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_v2.GetCardInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.card_v2.GetCardInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_v2.GetCardInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.GetCardInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    cardUid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_v2.GetCardInfoRequest}
 */
proto.card_v2.GetCardInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_v2.GetCardInfoRequest;
  return proto.card_v2.GetCardInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_v2.GetCardInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_v2.GetCardInfoRequest}
 */
proto.card_v2.GetCardInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_v2.GetCardInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_v2.GetCardInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_v2.GetCardInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.GetCardInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCardUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string card_uid = 1;
 * @return {string}
 */
proto.card_v2.GetCardInfoRequest.prototype.getCardUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.GetCardInfoRequest} returns this
 */
proto.card_v2.GetCardInfoRequest.prototype.setCardUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_v2.GetCardInfoData.prototype.toObject = function(opt_includeInstance) {
  return proto.card_v2.GetCardInfoData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_v2.GetCardInfoData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.GetCardInfoData.toObject = function(includeInstance, msg) {
  var f, obj = {
    cardUid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cardProvider: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cardCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    binNumber: jspb.Message.getFieldWithDefault(msg, 4, ""),
    cardType: jspb.Message.getFieldWithDefault(msg, 5, 0),
    customerName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    customerTel: jspb.Message.getFieldWithDefault(msg, 7, ""),
    customerEmail: jspb.Message.getFieldWithDefault(msg, 8, ""),
    customerAddr: jspb.Message.getFieldWithDefault(msg, 9, ""),
    customerPostcode: jspb.Message.getFieldWithDefault(msg, 10, ""),
    inserted: jspb.Message.getFieldWithDefault(msg, 11, 0),
    updated: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_v2.GetCardInfoData}
 */
proto.card_v2.GetCardInfoData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_v2.GetCardInfoData;
  return proto.card_v2.GetCardInfoData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_v2.GetCardInfoData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_v2.GetCardInfoData}
 */
proto.card_v2.GetCardInfoData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardProvider(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinNumber(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCardType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerTel(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerEmail(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerAddr(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerPostcode(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInserted(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_v2.GetCardInfoData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_v2.GetCardInfoData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_v2.GetCardInfoData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.GetCardInfoData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCardUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCardProvider();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCardCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBinNumber();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCardType();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCustomerName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCustomerTel();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCustomerEmail();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCustomerAddr();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCustomerPostcode();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getInserted();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getUpdated();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
};


/**
 * optional string card_uid = 1;
 * @return {string}
 */
proto.card_v2.GetCardInfoData.prototype.getCardUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.GetCardInfoData} returns this
 */
proto.card_v2.GetCardInfoData.prototype.setCardUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string card_provider = 2;
 * @return {string}
 */
proto.card_v2.GetCardInfoData.prototype.getCardProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.GetCardInfoData} returns this
 */
proto.card_v2.GetCardInfoData.prototype.setCardProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string card_code = 3;
 * @return {string}
 */
proto.card_v2.GetCardInfoData.prototype.getCardCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.GetCardInfoData} returns this
 */
proto.card_v2.GetCardInfoData.prototype.setCardCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string bin_number = 4;
 * @return {string}
 */
proto.card_v2.GetCardInfoData.prototype.getBinNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.GetCardInfoData} returns this
 */
proto.card_v2.GetCardInfoData.prototype.setBinNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 card_type = 5;
 * @return {number}
 */
proto.card_v2.GetCardInfoData.prototype.getCardType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.GetCardInfoData} returns this
 */
proto.card_v2.GetCardInfoData.prototype.setCardType = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string customer_name = 6;
 * @return {string}
 */
proto.card_v2.GetCardInfoData.prototype.getCustomerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.GetCardInfoData} returns this
 */
proto.card_v2.GetCardInfoData.prototype.setCustomerName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string customer_tel = 7;
 * @return {string}
 */
proto.card_v2.GetCardInfoData.prototype.getCustomerTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.GetCardInfoData} returns this
 */
proto.card_v2.GetCardInfoData.prototype.setCustomerTel = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string customer_email = 8;
 * @return {string}
 */
proto.card_v2.GetCardInfoData.prototype.getCustomerEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.GetCardInfoData} returns this
 */
proto.card_v2.GetCardInfoData.prototype.setCustomerEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string customer_addr = 9;
 * @return {string}
 */
proto.card_v2.GetCardInfoData.prototype.getCustomerAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.GetCardInfoData} returns this
 */
proto.card_v2.GetCardInfoData.prototype.setCustomerAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string customer_postcode = 10;
 * @return {string}
 */
proto.card_v2.GetCardInfoData.prototype.getCustomerPostcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.GetCardInfoData} returns this
 */
proto.card_v2.GetCardInfoData.prototype.setCustomerPostcode = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 inserted = 11;
 * @return {number}
 */
proto.card_v2.GetCardInfoData.prototype.getInserted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.GetCardInfoData} returns this
 */
proto.card_v2.GetCardInfoData.prototype.setInserted = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 updated = 12;
 * @return {number}
 */
proto.card_v2.GetCardInfoData.prototype.getUpdated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.GetCardInfoData} returns this
 */
proto.card_v2.GetCardInfoData.prototype.setUpdated = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_v2.GetCardInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.card_v2.GetCardInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_v2.GetCardInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.GetCardInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    response: (f = msg.getResponse()) && proto.card_v2.GetCardInfoData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_v2.GetCardInfoResponse}
 */
proto.card_v2.GetCardInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_v2.GetCardInfoResponse;
  return proto.card_v2.GetCardInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_v2.GetCardInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_v2.GetCardInfoResponse}
 */
proto.card_v2.GetCardInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.card_v2.GetCardInfoData;
      reader.readMessage(value,proto.card_v2.GetCardInfoData.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_v2.GetCardInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_v2.GetCardInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_v2.GetCardInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.GetCardInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.card_v2.GetCardInfoData.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.card_v2.GetCardInfoResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.GetCardInfoResponse} returns this
 */
proto.card_v2.GetCardInfoResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.card_v2.GetCardInfoResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.GetCardInfoResponse} returns this
 */
proto.card_v2.GetCardInfoResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional GetCardInfoData response = 3;
 * @return {?proto.card_v2.GetCardInfoData}
 */
proto.card_v2.GetCardInfoResponse.prototype.getResponse = function() {
  return /** @type{?proto.card_v2.GetCardInfoData} */ (
    jspb.Message.getWrapperField(this, proto.card_v2.GetCardInfoData, 3));
};


/**
 * @param {?proto.card_v2.GetCardInfoData|undefined} value
 * @return {!proto.card_v2.GetCardInfoResponse} returns this
*/
proto.card_v2.GetCardInfoResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.card_v2.GetCardInfoResponse} returns this
 */
proto.card_v2.GetCardInfoResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.card_v2.GetCardInfoResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_v2.DeleteCardInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.card_v2.DeleteCardInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_v2.DeleteCardInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.DeleteCardInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    cardUid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_v2.DeleteCardInfoRequest}
 */
proto.card_v2.DeleteCardInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_v2.DeleteCardInfoRequest;
  return proto.card_v2.DeleteCardInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_v2.DeleteCardInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_v2.DeleteCardInfoRequest}
 */
proto.card_v2.DeleteCardInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_v2.DeleteCardInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_v2.DeleteCardInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_v2.DeleteCardInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.DeleteCardInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCardUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string card_uid = 1;
 * @return {string}
 */
proto.card_v2.DeleteCardInfoRequest.prototype.getCardUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.DeleteCardInfoRequest} returns this
 */
proto.card_v2.DeleteCardInfoRequest.prototype.setCardUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_v2.DeleteCardInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.card_v2.DeleteCardInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_v2.DeleteCardInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.DeleteCardInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_v2.DeleteCardInfoResponse}
 */
proto.card_v2.DeleteCardInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_v2.DeleteCardInfoResponse;
  return proto.card_v2.DeleteCardInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_v2.DeleteCardInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_v2.DeleteCardInfoResponse}
 */
proto.card_v2.DeleteCardInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_v2.DeleteCardInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_v2.DeleteCardInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_v2.DeleteCardInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.DeleteCardInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.card_v2.DeleteCardInfoResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.DeleteCardInfoResponse} returns this
 */
proto.card_v2.DeleteCardInfoResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.card_v2.DeleteCardInfoResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.DeleteCardInfoResponse} returns this
 */
proto.card_v2.DeleteCardInfoResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.card_v2.PayByRegisteredCardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_v2.PayByRegisteredCardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.PayByRegisteredCardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    cardUid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    merchantUid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 3, ""),
    taxFreeAmount: jspb.Message.getFieldWithDefault(msg, 4, ""),
    orderName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    cardInstallment: jspb.Message.getFieldWithDefault(msg, 6, 0),
    interestFreeByMerchant: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    customData: jspb.Message.getFieldWithDefault(msg, 8, ""),
    callbackUrl: jspb.Message.getFieldWithDefault(msg, 9, ""),
    buyerAddr: jspb.Message.getFieldWithDefault(msg, 10, ""),
    buyerEmail: jspb.Message.getFieldWithDefault(msg, 11, ""),
    buyerName: jspb.Message.getFieldWithDefault(msg, 12, ""),
    buyerPostcode: jspb.Message.getFieldWithDefault(msg, 13, ""),
    buyerTel: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_v2.PayByRegisteredCardRequest}
 */
proto.card_v2.PayByRegisteredCardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_v2.PayByRegisteredCardRequest;
  return proto.card_v2.PayByRegisteredCardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_v2.PayByRegisteredCardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_v2.PayByRegisteredCardRequest}
 */
proto.card_v2.PayByRegisteredCardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantUid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaxFreeAmount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderName(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCardInstallment(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInterestFreeByMerchant(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomData(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallbackUrl(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerAddr(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerEmail(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerName(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerPostcode(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerTel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_v2.PayByRegisteredCardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_v2.PayByRegisteredCardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.PayByRegisteredCardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCardUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMerchantUid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTaxFreeAmount();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOrderName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCardInstallment();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getInterestFreeByMerchant();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getCustomData();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCallbackUrl();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getBuyerAddr();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getBuyerEmail();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getBuyerName();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getBuyerPostcode();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getBuyerTel();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string card_uid = 1;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.getCardUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardRequest} returns this
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.setCardUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string merchant_uid = 2;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.getMerchantUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardRequest} returns this
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.setMerchantUid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string amount = 3;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardRequest} returns this
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string tax_free_amount = 4;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.getTaxFreeAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardRequest} returns this
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.setTaxFreeAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string order_name = 5;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.getOrderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardRequest} returns this
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.setOrderName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 card_installment = 6;
 * @return {number}
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.getCardInstallment = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.PayByRegisteredCardRequest} returns this
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.setCardInstallment = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool interest_free_by_merchant = 7;
 * @return {boolean}
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.getInterestFreeByMerchant = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.card_v2.PayByRegisteredCardRequest} returns this
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.setInterestFreeByMerchant = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string custom_data = 8;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.getCustomData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardRequest} returns this
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.setCustomData = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string callback_url = 9;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.getCallbackUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardRequest} returns this
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.setCallbackUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string buyer_addr = 10;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.getBuyerAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardRequest} returns this
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.setBuyerAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string buyer_email = 11;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.getBuyerEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardRequest} returns this
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.setBuyerEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string buyer_name = 12;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.getBuyerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardRequest} returns this
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.setBuyerName = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string buyer_postcode = 13;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.getBuyerPostcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardRequest} returns this
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.setBuyerPostcode = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string buyer_tel = 14;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.getBuyerTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardRequest} returns this
 */
proto.card_v2.PayByRegisteredCardRequest.prototype.setBuyerTel = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.card_v2.PayByRegisteredCardData.repeatedFields_ = [9,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_v2.PayByRegisteredCardData.prototype.toObject = function(opt_includeInstance) {
  return proto.card_v2.PayByRegisteredCardData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_v2.PayByRegisteredCardData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.PayByRegisteredCardData.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: jspb.Message.getFieldWithDefault(msg, 1, ""),
    applyNum: jspb.Message.getFieldWithDefault(msg, 2, ""),
    buyerAddr: jspb.Message.getFieldWithDefault(msg, 3, ""),
    buyerEmail: jspb.Message.getFieldWithDefault(msg, 4, ""),
    buyerName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    buyerPostcode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    buyerTel: jspb.Message.getFieldWithDefault(msg, 7, ""),
    cancelAmount: jspb.Message.getFieldWithDefault(msg, 8, ""),
    cancelHistoryList: jspb.Message.toObjectList(msg.getCancelHistoryList(),
    proto.card_v2.CancelHistory.toObject, includeInstance),
    cancelReason: jspb.Message.getFieldWithDefault(msg, 10, ""),
    cancelReceiptUrlsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    cancelledAt: jspb.Message.getFieldWithDefault(msg, 12, 0),
    cardCode: jspb.Message.getFieldWithDefault(msg, 13, ""),
    cardName: jspb.Message.getFieldWithDefault(msg, 14, ""),
    binNumber: jspb.Message.getFieldWithDefault(msg, 15, ""),
    cardInstallment: jspb.Message.getFieldWithDefault(msg, 16, 0),
    cardType: jspb.Message.getFieldWithDefault(msg, 17, 0),
    cashReceiptIssued: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    channel: jspb.Message.getFieldWithDefault(msg, 19, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 20, ""),
    customData: jspb.Message.getFieldWithDefault(msg, 21, ""),
    cardUid: jspb.Message.getFieldWithDefault(msg, 22, ""),
    customerUidUsage: jspb.Message.getFieldWithDefault(msg, 23, ""),
    failReason: jspb.Message.getFieldWithDefault(msg, 24, ""),
    failedAt: jspb.Message.getFieldWithDefault(msg, 25, 0),
    impUid: jspb.Message.getFieldWithDefault(msg, 26, ""),
    merchantUid: jspb.Message.getFieldWithDefault(msg, 27, ""),
    orderName: jspb.Message.getFieldWithDefault(msg, 28, ""),
    paidAt: jspb.Message.getFieldWithDefault(msg, 29, 0),
    payMethod: jspb.Message.getFieldWithDefault(msg, 30, ""),
    pgId: jspb.Message.getFieldWithDefault(msg, 31, ""),
    pgProvider: jspb.Message.getFieldWithDefault(msg, 32, ""),
    pgTid: jspb.Message.getFieldWithDefault(msg, 33, ""),
    receiptUrl: jspb.Message.getFieldWithDefault(msg, 34, ""),
    startedAt: jspb.Message.getFieldWithDefault(msg, 35, 0),
    status: jspb.Message.getFieldWithDefault(msg, 36, ""),
    userAgent: jspb.Message.getFieldWithDefault(msg, 37, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_v2.PayByRegisteredCardData}
 */
proto.card_v2.PayByRegisteredCardData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_v2.PayByRegisteredCardData;
  return proto.card_v2.PayByRegisteredCardData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_v2.PayByRegisteredCardData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_v2.PayByRegisteredCardData}
 */
proto.card_v2.PayByRegisteredCardData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplyNum(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerAddr(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerEmail(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerPostcode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerTel(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCancelAmount(value);
      break;
    case 9:
      var value = new proto.card_v2.CancelHistory;
      reader.readMessage(value,proto.card_v2.CancelHistory.deserializeBinaryFromReader);
      msg.addCancelHistory(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCancelReason(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addCancelReceiptUrls(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCancelledAt(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardCode(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardName(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinNumber(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCardInstallment(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCardType(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCashReceiptIssued(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomData(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardUid(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerUidUsage(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailReason(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFailedAt(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setImpUid(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantUid(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderName(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaidAt(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayMethod(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setPgId(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setPgProvider(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setPgTid(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiptUrl(value);
      break;
    case 35:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStartedAt(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserAgent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_v2.PayByRegisteredCardData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_v2.PayByRegisteredCardData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_v2.PayByRegisteredCardData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.PayByRegisteredCardData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApplyNum();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBuyerAddr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBuyerEmail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBuyerName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBuyerPostcode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBuyerTel();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCancelAmount();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCancelHistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.card_v2.CancelHistory.serializeBinaryToWriter
    );
  }
  f = message.getCancelReason();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCancelReceiptUrlsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getCancelledAt();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getCardCode();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getCardName();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getBinNumber();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getCardInstallment();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getCardType();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getCashReceiptIssued();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getCustomData();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getCardUid();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getCustomerUidUsage();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getFailReason();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getFailedAt();
  if (f !== 0) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = message.getImpUid();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getMerchantUid();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getOrderName();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getPaidAt();
  if (f !== 0) {
    writer.writeInt32(
      29,
      f
    );
  }
  f = message.getPayMethod();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getPgId();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getPgProvider();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getPgTid();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getReceiptUrl();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getStartedAt();
  if (f !== 0) {
    writer.writeInt32(
      35,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      36,
      f
    );
  }
  f = message.getUserAgent();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
};


/**
 * optional string amount = 1;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string apply_num = 2;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getApplyNum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setApplyNum = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string buyer_addr = 3;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getBuyerAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setBuyerAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string buyer_email = 4;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getBuyerEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setBuyerEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string buyer_name = 5;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getBuyerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setBuyerName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string buyer_postcode = 6;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getBuyerPostcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setBuyerPostcode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string buyer_tel = 7;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getBuyerTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setBuyerTel = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string cancel_amount = 8;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getCancelAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setCancelAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated CancelHistory cancel_history = 9;
 * @return {!Array<!proto.card_v2.CancelHistory>}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getCancelHistoryList = function() {
  return /** @type{!Array<!proto.card_v2.CancelHistory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.card_v2.CancelHistory, 9));
};


/**
 * @param {!Array<!proto.card_v2.CancelHistory>} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
*/
proto.card_v2.PayByRegisteredCardData.prototype.setCancelHistoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.card_v2.CancelHistory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.card_v2.CancelHistory}
 */
proto.card_v2.PayByRegisteredCardData.prototype.addCancelHistory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.card_v2.CancelHistory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.clearCancelHistoryList = function() {
  return this.setCancelHistoryList([]);
};


/**
 * optional string cancel_reason = 10;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getCancelReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setCancelReason = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated string cancel_receipt_urls = 11;
 * @return {!Array<string>}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getCancelReceiptUrlsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setCancelReceiptUrlsList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.addCancelReceiptUrls = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.clearCancelReceiptUrlsList = function() {
  return this.setCancelReceiptUrlsList([]);
};


/**
 * optional int32 cancelled_at = 12;
 * @return {number}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getCancelledAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setCancelledAt = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string card_code = 13;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getCardCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setCardCode = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string card_name = 14;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getCardName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setCardName = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string bin_number = 15;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getBinNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setBinNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional int32 card_installment = 16;
 * @return {number}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getCardInstallment = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setCardInstallment = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int32 card_type = 17;
 * @return {number}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getCardType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setCardType = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional bool cash_receipt_issued = 18;
 * @return {boolean}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getCashReceiptIssued = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setCashReceiptIssued = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional string channel = 19;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string currency = 20;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string custom_data = 21;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getCustomData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setCustomData = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string card_uid = 22;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getCardUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setCardUid = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string customer_uid_usage = 23;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getCustomerUidUsage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setCustomerUidUsage = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string fail_reason = 24;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getFailReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setFailReason = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional int32 failed_at = 25;
 * @return {number}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getFailedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setFailedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional string imp_uid = 26;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getImpUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setImpUid = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string merchant_uid = 27;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getMerchantUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setMerchantUid = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string order_name = 28;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getOrderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setOrderName = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional int32 paid_at = 29;
 * @return {number}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getPaidAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setPaidAt = function(value) {
  return jspb.Message.setProto3IntField(this, 29, value);
};


/**
 * optional string pay_method = 30;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getPayMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setPayMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string pg_id = 31;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getPgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setPgId = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string pg_provider = 32;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getPgProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setPgProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional string pg_tid = 33;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getPgTid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setPgTid = function(value) {
  return jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional string receipt_url = 34;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getReceiptUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setReceiptUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional int32 started_at = 35;
 * @return {number}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getStartedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 35, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setStartedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 35, value);
};


/**
 * optional string status = 36;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 36, value);
};


/**
 * optional string user_agent = 37;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardData.prototype.getUserAgent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardData} returns this
 */
proto.card_v2.PayByRegisteredCardData.prototype.setUserAgent = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_v2.PayByRegisteredCardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.card_v2.PayByRegisteredCardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_v2.PayByRegisteredCardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.PayByRegisteredCardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    response: (f = msg.getResponse()) && proto.card_v2.PayByRegisteredCardData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_v2.PayByRegisteredCardResponse}
 */
proto.card_v2.PayByRegisteredCardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_v2.PayByRegisteredCardResponse;
  return proto.card_v2.PayByRegisteredCardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_v2.PayByRegisteredCardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_v2.PayByRegisteredCardResponse}
 */
proto.card_v2.PayByRegisteredCardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.card_v2.PayByRegisteredCardData;
      reader.readMessage(value,proto.card_v2.PayByRegisteredCardData.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_v2.PayByRegisteredCardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_v2.PayByRegisteredCardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_v2.PayByRegisteredCardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.PayByRegisteredCardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.card_v2.PayByRegisteredCardData.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.card_v2.PayByRegisteredCardResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.PayByRegisteredCardResponse} returns this
 */
proto.card_v2.PayByRegisteredCardResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.card_v2.PayByRegisteredCardResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.PayByRegisteredCardResponse} returns this
 */
proto.card_v2.PayByRegisteredCardResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional PayByRegisteredCardData response = 3;
 * @return {?proto.card_v2.PayByRegisteredCardData}
 */
proto.card_v2.PayByRegisteredCardResponse.prototype.getResponse = function() {
  return /** @type{?proto.card_v2.PayByRegisteredCardData} */ (
    jspb.Message.getWrapperField(this, proto.card_v2.PayByRegisteredCardData, 3));
};


/**
 * @param {?proto.card_v2.PayByRegisteredCardData|undefined} value
 * @return {!proto.card_v2.PayByRegisteredCardResponse} returns this
*/
proto.card_v2.PayByRegisteredCardResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.card_v2.PayByRegisteredCardResponse} returns this
 */
proto.card_v2.PayByRegisteredCardResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.card_v2.PayByRegisteredCardResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_v2.CancelHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.card_v2.CancelHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_v2.CancelHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.CancelHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    pgTid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cancelledAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    reason: jspb.Message.getFieldWithDefault(msg, 4, ""),
    receiptUrl: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_v2.CancelHistory}
 */
proto.card_v2.CancelHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_v2.CancelHistory;
  return proto.card_v2.CancelHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_v2.CancelHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_v2.CancelHistory}
 */
proto.card_v2.CancelHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPgTid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCancelledAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiptUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_v2.CancelHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_v2.CancelHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_v2.CancelHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.CancelHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPgTid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCancelledAt();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getReceiptUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string pg_tid = 1;
 * @return {string}
 */
proto.card_v2.CancelHistory.prototype.getPgTid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CancelHistory} returns this
 */
proto.card_v2.CancelHistory.prototype.setPgTid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amount = 2;
 * @return {string}
 */
proto.card_v2.CancelHistory.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CancelHistory} returns this
 */
proto.card_v2.CancelHistory.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 cancelled_at = 3;
 * @return {number}
 */
proto.card_v2.CancelHistory.prototype.getCancelledAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.CancelHistory} returns this
 */
proto.card_v2.CancelHistory.prototype.setCancelledAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string reason = 4;
 * @return {string}
 */
proto.card_v2.CancelHistory.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CancelHistory} returns this
 */
proto.card_v2.CancelHistory.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string receipt_url = 5;
 * @return {string}
 */
proto.card_v2.CancelHistory.prototype.getReceiptUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CancelHistory} returns this
 */
proto.card_v2.CancelHistory.prototype.setReceiptUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_v2.CancelCardPaymentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.card_v2.CancelCardPaymentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_v2.CancelCardPaymentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.CancelCardPaymentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    impUid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, ""),
    merchantUid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    taxFreeAmount: jspb.Message.getFieldWithDefault(msg, 4, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_v2.CancelCardPaymentRequest}
 */
proto.card_v2.CancelCardPaymentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_v2.CancelCardPaymentRequest;
  return proto.card_v2.CancelCardPaymentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_v2.CancelCardPaymentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_v2.CancelCardPaymentRequest}
 */
proto.card_v2.CancelCardPaymentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImpUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantUid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaxFreeAmount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_v2.CancelCardPaymentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_v2.CancelCardPaymentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_v2.CancelCardPaymentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.CancelCardPaymentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImpUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMerchantUid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTaxFreeAmount();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string imp_uid = 1;
 * @return {string}
 */
proto.card_v2.CancelCardPaymentRequest.prototype.getImpUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CancelCardPaymentRequest} returns this
 */
proto.card_v2.CancelCardPaymentRequest.prototype.setImpUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amount = 2;
 * @return {string}
 */
proto.card_v2.CancelCardPaymentRequest.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CancelCardPaymentRequest} returns this
 */
proto.card_v2.CancelCardPaymentRequest.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string merchant_uid = 3;
 * @return {string}
 */
proto.card_v2.CancelCardPaymentRequest.prototype.getMerchantUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CancelCardPaymentRequest} returns this
 */
proto.card_v2.CancelCardPaymentRequest.prototype.setMerchantUid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string tax_free_amount = 4;
 * @return {string}
 */
proto.card_v2.CancelCardPaymentRequest.prototype.getTaxFreeAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CancelCardPaymentRequest} returns this
 */
proto.card_v2.CancelCardPaymentRequest.prototype.setTaxFreeAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string reason = 5;
 * @return {string}
 */
proto.card_v2.CancelCardPaymentRequest.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CancelCardPaymentRequest} returns this
 */
proto.card_v2.CancelCardPaymentRequest.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_v2.CancelCardPaymenttResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.card_v2.CancelCardPaymenttResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_v2.CancelCardPaymenttResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.CancelCardPaymenttResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    response: (f = msg.getResponse()) && proto.card_v2.PayByRegisteredCardData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_v2.CancelCardPaymenttResponse}
 */
proto.card_v2.CancelCardPaymenttResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_v2.CancelCardPaymenttResponse;
  return proto.card_v2.CancelCardPaymenttResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_v2.CancelCardPaymenttResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_v2.CancelCardPaymenttResponse}
 */
proto.card_v2.CancelCardPaymenttResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.card_v2.PayByRegisteredCardData;
      reader.readMessage(value,proto.card_v2.PayByRegisteredCardData.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_v2.CancelCardPaymenttResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_v2.CancelCardPaymenttResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_v2.CancelCardPaymenttResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_v2.CancelCardPaymenttResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.card_v2.PayByRegisteredCardData.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.card_v2.CancelCardPaymenttResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_v2.CancelCardPaymenttResponse} returns this
 */
proto.card_v2.CancelCardPaymenttResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.card_v2.CancelCardPaymenttResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_v2.CancelCardPaymenttResponse} returns this
 */
proto.card_v2.CancelCardPaymenttResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional PayByRegisteredCardData response = 3;
 * @return {?proto.card_v2.PayByRegisteredCardData}
 */
proto.card_v2.CancelCardPaymenttResponse.prototype.getResponse = function() {
  return /** @type{?proto.card_v2.PayByRegisteredCardData} */ (
    jspb.Message.getWrapperField(this, proto.card_v2.PayByRegisteredCardData, 3));
};


/**
 * @param {?proto.card_v2.PayByRegisteredCardData|undefined} value
 * @return {!proto.card_v2.CancelCardPaymenttResponse} returns this
*/
proto.card_v2.CancelCardPaymenttResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.card_v2.CancelCardPaymenttResponse} returns this
 */
proto.card_v2.CancelCardPaymenttResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.card_v2.CancelCardPaymenttResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.card_v2);
