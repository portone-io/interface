syntax = "proto3";
package payment;

import "google/api/annotations.proto";
option go_package = "github.com/iamport/interface/gen_src/go/v1/payment";
option csharp_namespace = "V1.Payment";

service PaymentService {
    rpc PaymentBalanceRPC(PaymentBalanceRequest) returns (PaymentBalanceResponse) {
        option (google.api.http) = {
            get: "/api/payments/v1/payments/{imp_uid}/balance"
        };
    }

    rpc PaymentRPC(PaymentRequest) returns (PaymentResponse) {
        option (google.api.http) = {
            get: "/api/payments/v1/payments/{imp_uid}"
        };
    }

    rpc PaymentsRPC(PaymentsRequest) returns (PaymentsResponse) {
        option (google.api.http) = {
            get: "/api/payments/v1/payments"
        };
    }

    rpc PaymentMerchantUidRPC(PaymentMerchantUidRequest) returns (PaymentMerchantUidResponse) {
        option (google.api.http) = {
            get: "/api/payments/v1/payments/find/{merchant_uid}/{status}"
        };
    }

    rpc PaymentsMerchantUidRPC(PaymentsMerchantUidRequest) returns (PaymentsMerchantUidResponse) {
        option (google.api.http) = {
            get: "/api/payments/v1/payments/findAll/{merchant_uid}/{status}"
        };
    }

    rpc PaymentsStatusRPC(PaymentStatusRequest) returns (PaymentStatusResponse) {
        option (google.api.http) = {
            get: "/api/payments/v1/payments/status/{status}"
        };
    }

    rpc PaymentCancelRPC(PaymentCancelRequest) returns (PaymentCancelResponse) {
        option (google.api.http) = {
            post: "/api/payments/v1/payments/cancel"
            body: "*"
        };
    }

    rpc PaymentPrepareRPC(PaymentPrepareRequest) returns (PaymentPrepareResponse) {
        option (google.api.http) = {
            post: "/api/payments/v1/payments/prepare"
            body: "*"
        };
    }

    rpc PaymentGetPrepareRPC(PaymentGetPrepareRequest) returns (PaymentPrepareResponse) {
        option (google.api.http) = {
            get: "/api/payments/v1/payments/prepare/{merchant_uid}"
        };
    }
}

message Payment {
    int32 amount = 1;
    string apply_num = 2;
    int32 bank_code = 3;
    string bank_name = 4;
    string buyer_addr = 5;
    string buyer_email = 6;
    string buyer_name = 7;
    string buyer_postcode = 8;
    string buyer_tel = 9;
    int32 cancel_amount = 10;
    repeated CancelHistory cancel_history = 11;
    string cancel_reason = 12;
    repeated string cancel_receipt_urls = 13;
    int32 cancelled_at = 14;
    string card_code = 15;
    string card_name = 16;
    string card_number = 17;
    int32 card_quota = 18;
    int32 card_type = 19;
    bool cash_receipt_issued = 20;
    string channel = 21;
    string currency = 22;
    string custom_data = 23;
    string customer_uid = 24;
    string customer_uid_usage = 25;
    bool escrow = 26;
    string fail_reason = 27;
    int32 failed_at = 28;
    string imp_uid = 29;
    string merchant_uid = 30;
    string name = 31;
    int32 paid_at = 32;
    string pay_method = 33;
    string pg_id = 34;
    string pg_provider = 35;
    string pg_tid = 36;
    string receipt_url = 37;
    int32 started_at = 38;
    string status = 39;
    string user_agent = 40;
    string vbank_code = 41;
    int32 vbank_date = 42;
    string vbank_holder = 43;
    int32 vbank_issued_at = 44;
    string vbank_name = 45;
    string vbank_num = 46;
    Promotion promotion = 47;
    string emb_pg_provider = 48;
}

message CancelHistory {
    string pg_tid = 1;
    int32 amount = 2;
    int32 cancelled_at = 3;
    string reason = 4;
    string receipt_url = 5;
}

message PaymentPage {
    int32 total = 1;
    int32 previous = 2;
    int32 next = 3;
    repeated Payment list = 4;
}

message PaymentBalanceDetail {
    int32 tax_free = 1;
    int32 supply = 2;
    int32 vat = 3;
    int32 service = 4;
}

message PaymentBalance {
    int32 amount = 1;
    PaymentBalanceDetail cash_receipt = 2;
    PaymentBalanceDetail primary = 3;
    PaymentBalanceDetail secondary = 4;
    PaymentBalanceDetail discount = 5;
    repeated PaymentBalanceHistory histories = 6;
}

message PaymentBalanceHistory {
    PaymentBalanceDetail cash_receipt = 1;
    PaymentBalanceDetail primary = 2;
    PaymentBalanceDetail secondary = 3;
    PaymentBalanceDetail discount = 4;
    int32 created = 5;
}

message PaymentRequest {
    string imp_uid = 1;
}

message PaymentResponse{
    int32 code = 1;
    string message = 2;
    Payment response = 3;
}

message PaymentsRequest {
    repeated string imp_uid = 1;
}

message PaymentsResponse{
    int32 code = 1;
    string message = 2;
    repeated Payment response = 3;
}

message PaymentsMerchantUidRequest {
    string merchant_uid = 1;
    string status = 2;
    int32 page = 3;
    string sorting = 4;
}

message PaymentsMerchantUidResponse{
    int32 code = 1;
    string message = 2;
    PaymentPage response = 3;
}

message PaymentStatusRequest {
    string status = 1;
    int32 page = 2;
    int32 limit = 3;
    int32 from = 4;
    int32 to = 5;
    string sorting = 6;
}

message PaymentStatusResponse {
    int32 code = 1;
    string message = 2;
    PaymentPage response = 3;
}

message PaymentMerchantUidRequest {
    string merchant_uid = 1;
    string status = 2;
    string sorting = 3;
}

message PaymentMerchantUidResponse{
    int32 code = 1;
    string message = 2;
    Payment response = 3;
}

message PaymentCancelRequest {
    string imp_uid = 1;
    string merchant_uid = 2;
    double amount = 3;
    double tax_free = 4;
    double checksum = 5;
    string reason = 6;
    string refund_holder = 7;
    string refund_bank = 8;
    string refund_account = 9;
}

message PaymentCancelResponse {
    int32 code = 1;
    string message = 2;
    Payment response = 3;
}

message PaymentBalanceRequest {
    string imp_uid = 1;
}

message PaymentBalanceResponse {
    int32 code = 1;
    string message = 2;
    PaymentBalance response = 3;
}

message Prepare {
    string merchant_uid = 1;
    int32 amount = 2;
}

message PaymentPrepareRequest {
    string merchant_uid = 1;
    double amount = 2;
}

message PaymentPrepareResponse {
    int32 code = 1;
    string message = 2;
    Prepare response = 3;
}

message PaymentGetPrepareRequest {
    string merchant_uid = 1;
}

message Promotion {
    string id = 1;
    int32 discount = 2;
}